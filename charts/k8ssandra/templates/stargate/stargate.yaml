{{- if and (.Values.stargate.enabled) (.Values.cassandra.enabled) }}
  {{- $stargateVersion := .Values.stargate.version }}
  {{- $computedClusterVersion := "" }}
  {{- $computedImage := "" }}
  {{- if hasPrefix "3" .Values.cassandra.version }}
    {{- $computedClusterVersion = "3.11" }}
    {{- $computedImage = printf "stargateio/stargate-3_11:v%s" $stargateVersion }}
  {{- else }}
    {{- $computedClusterVersion = "4.0" }}
    {{- $computedImage = printf "stargateio/stargate-4_0:v%s" $stargateVersion }}
  {{- end }}
  {{- $image := default $computedImage (include "k8ssandra-common.flattenedImage" .Values.stargate.image) -}}
  {{- $clusterVersion := default $computedClusterVersion .Values.stargate.clusterVersion -}}
  {{- $heapMB := required "stargate.heapMB is required" .Values.stargate.heapMB -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ include "k8ssandra.datacenterName" . }}-stargate
  labels:
    release: {{ .Release.Name }}
    app: {{ .Release.Name }}-{{ include "k8ssandra.datacenterName" . }}-stargate
{{ include "k8ssandra.labels" . | indent 4 }}
spec:
  replicas: {{ required "stargate.replicas is required" .Values.stargate.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ include "k8ssandra.datacenterName" . }}-stargate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ include "k8ssandra.datacenterName" . }}-stargate
    spec:
      serviceAccountName: {{ default "default" .Values.stargate.serviceAccount }}
      initContainers:
          - name: wait-for-cassandra
            image: {{ include "k8ssandra-common.flattenedImage" .Values.stargate.waitForCassandra.image }}
            imagePullPolicy: {{ .Values.stargate.waitForCassandra.image.pullPolicy }}
            command:
              - sh
            args:
              - -c
              - |
                echo "Waiting for all Cassandra nodes in {{ include "k8ssandra.datacenterName" . }} to finish bootstrapping..."
                while [ "$(nslookup {{ include "k8ssandra.clusterName" . }}-{{ include "k8ssandra.datacenterName" . }}-service.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain | default "cluster.local" }} | grep Name | wc -l)" != "{{ include "k8ssandra.datacenterSize" . }}" ]; do
                    sleep 5
                done
                echo "Cassandra is ready. Starting Stargate..."
      containers:
        - name: {{ .Release.Name }}-{{ include "k8ssandra.datacenterName" . }}-stargate
          image: {{ $image }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.stargate.image.pullPolicy }}
          ports:
            - name: graphql
              containerPort: 8080
              protocol: TCP
            - name: authorization
              containerPort: 8081
              protocol: TCP
            - name: rest
              containerPort: 8082
              protocol: TCP
            - name: health
              containerPort: 8084
              protocol: TCP
            - name: metrics
              containerPort: 8085
              protocol: TCP
            - name: http-schemaless
              containerPort: 8090
              protocol: TCP
            - name: native
              containerPort: 9042
              protocol: TCP
            - name: inter-node-msg
              containerPort: 8609
              protocol: TCP
            - name: intra-node
              containerPort: 7000
              protocol: TCP
            - name: tls-intra-node
              containerPort: 7001
              protocol: TCP
          resources:
            limits:
              cpu: {{ required "stargate.cpuLimMillicores is required" .Values.stargate.cpuLimMillicores }}m
              memory: {{ mul 4 $heapMB }}Mi
            requests:
              cpu: {{ required "stargate.cpuReqMillicores" .Values.stargate.cpuReqMillicores }}m
              memory: {{ mul 2 $heapMB }}Mi
          env:
            - name: JAVA_OPTS
              value: >-
                -XX:+CrashOnOutOfMemoryError
                -Xms{{ $heapMB }}M
                -Xmx{{ $heapMB }}M
                {{- if .Values.stargate.cassandraYamlConfigMap }}
                -Dstargate.unsafe.cassandra_config_path=/config/cassandra.yaml
                {{- end}}
                {{- range .Values.stargate.javaOpts }}
                {{ . }}
                {{- end }}
            - name: CLUSTER_NAME
              value: {{ include "k8ssandra.clusterName" . | quote }}
            - name: CLUSTER_VERSION
              value: {{ $clusterVersion | quote }}
            - name: SEED
              value: "{{ include "k8ssandra.clusterName" . }}-seed-service.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain | default "cluster.local" }}"
            - name: DATACENTER_NAME
              value: {{ include "k8ssandra.datacenterName" . }}
            - name: RACK_NAME
              # The rack name is temporarily hard coded until we get multi-rack support implemented.
              # See https://github.com/k8ssandra/k8ssandra/issues/54.
              value: default
            - name: ENABLE_AUTH
              value: "true"
          livenessProbe:
            httpGet:
              path: /checker/liveness
              port: health
            timeoutSeconds: 10
            initialDelaySeconds: {{ .Values.stargate.livenessInitialDelaySeconds }}
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /checker/readiness
              port: health
            timeoutSeconds: 10
            initialDelaySeconds: {{ .Values.stargate.readinessInitialDelaySeconds }}
            failureThreshold: 5
          {{- if .Values.stargate.cassandraYamlConfigMap }}
          volumeMounts:
            - mountPath: /config
              name: cassandra-config
          {{- end }}
      {{- if .Values.stargate.affinity }}
      affinity: {{ toYaml .Values.stargate.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.stargate.tolerations }}
      tolerations: {{ toYaml .Values.stargate.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.stargate.cassandraYamlConfigMap }}
      volumes:
        - name: cassandra-config
          configMap:
            name: {{ .Values.stargate.cassandraYamlConfigMap }}
      {{- end }}
{{- end }}
