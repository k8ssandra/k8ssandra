k8ssandra:
  cassandraVersion: "3.11.9"
  clusterName: k8ssandra
  datacenterName: dc1
  rackName: default # this is the only supported value for now
  size: 1
  cassandraLibDirVolume:
    storageClass: standard
    size: 5Gi
  # If enabled, resources.limits and resources.requests must be defined
  allowMultipleNodesPerWorker: false
  resources: {}

stargate:
  # configuration regarding the Stargate API
  enabled: false
  replicas: 1
  clusterVersion: "3.11" # this is the only supported value for now
  containerImage: "auto" # chooses image based on clusterVersion

# Configuration regarding configuration of repair services
repair:
  # Reaper repair service and UI
  reaper:
    autoschedule: false
    enabled: true
    jmx:
      username: ""
      password: ""
    operator:
      enabled: true

backupRestore:
  medusa:
    # If enabled, bucketName and bucketSecret must be defined.
    enabled: false

    # Set to true to use the same bucket across multiple clusters.
    multiTenant: false

    # Accepted values are s3 and gcs
    storage: s3

    # Must be set to the name of the remote storage bucket where backups will be stored.
    bucketName: ""

    # Must be set and specify the name of the secret that stores the key file for Google
    # Cloud or AWS
    bucketSecret: ""

# Support for accessing the various web-interfaces via K8s ingress controllers.
# Depending on the ingress available in your cluster enable the appropriate
# section.
ingress:
  traefik:
    # Set to `true` to enable the templating of Traefik ingress custom resources
    enabled: false

    # Repair service
    repair:
      # Note this will **only** work if `ingress.traefik.enabled` is also `true`
      enabled: true

      # Name of the Traefik entrypoints where we want to source traffic.
      entrypoints:
        - web

      # Hostname Traefik should use for matching requests.
      host: repair.k8ssandra.cluster.local

    # Cassandra native transport ingress support
    cassandra:
      # Note this will **only** work if `ingress.traefik.enabled` is also `true`
      enabled: true

      # Name of the Traefik entrypoints for source traffic
      entrypoints:
        - cassandra

    # Monitoring web interfaces for Promtheus and Grafana
    monitoring:
      grafana:
        # Note this will **only** work if `ingress.traefik.enabled` is also `true`
        enabled: true

        # Name of the Traefik entrypoints where we want to source traffic.
        entrypoints:
          - web

        # Hostname Traefik should use for matching requests.
        host: grafana.k8ssandra.cluster.local

      prometheus:
        # Note this will **only** work if `ingress.traefik.enabled` is also `true`
        enabled: true

        # Name of the Traefik entrypoints where we want to source traffic.
        entrypoints:
          - web

        # Hostname Traefik should use for matching requests.
        host: prometheus.k8ssandra.cluster.local

monitoring:
  grafana:
    security:
      # TODO Add support for configuring credentials via a secret

      # The admin username
      adminUser: admin

      # The admin password
      adminPassword: secret

    # Grafana server configuration settings. Corresponds to settings in /etc/grafana/grafana.ini.
    config:
      # Corresponds to properties in the server section of grafana.ini.
      server:
        # This is the full URL used to access Grafana from a web browser. This setting
        # is also important if you have a reverse proxy in front of Grafana that
        # exposes it through a subpath. In that case add the subpath to the end of this
        # URL setting.
        rootUrl: ""

        # Set to to true to serve Grafana from subpath specified in rootUrl. If set to
        # true, rootUrl should be set as well.
        serveFromSubPath: false

  prometheus:
    # The external URL the Prometheus instances will be available under.
    externalUrl: ""

    # The route prefix Prometheus registers HTTP handlers for. This is useful,
    # if using ExternalURL and a proxy is rewriting HTTP routes of a request,
    # and the actual ExternalURL is still true, but the server serves requests
    # under a different route prefix. For example for use with `kubectl proxy`.
    routePrefix: ""

cleaner:
  image: burmanm/k8ssandra-client:latest

cass-operator:
  # Namespace-scoped installs are currently not (well) supported.
  # See K8C-19 for details.
  clusterWideInstall: true

  image: datastax/cass-operator:master-a45fd80b40e0129e8883a953d595ca85e4b7ce79

kube-prometheus-stack:
  alertmanager:
    enabled: false

  kubeStateMetrics:
    enabled: false

  grafana:
    enabled: false

  nodeExporter:
    enabled: false

  kubeletService:
    enabled: false

  kubeControllerManager:
    enabled: false

  kubelet:
    enabled: false

  kubeApiServer:
    enabled: false

  prometheus:
    enabled: false

