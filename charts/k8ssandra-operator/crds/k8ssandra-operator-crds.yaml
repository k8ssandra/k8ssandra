apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cassandrabackups.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: CassandraBackup
    listKind: CassandraBackupList
    plural: cassandrabackups
    singular: cassandrabackup
  scope: Namespaced
  versions:
  - deprecated: true
    deprecationWarning: medusa.k8ssandra.com/v1alpha1 CassandraBackup/CassandraRestore
      are deprecated, use medusa.k8ssandra.com/v1alpha1 MedusaBackupJob/MedusaRestoreJob
      instead.
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CassandraBackup is the Schema for the cassandrabackups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CassandraBackupSpec defines the desired state of CassandraBackup
            properties:
              backupType:
                default: differential
                description: 'The type of the backup: "full" or "differential"'
                enum:
                - differential
                - full
                type: string
              cassandraDatacenter:
                description: The name of the CassandraDatacenter to back up
                type: string
              name:
                description: The name of the backup. TODO document format of generated
                  name
                type: string
            required:
            - cassandraDatacenter
            type: object
          status:
            description: CassandraBackupStatus defines the observed state of CassandraBackup
            properties:
              cassdcTemplateSpec:
                properties:
                  metadata:
                    description: Standard object metadata
                    type: object
                  spec:
                    description: CassandraDatacenterSpec defines the desired state
                      of a CassandraDatacenter
                    properties:
                      additionalLabels:
                        additionalProperties:
                          type: string
                        description: Additional Labels allows to define additional
                          labels that will be included in all objects created by the
                          operator. Note, user can override values set by default
                          from the cass-operator and doing so could break cass-operator
                          functionality.
                        type: object
                      additionalSeeds:
                        items:
                          type: string
                        type: array
                      additionalServiceConfig:
                        description: AdditionalServiceConfig allows to define additional
                          parameters that are included in the created Services. Note,
                          user can override values set by cass-operator and doing
                          so could break cass-operator functionality. Avoid label
                          "cass-operator" and anything that starts with "cassandra.datastax.com/"
                        properties:
                          additionalSeedService:
                            description: ServiceConfigAdditions exposes additional
                              options for each service
                            properties:
                              additionalAnnotations:
                                additionalProperties:
                                  type: string
                                type: object
                              additionalLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          allpodsService:
                            description: ServiceConfigAdditions exposes additional
                              options for each service
                            properties:
                              additionalAnnotations:
                                additionalProperties:
                                  type: string
                                type: object
                              additionalLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          dcService:
                            description: ServiceConfigAdditions exposes additional
                              options for each service
                            properties:
                              additionalAnnotations:
                                additionalProperties:
                                  type: string
                                type: object
                              additionalLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          nodePortService:
                            description: ServiceConfigAdditions exposes additional
                              options for each service
                            properties:
                              additionalAnnotations:
                                additionalProperties:
                                  type: string
                                type: object
                              additionalLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          seedService:
                            description: ServiceConfigAdditions exposes additional
                              options for each service
                            properties:
                              additionalAnnotations:
                                additionalProperties:
                                  type: string
                                type: object
                              additionalLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                      allowMultipleNodesPerWorker:
                        description: Turning this option on allows multiple server
                          pods to be created on a k8s worker node. By default the
                          operator creates just one server pod per k8s worker node
                          using k8s podAntiAffinity and requiredDuringSchedulingIgnoredDuringExecution.
                        type: boolean
                      canaryUpgrade:
                        description: Indicates that configuration and container image
                          changes should only be pushed to the first rack of the datacenter
                        type: boolean
                      canaryUpgradeCount:
                        description: The number of nodes that will be updated when
                          CanaryUpgrade is true. Note that the value is either 0 or
                          greater than the rack size, then all nodes in the rack will
                          get updated.
                        format: int32
                        type: integer
                      cdc:
                        description: CDC allows configuration of the change data capture
                          agent which can run within the Management API container.
                          Use it to send data to Pulsar.
                        properties:
                          cdcConcurrentProcessors:
                            type: integer
                          cdcPollIntervalM:
                            type: integer
                          cdcWorkingDir:
                            type: string
                          errorCommitLogReprocessEnabled:
                            type: boolean
                          pulsarAuthParams:
                            type: string
                          pulsarAuthPluginClassName:
                            type: string
                          pulsarBatchDelayInMs:
                            type: integer
                          pulsarKeyBasedBatcher:
                            type: boolean
                          pulsarMaxPendingMessages:
                            type: integer
                          pulsarMaxPendingMessagesAcrossPartitions:
                            type: integer
                          pulsarServiceUrl:
                            minLength: 1
                            type: string
                          sslAllowInsecureConnection:
                            type: string
                          sslCipherSuites:
                            type: string
                          sslEnabledProtocols:
                            type: string
                          sslHostnameVerificationEnable:
                            type: string
                          sslKeystorePassword:
                            type: string
                          sslKeystorePath:
                            type: string
                          sslProvider:
                            type: string
                          sslTruststorePassword:
                            type: string
                          sslTruststorePath:
                            type: string
                          sslTruststoreType:
                            type: string
                          topicPrefix:
                            type: string
                        required:
                        - pulsarServiceUrl
                        type: object
                      clusterName:
                        description: The name by which CQL clients and instances will
                          know the cluster. If the same cluster name is shared by
                          multiple Datacenters in the same Kubernetes namespace, they
                          will join together in a multi-datacenter cluster.
                        minLength: 2
                        type: string
                      config:
                        description: Config for the server, in YAML format
                        format: byte
                        type: string
                        x-kubernetes-preserve-unknown-fields: true
                      configBuilderImage:
                        description: Container image for the config builder init container.
                          Overrides value from ImageConfig ConfigBuilderImage
                        type: string
                      configBuilderResources:
                        description: Kubernetes resource requests and limits per server
                          config initialization container.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      configSecret:
                        description: "ConfigSecret is the name of a secret that contains
                          configuration for Cassandra. The secret is expected to have
                          a property named config whose value should be a JSON formatted
                          string that should look like this: \n config: |- { \"cassandra-yaml\":
                          { \"read_request_timeout_in_ms\": 10000 }, \"jmv-options\":
                          { \"max_heap_size\": 1024M } } \n ConfigSecret is mutually
                          exclusive with Config. ConfigSecret takes precedence and
                          will be used exclusively if both properties are set. The
                          operator sets a watch such that an update to the secret
                          will trigger an update of the StatefulSets."
                        type: string
                      disableSystemLoggerSidecar:
                        description: Configuration for disabling the simple log tailing
                          sidecar container. Our default is to have it enabled.
                        type: boolean
                      dockerImageRunsAsCassandra:
                        description: Does the Server Docker image run as the Cassandra
                          user? Defaults to true
                        type: boolean
                      dseWorkloads:
                        properties:
                          analyticsEnabled:
                            type: boolean
                          graphEnabled:
                            type: boolean
                          searchEnabled:
                            type: boolean
                        type: object
                      forceUpgradeRacks:
                        description: Rack names in this list are set to the latest
                          StatefulSet configuration even if Cassandra nodes are down.
                          Use this to recover from an upgrade that couldn't roll out.
                        items:
                          type: string
                        type: array
                      managementApiAuth:
                        description: Config for the Management API certificates
                        properties:
                          insecure:
                            type: object
                          manual:
                            properties:
                              clientSecretName:
                                type: string
                              serverSecretName:
                                type: string
                              skipSecretValidation:
                                type: boolean
                            required:
                            - clientSecretName
                            - serverSecretName
                            type: object
                        type: object
                      networking:
                        properties:
                          hostNetwork:
                            type: boolean
                          nodePort:
                            properties:
                              internode:
                                type: integer
                              internodeSSL:
                                type: integer
                              native:
                                type: integer
                              nativeSSL:
                                type: integer
                            type: object
                        type: object
                      nodeAffinityLabels:
                        additionalProperties:
                          type: string
                        description: NodeAffinityLabels to pin the Datacenter, using
                          node affinity
                        type: object
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: 'A map of label keys and values to restrict Cassandra
                          node scheduling to k8s workers with matchiing labels. More
                          info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector'
                        type: object
                      podTemplateSpec:
                        description: PodTemplate provides customisation options (labels,
                          annotations, affinity rules, resource requests, and so on)
                          for the cassandra pods
                        properties:
                          metadata:
                            description: 'Standard object''s metadata. More info:
                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                            type: object
                          spec:
                            description: 'Specification of the desired behavior of
                              the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                            properties:
                              activeDeadlineSeconds:
                                description: Optional duration in seconds the pod
                                  may be active on the node relative to StartTime
                                  before the system will actively try to mark it failed
                                  and kill associated containers. Value must be a
                                  positive integer.
                                format: int64
                                type: integer
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the
                                          most preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit
                                            weight 0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to an update),
                                          the system may or may not try to eventually
                                          evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                    This field is beta-level and is
                                                    only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod
                                          label update), the system may or may not
                                          try to eventually evict the pod from its
                                          node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          anti-affinity expressions specified by this
                                          field, but it may choose a node that violates
                                          one or more of the expressions. The node
                                          that is most preferred is the one with the
                                          greatest sum of weights, i.e. for each node
                                          that meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          anti-affinity expressions, etc.), compute
                                          a sum by iterating through the elements
                                          of this field and adding "weight" to the
                                          sum if the node has pods which matches the
                                          corresponding podAffinityTerm; the node(s)
                                          with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                    This field is beta-level and is
                                                    only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the anti-affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to a pod label update), the system may
                                          or may not try to eventually evict the pod
                                          from its node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces. This field
                                                is beta-level and is only honored
                                                when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containers:
                                description: List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod. Cannot
                                  be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        docker image''s CMD is used if this is not
                                        provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The docker image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                              fieldRef:
                                                description: 'Selects a field of the
                                                  pod: supports metadata.name, metadata.namespace,
                                                  `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP, status.podIPs.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and requests.ephemeral-storage)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                        type: object
                                      type: array
                                    image:
                                      description: 'Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level
                                        config management to default or override container
                                        images in workload controllers like Deployments
                                        and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: Actions that the management system
                                        should take in response to container lifecycle
                                        events. Cannot be updated.
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately
                                            after a container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart policy.
                                            Other management of the container blocks
                                            until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: 'PreStop is called immediately
                                            before a container is terminated due to
                                            an API request or management event such
                                            as liveness/startup probe failure, preemption,
                                            resource contention, etc. The handler
                                            is not called if the container crashes
                                            or exits. The Pod''s termination grace
                                            period countdown begins before the PreStop
                                            hook is executed. Regardless of the outcome
                                            of the handler, the container will eventually
                                            terminate within the Pod''s termination
                                            grace period (unless delayed by finalizers).
                                            Other management of the container blocks
                                            until the hook completes or until the
                                            termination grace period is reached. More
                                            info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot be
                                        updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the
                                        container. Exposing a port here gives the
                                        system additional information about the network
                                        connections a container uses, but is primarily
                                        informational. Not specifying a port here
                                        DOES NOT prevent that port from being exposed.
                                        Any port which is listening on the default
                                        "0.0.0.0" address inside a container will
                                        be accessible from the network. Cannot be
                                        updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: Number of port to expose
                                              on the host. If specified, this must
                                              be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must
                                              match ContainerPort. Most containers
                                              do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service
                                        readiness. Container will be removed from
                                        service endpoints if the probe fails. Cannot
                                        be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'SecurityContext defines the security
                                        options the container should be run with.
                                        If set, the fields of SecurityContext override
                                        the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: Run container in privileged
                                            mode. Processes in privileged containers
                                            are essentially equivalent to root on
                                            the host. Defaults to false. Note that
                                            this field cannot be set when spec.os.name
                                            is windows.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type
                                            of proc mount to use for the containers.
                                            The default is DefaultProcMount which
                                            uses the container runtime defaults for
                                            readonly paths and masked paths. This
                                            requires the ProcMountType feature flag
                                            to be enabled. Note that this field cannot
                                            be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: The SELinux context to be applied
                                            to the container. If unspecified, the
                                            container runtime will allocate a random
                                            SELinux context for each container.  May
                                            also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: The seccomp options to use
                                            by this container. If seccomp options
                                            are provided at both the pod & container
                                            level, the container options override
                                            the pod options. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: localhostProfile indicates
                                                a profile defined in a file on the
                                                node should be used. The profile must
                                                be preconfigured on the node to work.
                                                Must be a descending path, relative
                                                to the kubelet's configured seccomp
                                                profile location. Must only be set
                                                if type is "Localhost".
                                              type: string
                                            type:
                                              description: "type indicates which kind
                                                of seccomp profile will be applied.
                                                Valid options are: \n Localhost -
                                                a profile defined in a file on the
                                                node should be used. RuntimeDefault
                                                - the container runtime default profile
                                                should be used. Unconfined - no profile
                                                should be applied."
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: The Windows specific settings
                                            applied to all containers. If unspecified,
                                            the options from the PodSecurityContext
                                            will be used. If set in both SecurityContext
                                            and PodSecurityContext, the value specified
                                            in SecurityContext takes precedence. Note
                                            that this field cannot be set when spec.os.name
                                            is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: GMSACredentialSpec is where
                                                the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA credential
                                                spec named by the GMSACredentialSpecName
                                                field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: HostProcess determines
                                                if a container should be run as a
                                                'Host Process' container. This field
                                                is alpha-level and will only be honored
                                                by components that enable the WindowsHostProcessContainers
                                                feature flag. Setting this field without
                                                the feature flag will result in errors
                                                when validating the Pod. All of a
                                                Pod's containers must have the same
                                                effective HostProcess value (it is
                                                not allowed to have a mix of HostProcess
                                                containers and non-HostProcess containers).  In
                                                addition, if HostProcess is true then
                                                HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: The UserName in Windows
                                                to run the entrypoint of the container
                                                process. Defaults to the user specified
                                                in image metadata if unspecified.
                                                May also be set in PodSecurityContext.
                                                If set in both SecurityContext and
                                                PodSecurityContext, the value specified
                                                in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: 'StartupProbe indicates that the
                                        Pod has successfully initialized. If specified,
                                        no other probes are executed until this completes
                                        successfully. If this probe fails, the Pod
                                        will be restarted, just as if the livenessProbe
                                        failed. This can be used to provide different
                                        probe parameters at the beginning of a Pod''s
                                        lifecycle, when it might take a long time
                                        to load data or warm a cache, than during
                                        steady-state operation. This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: Whether this container should allocate
                                        a buffer for stdin in the container runtime.
                                        If this is not set, reads from stdin in the
                                        container will always result in EOF. Default
                                        is false.
                                      type: boolean
                                    stdinOnce:
                                      description: Whether the container runtime should
                                        close the stdin channel after it has been
                                        opened by a single attach. When stdin is true
                                        the stdin stream will remain open across multiple
                                        attach sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is empty
                                        until the first client attaches to stdin,
                                        and then remains open and accepts data until
                                        the client disconnects, at which time stdin
                                        is closed and remains closed until the container
                                        is restarted. If this flag is false, a container
                                        processes that reads from stdin will never
                                        receive an EOF. Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    tty:
                                      description: Whether this container should allocate
                                        a TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: mountPropagation determines
                                              how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is
                                              used. This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the
                                              volume from which the container's volume
                                              should be mounted. Behaves similarly
                                              to SubPath but environment variable
                                              references $(VAR_NAME) are expanded
                                              using the container's environment. Defaults
                                              to "" (volume's root). SubPathExpr and
                                              SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              dnsConfig:
                                description: Specifies the DNS parameters of a pod.
                                  Parameters specified here will be merged to the
                                  generated DNS configuration based on DNSPolicy.
                                properties:
                                  nameservers:
                                    description: A list of DNS name server IP addresses.
                                      This will be appended to the base nameservers
                                      generated from DNSPolicy. Duplicated nameservers
                                      will be removed.
                                    items:
                                      type: string
                                    type: array
                                  options:
                                    description: A list of DNS resolver options. This
                                      will be merged with the base options generated
                                      from DNSPolicy. Duplicated entries will be removed.
                                      Resolution options given in Options will override
                                      those that appear in the base DNSPolicy.
                                    items:
                                      description: PodDNSConfigOption defines DNS
                                        resolver options of a pod.
                                      properties:
                                        name:
                                          description: Required.
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  searches:
                                    description: A list of DNS search domains for
                                      host-name lookup. This will be appended to the
                                      base search paths generated from DNSPolicy.
                                      Duplicated search paths will be removed.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              dnsPolicy:
                                description: Set DNS policy for the pod. Defaults
                                  to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet',
                                  'ClusterFirst', 'Default' or 'None'. DNS parameters
                                  given in DNSConfig will be merged with the policy
                                  selected with DNSPolicy. To have DNS options set
                                  along with hostNetwork, you have to specify DNS
                                  policy explicitly to 'ClusterFirstWithHostNet'.
                                type: string
                              enableServiceLinks:
                                description: 'EnableServiceLinks indicates whether
                                  information about services should be injected into
                                  pod''s environment variables, matching the syntax
                                  of Docker links. Optional: Defaults to true.'
                                type: boolean
                              ephemeralContainers:
                                description: List of ephemeral containers run in this
                                  pod. Ephemeral containers may be run in an existing
                                  pod to perform user-initiated actions such as debugging.
                                  This list cannot be specified when creating a pod,
                                  and it cannot be modified by updating the pod spec.
                                  In order to add an ephemeral container to an existing
                                  pod, use the pod's ephemeralcontainers subresource.
                                  This field is beta-level and available on clusters
                                  that haven't disabled the EphemeralContainers feature
                                  gate.
                                items:
                                  description: "An EphemeralContainer is a temporary
                                    container that you may add to an existing Pod
                                    for user-initiated activities such as debugging.
                                    Ephemeral containers have no resource or scheduling
                                    guarantees, and they will not be restarted when
                                    they exit or when a Pod is removed or restarted.
                                    The kubelet may evict a Pod if an ephemeral container
                                    causes the Pod to exceed its resource allocation.
                                    \n To add an ephemeral container, use the ephemeralcontainers
                                    subresource of an existing Pod. Ephemeral containers
                                    may not be removed or restarted. \n This is a
                                    beta feature available on clusters that haven't
                                    disabled the EphemeralContainers feature gate."
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        docker image''s CMD is used if this is not
                                        provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The docker image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                              fieldRef:
                                                description: 'Selects a field of the
                                                  pod: supports metadata.name, metadata.namespace,
                                                  `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP, status.podIPs.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and requests.ephemeral-storage)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                        type: object
                                      type: array
                                    image:
                                      description: 'Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: Lifecycle is not allowed for ephemeral
                                        containers.
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately
                                            after a container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart policy.
                                            Other management of the container blocks
                                            until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: 'PreStop is called immediately
                                            before a container is terminated due to
                                            an API request or management event such
                                            as liveness/startup probe failure, preemption,
                                            resource contention, etc. The handler
                                            is not called if the container crashes
                                            or exits. The Pod''s termination grace
                                            period countdown begins before the PreStop
                                            hook is executed. Regardless of the outcome
                                            of the handler, the container will eventually
                                            terminate within the Pod''s termination
                                            grace period (unless delayed by finalizers).
                                            Other management of the container blocks
                                            until the hook completes or until the
                                            termination grace period is reached. More
                                            info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the ephemeral container
                                        specified as a DNS_LABEL. This name must be
                                        unique among all containers, init containers
                                        and ephemeral containers.
                                      type: string
                                    ports:
                                      description: Ports are not allowed for ephemeral
                                        containers.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: Number of port to expose
                                              on the host. If specified, this must
                                              be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must
                                              match ContainerPort. Most containers
                                              do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: Resources are not allowed for ephemeral
                                        containers. Ephemeral containers use spare
                                        resources already allocated to the pod.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'Optional: SecurityContext defines
                                        the security options the ephemeral container
                                        should be run with. If set, the fields of
                                        SecurityContext override the equivalent fields
                                        of PodSecurityContext.'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: Run container in privileged
                                            mode. Processes in privileged containers
                                            are essentially equivalent to root on
                                            the host. Defaults to false. Note that
                                            this field cannot be set when spec.os.name
                                            is windows.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type
                                            of proc mount to use for the containers.
                                            The default is DefaultProcMount which
                                            uses the container runtime defaults for
                                            readonly paths and masked paths. This
                                            requires the ProcMountType feature flag
                                            to be enabled. Note that this field cannot
                                            be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: The SELinux context to be applied
                                            to the container. If unspecified, the
                                            container runtime will allocate a random
                                            SELinux context for each container.  May
                                            also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: The seccomp options to use
                                            by this container. If seccomp options
                                            are provided at both the pod & container
                                            level, the container options override
                                            the pod options. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: localhostProfile indicates
                                                a profile defined in a file on the
                                                node should be used. The profile must
                                                be preconfigured on the node to work.
                                                Must be a descending path, relative
                                                to the kubelet's configured seccomp
                                                profile location. Must only be set
                                                if type is "Localhost".
                                              type: string
                                            type:
                                              description: "type indicates which kind
                                                of seccomp profile will be applied.
                                                Valid options are: \n Localhost -
                                                a profile defined in a file on the
                                                node should be used. RuntimeDefault
                                                - the container runtime default profile
                                                should be used. Unconfined - no profile
                                                should be applied."
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: The Windows specific settings
                                            applied to all containers. If unspecified,
                                            the options from the PodSecurityContext
                                            will be used. If set in both SecurityContext
                                            and PodSecurityContext, the value specified
                                            in SecurityContext takes precedence. Note
                                            that this field cannot be set when spec.os.name
                                            is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: GMSACredentialSpec is where
                                                the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA credential
                                                spec named by the GMSACredentialSpecName
                                                field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: HostProcess determines
                                                if a container should be run as a
                                                'Host Process' container. This field
                                                is alpha-level and will only be honored
                                                by components that enable the WindowsHostProcessContainers
                                                feature flag. Setting this field without
                                                the feature flag will result in errors
                                                when validating the Pod. All of a
                                                Pod's containers must have the same
                                                effective HostProcess value (it is
                                                not allowed to have a mix of HostProcess
                                                containers and non-HostProcess containers).  In
                                                addition, if HostProcess is true then
                                                HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: The UserName in Windows
                                                to run the entrypoint of the container
                                                process. Defaults to the user specified
                                                in image metadata if unspecified.
                                                May also be set in PodSecurityContext.
                                                If set in both SecurityContext and
                                                PodSecurityContext, the value specified
                                                in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: Whether this container should allocate
                                        a buffer for stdin in the container runtime.
                                        If this is not set, reads from stdin in the
                                        container will always result in EOF. Default
                                        is false.
                                      type: boolean
                                    stdinOnce:
                                      description: Whether the container runtime should
                                        close the stdin channel after it has been
                                        opened by a single attach. When stdin is true
                                        the stdin stream will remain open across multiple
                                        attach sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is empty
                                        until the first client attaches to stdin,
                                        and then remains open and accepts data until
                                        the client disconnects, at which time stdin
                                        is closed and remains closed until the container
                                        is restarted. If this flag is false, a container
                                        processes that reads from stdin will never
                                        receive an EOF. Default is false
                                      type: boolean
                                    targetContainerName:
                                      description: "If set, the name of the container
                                        from PodSpec that this ephemeral container
                                        targets. The ephemeral container will be run
                                        in the namespaces (IPC, PID, etc) of this
                                        container. If not set then the ephemeral container
                                        uses the namespaces configured in the Pod
                                        spec. \n The container runtime must implement
                                        support for this feature. If the runtime does
                                        not support namespace targeting then the result
                                        of setting this field is undefined."
                                      type: string
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    tty:
                                      description: Whether this container should allocate
                                        a TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Subpath mounts are not allowed
                                        for ephemeral containers. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: mountPropagation determines
                                              how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is
                                              used. This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the
                                              volume from which the container's volume
                                              should be mounted. Behaves similarly
                                              to SubPath but environment variable
                                              references $(VAR_NAME) are expanded
                                              using the container's environment. Defaults
                                              to "" (volume's root). SubPathExpr and
                                              SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              hostAliases:
                                description: HostAliases is an optional list of hosts
                                  and IPs that will be injected into the pod's hosts
                                  file if specified. This is only valid for non-hostNetwork
                                  pods.
                                items:
                                  description: HostAlias holds the mapping between
                                    IP and hostnames that will be injected as an entry
                                    in the pod's hosts file.
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      items:
                                        type: string
                                      type: array
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                  type: object
                                type: array
                              hostIPC:
                                description: 'Use the host''s ipc namespace. Optional:
                                  Default to false.'
                                type: boolean
                              hostNetwork:
                                description: Host networking requested for this pod.
                                  Use the host's network namespace. If this option
                                  is set, the ports that will be used must be specified.
                                  Default to false.
                                type: boolean
                              hostPID:
                                description: 'Use the host''s pid namespace. Optional:
                                  Default to false.'
                                type: boolean
                              hostname:
                                description: Specifies the hostname of the Pod If
                                  not specified, the pod's hostname will be set to
                                  a system-defined value.
                                type: string
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual
                                  puller implementations for them to use. For example,
                                  in the case of docker, only DockerConfig type secrets
                                  are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              initContainers:
                                description: 'List of initialization containers belonging
                                  to the pod. Init containers are executed in order
                                  prior to containers being started. If any init container
                                  fails, the pod is considered to have failed and
                                  is handled according to its restartPolicy. The name
                                  for an init container or normal container must be
                                  unique among all containers. Init containers may
                                  not have Lifecycle actions, Readiness probes, Liveness
                                  probes, or Startup probes. The resourceRequirements
                                  of an init container are taken into account during
                                  scheduling by finding the highest request/limit
                                  for each resource type, and then using the max of
                                  of that value or the sum of the normal containers.
                                  Limits are applied to init containers in a similar
                                  fashion. Init containers cannot currently be added
                                  or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        docker image''s CMD is used if this is not
                                        provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The docker image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                              fieldRef:
                                                description: 'Selects a field of the
                                                  pod: supports metadata.name, metadata.namespace,
                                                  `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP, status.podIPs.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and requests.ephemeral-storage)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                        type: object
                                      type: array
                                    image:
                                      description: 'Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level
                                        config management to default or override container
                                        images in workload controllers like Deployments
                                        and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: Actions that the management system
                                        should take in response to container lifecycle
                                        events. Cannot be updated.
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately
                                            after a container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart policy.
                                            Other management of the container blocks
                                            until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: 'PreStop is called immediately
                                            before a container is terminated due to
                                            an API request or management event such
                                            as liveness/startup probe failure, preemption,
                                            resource contention, etc. The handler
                                            is not called if the container crashes
                                            or exits. The Pod''s termination grace
                                            period countdown begins before the PreStop
                                            hook is executed. Regardless of the outcome
                                            of the handler, the container will eventually
                                            terminate within the Pod''s termination
                                            grace period (unless delayed by finalizers).
                                            Other management of the container blocks
                                            until the hook completes or until the
                                            termination grace period is reached. More
                                            info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          properties:
                                            exec:
                                              description: Exec specifies the action
                                                to take.
                                              properties:
                                                command:
                                                  description: Command is the command
                                                    line to execute inside the container,
                                                    the working directory for the
                                                    command  is root ('/') in the
                                                    container's filesystem. The command
                                                    is simply exec'd, it is not run
                                                    inside a shell, so traditional
                                                    shell instructions ('|', etc)
                                                    won't work. To use a shell, you
                                                    need to explicitly call out to
                                                    that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero
                                                    is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http
                                                request to perform.
                                              properties:
                                                host:
                                                  description: Host name to connect
                                                    to, defaults to the pod IP. You
                                                    probably want to set "Host" in
                                                    httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: The header field
                                                          name
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Name or number of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting
                                                    to the host. Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            tcpSocket:
                                              description: Deprecated. TCPSocket is
                                                NOT supported as a LifecycleHandler
                                                and kept for the backward compatibility.
                                                There are no validation of this field
                                                and lifecycle hooks will fail in runtime
                                                when tcp handler is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Number or name of the
                                                    port to access on the container.
                                                    Number must be in the range 1
                                                    to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot be
                                        updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the
                                        container. Exposing a port here gives the
                                        system additional information about the network
                                        connections a container uses, but is primarily
                                        informational. Not specifying a port here
                                        DOES NOT prevent that port from being exposed.
                                        Any port which is listening on the default
                                        "0.0.0.0" address inside a container will
                                        be accessible from the network. Cannot be
                                        updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: Number of port to expose
                                              on the host. If specified, this must
                                              be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must
                                              match ContainerPort. Most containers
                                              do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service
                                        readiness. Container will be removed from
                                        service endpoints if the probe fails. Cannot
                                        be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'SecurityContext defines the security
                                        options the container should be run with.
                                        If set, the fields of SecurityContext override
                                        the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        privileged:
                                          description: Run container in privileged
                                            mode. Processes in privileged containers
                                            are essentially equivalent to root on
                                            the host. Defaults to false. Note that
                                            this field cannot be set when spec.os.name
                                            is windows.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type
                                            of proc mount to use for the containers.
                                            The default is DefaultProcMount which
                                            uses the container runtime defaults for
                                            readonly paths and masked paths. This
                                            requires the ProcMountType feature flag
                                            to be enabled. Note that this field cannot
                                            be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: The SELinux context to be applied
                                            to the container. If unspecified, the
                                            container runtime will allocate a random
                                            SELinux context for each container.  May
                                            also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: The seccomp options to use
                                            by this container. If seccomp options
                                            are provided at both the pod & container
                                            level, the container options override
                                            the pod options. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: localhostProfile indicates
                                                a profile defined in a file on the
                                                node should be used. The profile must
                                                be preconfigured on the node to work.
                                                Must be a descending path, relative
                                                to the kubelet's configured seccomp
                                                profile location. Must only be set
                                                if type is "Localhost".
                                              type: string
                                            type:
                                              description: "type indicates which kind
                                                of seccomp profile will be applied.
                                                Valid options are: \n Localhost -
                                                a profile defined in a file on the
                                                node should be used. RuntimeDefault
                                                - the container runtime default profile
                                                should be used. Unconfined - no profile
                                                should be applied."
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: The Windows specific settings
                                            applied to all containers. If unspecified,
                                            the options from the PodSecurityContext
                                            will be used. If set in both SecurityContext
                                            and PodSecurityContext, the value specified
                                            in SecurityContext takes precedence. Note
                                            that this field cannot be set when spec.os.name
                                            is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: GMSACredentialSpec is where
                                                the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA credential
                                                spec named by the GMSACredentialSpecName
                                                field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: HostProcess determines
                                                if a container should be run as a
                                                'Host Process' container. This field
                                                is alpha-level and will only be honored
                                                by components that enable the WindowsHostProcessContainers
                                                feature flag. Setting this field without
                                                the feature flag will result in errors
                                                when validating the Pod. All of a
                                                Pod's containers must have the same
                                                effective HostProcess value (it is
                                                not allowed to have a mix of HostProcess
                                                containers and non-HostProcess containers).  In
                                                addition, if HostProcess is true then
                                                HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: The UserName in Windows
                                                to run the entrypoint of the container
                                                process. Defaults to the user specified
                                                in image metadata if unspecified.
                                                May also be set in PodSecurityContext.
                                                If set in both SecurityContext and
                                                PodSecurityContext, the value specified
                                                in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: 'StartupProbe indicates that the
                                        Pod has successfully initialized. If specified,
                                        no other probes are executed until this completes
                                        successfully. If this probe fails, the Pod
                                        will be restarted, just as if the livenessProbe
                                        failed. This can be used to provide different
                                        probe parameters at the beginning of a Pod''s
                                        lifecycle, when it might take a long time
                                        to load data or warm a cache, than during
                                        steady-state operation. This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies an action involving
                                            a GRPC port. This is an alpha field and
                                            requires enabling GRPCContainerProbe feature
                                            gate.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              description: "Service is the name of
                                                the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                                \n If this is not specified, the default
                                                behavior is defined by gRPC."
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully
                                            upon probe failure. The grace period is
                                            the duration in seconds after the processes
                                            running in the pod are sent a termination
                                            signal and the time when the processes
                                            are forcibly halted with a kill signal.
                                            Set this value longer than the expected
                                            cleanup time for your process. If this
                                            value is nil, the pod's terminationGracePeriodSeconds
                                            will be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: Whether this container should allocate
                                        a buffer for stdin in the container runtime.
                                        If this is not set, reads from stdin in the
                                        container will always result in EOF. Default
                                        is false.
                                      type: boolean
                                    stdinOnce:
                                      description: Whether the container runtime should
                                        close the stdin channel after it has been
                                        opened by a single attach. When stdin is true
                                        the stdin stream will remain open across multiple
                                        attach sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is empty
                                        until the first client attaches to stdin,
                                        and then remains open and accepts data until
                                        the client disconnects, at which time stdin
                                        is closed and remains closed until the container
                                        is restarted. If this flag is false, a container
                                        processes that reads from stdin will never
                                        receive an EOF. Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    tty:
                                      description: Whether this container should allocate
                                        a TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: mountPropagation determines
                                              how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is
                                              used. This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the
                                              volume from which the container's volume
                                              should be mounted. Behaves similarly
                                              to SubPath but environment variable
                                              references $(VAR_NAME) are expanded
                                              using the container's environment. Defaults
                                              to "" (volume's root). SubPathExpr and
                                              SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              nodeName:
                                description: NodeName is a request to schedule this
                                  pod onto a specific node. If it is non-empty, the
                                  scheduler simply schedules this pod onto that node,
                                  assuming that it fits resource requirements.
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: 'NodeSelector is a selector which must
                                  be true for the pod to fit on a node. Selector which
                                  must match a node''s labels for the pod to be scheduled
                                  on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                type: object
                                x-kubernetes-map-type: atomic
                              os:
                                description: "Specifies the OS of the containers in
                                  the pod. Some pod and container fields are restricted
                                  if this is set. \n If the OS field is set to linux,
                                  the following fields must be unset: -securityContext.windowsOptions
                                  \n If the OS field is set to windows, following
                                  fields must be unset: - spec.hostPID - spec.hostIPC
                                  - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile
                                  - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy
                                  - spec.securityContext.sysctls - spec.shareProcessNamespace
                                  - spec.securityContext.runAsUser - spec.securityContext.runAsGroup
                                  - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions
                                  - spec.containers[*].securityContext.seccompProfile
                                  - spec.containers[*].securityContext.capabilities
                                  - spec.containers[*].securityContext.readOnlyRootFilesystem
                                  - spec.containers[*].securityContext.privileged
                                  - spec.containers[*].securityContext.allowPrivilegeEscalation
                                  - spec.containers[*].securityContext.procMount -
                                  spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup
                                  This is an alpha field and requires the IdentifyPodOS
                                  feature"
                                properties:
                                  name:
                                    description: 'Name is the name of the operating
                                      system. The currently supported values are linux
                                      and windows. Additional value may be defined
                                      in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                      Clients should expect to handle additional values
                                      and treat unrecognized values in this field
                                      as os: null'
                                    type: string
                                required:
                                - name
                                type: object
                              overhead:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Overhead represents the resource overhead
                                  associated with running a pod for a given RuntimeClass.
                                  This field will be autopopulated at admission time
                                  by the RuntimeClass admission controller. If the
                                  RuntimeClass admission controller is enabled, overhead
                                  must not be set in Pod create requests. The RuntimeClass
                                  admission controller will reject Pod create requests
                                  which have the overhead already set. If RuntimeClass
                                  is configured and selected in the PodSpec, Overhead
                                  will be set to the value defined in the corresponding
                                  RuntimeClass, otherwise it will remain unset and
                                  treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                                  This field is beta-level as of Kubernetes v1.18,
                                  and is only honored by servers that enable the PodOverhead
                                  feature.'
                                type: object
                              preemptionPolicy:
                                description: PreemptionPolicy is the Policy for preempting
                                  pods with lower priority. One of Never, PreemptLowerPriority.
                                  Defaults to PreemptLowerPriority if unset. This
                                  field is beta-level, gated by the NonPreemptingPriority
                                  feature-gate.
                                type: string
                              priority:
                                description: The priority value. Various system components
                                  use this field to find the priority of the pod.
                                  When Priority Admission Controller is enabled, it
                                  prevents users from setting this field. The admission
                                  controller populates this field from PriorityClassName.
                                  The higher the value, the higher the priority.
                                format: int32
                                type: integer
                              priorityClassName:
                                description: If specified, indicates the pod's priority.
                                  "system-node-critical" and "system-cluster-critical"
                                  are two special keywords which indicate the highest
                                  priorities with the former being the highest priority.
                                  Any other name must be defined by creating a PriorityClass
                                  object with that name. If not specified, the pod
                                  priority will be default or zero if there is no
                                  default.
                                type: string
                              readinessGates:
                                description: 'If specified, all readiness gates will
                                  be evaluated for pod readiness. A pod is ready when
                                  all its containers are ready AND all conditions
                                  specified in the readiness gates have status equal
                                  to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates'
                                items:
                                  description: PodReadinessGate contains the reference
                                    to a pod condition
                                  properties:
                                    conditionType:
                                      description: ConditionType refers to a condition
                                        in the pod's condition list with matching
                                        type.
                                      type: string
                                  required:
                                  - conditionType
                                  type: object
                                type: array
                              restartPolicy:
                                description: 'Restart policy for all containers within
                                  the pod. One of Always, OnFailure, Never. Default
                                  to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                                type: string
                              runtimeClassName:
                                description: 'RuntimeClassName refers to a RuntimeClass
                                  object in the node.k8s.io group, which should be
                                  used to run this pod.  If no RuntimeClass resource
                                  matches the named class, the pod will not be run.
                                  If unset or empty, the "legacy" RuntimeClass will
                                  be used, which is an implicit class with an empty
                                  definition that uses the default runtime handler.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                                  This is a beta feature as of Kubernetes v1.14.'
                                type: string
                              schedulerName:
                                description: If specified, the pod will be dispatched
                                  by specified scheduler. If not specified, the pod
                                  will be dispatched by default scheduler.
                                type: string
                              securityContext:
                                description: 'SecurityContext holds pod-level security
                                  attributes and common container settings. Optional:
                                  Defaults to empty.  See type description for default
                                  values of each field.'
                                properties:
                                  fsGroup:
                                    description: "A special supplemental group that
                                      applies to all containers in a pod. Some volume
                                      types allow the Kubelet to change the ownership
                                      of that volume to be owned by the pod: \n 1.
                                      The owning GID will be the FSGroup 2. The setgid
                                      bit is set (new files created in the volume
                                      will be owned by FSGroup) 3. The permission
                                      bits are OR'd with rw-rw---- \n If unset, the
                                      Kubelet will not modify the ownership and permissions
                                      of any volume. Note that this field cannot be
                                      set when spec.os.name is windows."
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: 'fsGroupChangePolicy defines behavior
                                      of changing ownership and permission of the
                                      volume before being exposed inside Pod. This
                                      field will only apply to volume types which
                                      support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types
                                      such as: secret, configmaps and emptydir. Valid
                                      values are "OnRootMismatch" and "Always". If
                                      not specified, "Always" is used. Note that this
                                      field cannot be set when spec.os.name is windows.'
                                    type: string
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence for that
                                      container. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to all containers. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by the
                                      containers in this pod. Note that this field
                                      cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: A list of groups applied to the first
                                      process run in each container, in addition to
                                      the container's primary GID.  If unspecified,
                                      no groups will be added to any container. Note
                                      that this field cannot be set when spec.os.name
                                      is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: Sysctls hold a list of namespaced
                                      sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail
                                      to launch. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      within a container's SecurityContext will be
                                      used. If set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccount:
                                description: 'DeprecatedServiceAccount is a depreciated
                                  alias for ServiceAccountName. Deprecated: Use serviceAccountName
                                  instead.'
                                type: string
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod. More info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              setHostnameAsFQDN:
                                description: If true the pod's hostname will be configured
                                  as the pod's FQDN, rather than the leaf name (the
                                  default). In Linux containers, this means setting
                                  the FQDN in the hostname field of the kernel (the
                                  nodename field of struct utsname). In Windows containers,
                                  this means setting the registry value of hostname
                                  for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                                  to FQDN. If a pod does not have FQDN, this has no
                                  effect. Default to false.
                                type: boolean
                              shareProcessNamespace:
                                description: 'Share a single process namespace between
                                  all of the containers in a pod. When this is set
                                  containers will be able to view and signal processes
                                  from other containers in the same pod, and the first
                                  process in each container will not be assigned PID
                                  1. HostPID and ShareProcessNamespace cannot both
                                  be set. Optional: Default to false.'
                                type: boolean
                              subdomain:
                                description: If specified, the fully qualified Pod
                                  hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster
                                  domain>". If not specified, the pod will not have
                                  a domainname at all.
                                type: string
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully. May be decreased
                                  in delete request. Value must be non-negative integer.
                                  The value zero indicates stop immediately via the
                                  kill signal (no opportunity to shut down). If this
                                  value is nil, the default grace period will be used
                                  instead. The grace period is the duration in seconds
                                  after the processes running in the pod are sent
                                  a termination signal and the time when the processes
                                  are forcibly halted with a kill signal. Set this
                                  value longer than the expected cleanup time for
                                  your process. Defaults to 30 seconds.
                                format: int64
                                type: integer
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              topologySpreadConstraints:
                                description: TopologySpreadConstraints describes how
                                  a group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods in a way which
                                  abides by the constraints. All topologySpreadConstraints
                                  are ANDed.
                                items:
                                  description: TopologySpreadConstraint specifies
                                    how to spread matching pods among the given topology.
                                  properties:
                                    labelSelector:
                                      description: LabelSelector is used to find matching
                                        pods. Pods that match this label selector
                                        are counted to determine the number of pods
                                        in their corresponding topology domain.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    maxSkew:
                                      description: 'MaxSkew describes the degree to
                                        which pods may be unevenly distributed. When
                                        `whenUnsatisfiable=DoNotSchedule`, it is the
                                        maximum permitted difference between the number
                                        of matching pods in the target topology and
                                        the global minimum. For example, in a 3-zone
                                        cluster, MaxSkew is set to 1, and pods with
                                        the same labelSelector spread as 1/1/0: |
                                        zone1 | zone2 | zone3 | |   P   |   P   |       |
                                        - if MaxSkew is 1, incoming pod can only be
                                        scheduled to zone3 to become 1/1/1; scheduling
                                        it onto zone1(zone2) would make the ActualSkew(2-0)
                                        on zone1(zone2) violate MaxSkew(1). - if MaxSkew
                                        is 2, incoming pod can be scheduled onto any
                                        zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                        it is used to give higher precedence to topologies
                                        that satisfy it. It''s a required field. Default
                                        value is 1 and 0 is not allowed.'
                                      format: int32
                                      type: integer
                                    topologyKey:
                                      description: TopologyKey is the key of node
                                        labels. Nodes that have a label with this
                                        key and identical values are considered to
                                        be in the same topology. We consider each
                                        <key, value> as a "bucket", and try to put
                                        balanced number of pods into each bucket.
                                        It's a required field.
                                      type: string
                                    whenUnsatisfiable:
                                      description: 'WhenUnsatisfiable indicates how
                                        to deal with a pod if it doesn''t satisfy
                                        the spread constraint. - DoNotSchedule (default)
                                        tells the scheduler not to schedule it. -
                                        ScheduleAnyway tells the scheduler to schedule
                                        the pod in any location, but giving higher
                                        precedence to topologies that would help reduce
                                        the skew. A constraint is considered "Unsatisfiable"
                                        for an incoming pod if and only if every possible
                                        node assignment for that pod would violate
                                        "MaxSkew" on some topology. For example, in
                                        a 3-zone cluster, MaxSkew is set to 1, and
                                        pods with the same labelSelector spread as
                                        3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                                        If WhenUnsatisfiable is set to DoNotSchedule,
                                        incoming pod can only be scheduled to zone2(zone3)
                                        to become 3/2/1(3/1/2) as ActualSkew(2-1)
                                        on zone2(zone3) satisfies MaxSkew(1). In other
                                        words, the cluster can still be imbalanced,
                                        but scheduler won''t make it *more* imbalanced.
                                        It''s a required field.'
                                      type: string
                                  required:
                                  - maxSkew
                                  - topologyKey
                                  - whenUnsatisfiable
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - topologyKey
                                - whenUnsatisfiable
                                x-kubernetes-list-type: map
                              volumes:
                                description: 'List of volumes that can be mounted
                                  by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: 'AWSElasticBlockStore represents
                                        an AWS Disk resource that is attached to a
                                        kubelet''s host machine and then exposed to
                                        the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume
                                            that you want to mount. Tip: Ensure that
                                            the filesystem type is supported by the
                                            host operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume
                                            that you want to mount. If omitted, the
                                            default is to mount by volume name. Examples:
                                            For volume /dev/sda1, you specify the
                                            partition as "1". Similarly, the volume
                                            partition for /dev/sda is "0" (or you
                                            can leave the property empty).'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'Specify "true" to force and
                                            set the ReadOnly property in VolumeMounts
                                            to "true". If omitted, the default is
                                            "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'Unique ID of the persistent
                                            disk resource in AWS (Amazon EBS volume).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: AzureDisk represents an Azure Data
                                        Disk mount on the host and bind mount to the
                                        pod.
                                      properties:
                                        cachingMode:
                                          description: 'Host Caching mode: None, Read
                                            Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: The Name of the data disk in
                                            the blob storage
                                          type: string
                                        diskURI:
                                          description: The URI the data disk in the
                                            blob storage
                                          type: string
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                          type: string
                                        kind:
                                          description: 'Expected values Shared: multiple
                                            blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write).
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: AzureFile represents an Azure File
                                        Service mount on the host and bind mount to
                                        the pod.
                                      properties:
                                        readOnly:
                                          description: Defaults to false (read/write).
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: the name of secret that contains
                                            Azure Storage Account Name and Key
                                          type: string
                                        shareName:
                                          description: Share Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: CephFS represents a Ceph FS mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        monitors:
                                          description: 'Required: Monitors is a collection
                                            of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        path:
                                          description: 'Optional: Used as the mounted
                                            root, rather than the full Ceph tree,
                                            default is /'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'Optional: SecretFile is the
                                            path to key ring for User, default is
                                            /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'Optional: SecretRef is reference
                                            to the authentication secret for User,
                                            default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        user:
                                          description: 'Optional: User is the rados
                                            user name, default is admin More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: 'Cinder represents a cinder volume
                                        attached and mounted on kubelets host machine.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount.
                                            Must be a filesystem type supported by
                                            the host operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: points to a secret
                                            object containing parameters used to connect
                                            to OpenStack.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        volumeID:
                                          description: 'volume id used to identify
                                            the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: ConfigMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits used to
                                            set permissions on created files by default.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. Defaults to 0644. Directories
                                            within the path are not affected by this
                                            setting. This might be in conflict with
                                            other options that affect the file mode,
                                            like fsGroup, and the result can be other
                                            mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed
                                            keys will be projected into the specified
                                            paths, and unlisted keys will not be present.
                                            If a key is specified which is not present
                                            in the ConfigMap, the volume setup will
                                            error unless it is marked optional. Paths
                                            must be relative and may not contain the
                                            '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file. Must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of
                                                  the file to map the key to. May
                                                  not be an absolute path. May not
                                                  contain the path element '..'. May
                                                  not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its keys must be defined
                                          type: boolean
                                      type: object
                                    csi:
                                      description: CSI (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers (Beta feature).
                                      properties:
                                        driver:
                                          description: Driver is the name of the CSI
                                            driver that handles this volume. Consult
                                            with your admin for the correct name as
                                            registered in the cluster.
                                          type: string
                                        fsType:
                                          description: Filesystem type to mount. Ex.
                                            "ext4", "xfs", "ntfs". If not provided,
                                            the empty value is passed to the associated
                                            CSI driver which will determine the default
                                            filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: NodePublishSecretRef is a reference
                                            to the secret object containing sensitive
                                            information to pass to the CSI driver
                                            to complete the CSI NodePublishVolume
                                            and NodeUnpublishVolume calls. This field
                                            is optional, and  may be empty if no secret
                                            is required. If the secret object contains
                                            more than one secret, all secret references
                                            are passed.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        readOnly:
                                          description: Specifies a read-only configuration
                                            for the volume. Defaults to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: VolumeAttributes stores driver-specific
                                            properties that are passed to the CSI
                                            driver. Consult your driver's documentation
                                            for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: DownwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use
                                            on created files by default. Must be a
                                            Optional: mode bits used to set permissions
                                            on created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Defaults to 0644. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file, must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  requests.cpu and requests.memory)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                            required:
                                            - path
                                            type: object
                                          type: array
                                      type: object
                                    emptyDir:
                                      description: 'EmptyDir represents a temporary
                                        directory that shares a pod''s lifetime. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      properties:
                                        medium:
                                          description: 'What type of storage medium
                                            should back this directory. The default
                                            is "" which means to use the node''s default
                                            medium. Must be an empty string (default)
                                            or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: 'Total amount of local storage
                                            required for this EmptyDir volume. The
                                            size limit is also applicable for memory
                                            medium. The maximum usage on memory medium
                                            EmptyDir would be the minimum value between
                                            the SizeLimit specified here and the sum
                                            of memory limits of all containers in
                                            a pod. The default is nil which means
                                            that the limit is undefined. More info:
                                            http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: "Ephemeral represents a volume
                                        that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod
                                        that defines it - it will be created before
                                        the pod starts, and deleted when the pod is
                                        removed. \n Use this if: a) the volume is
                                        only needed while the pod runs, b) features
                                        of normal volumes like restoring from snapshot
                                        or capacity tracking are needed, c) the storage
                                        driver is specified through a storage class,
                                        and d) the storage driver supports dynamic
                                        volume provisioning through a PersistentVolumeClaim
                                        (see EphemeralVolumeSource for more information
                                        on the connection between this volume type
                                        and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                        or one of the vendor-specific APIs for volumes
                                        that persist for longer than the lifecycle
                                        of an individual pod. \n Use CSI for light-weight
                                        local ephemeral volumes if the CSI driver
                                        is meant to be used that way - see the documentation
                                        of the driver for more information. \n A pod
                                        can use both types of ephemeral volumes and
                                        persistent volumes at the same time."
                                      properties:
                                        volumeClaimTemplate:
                                          description: "Will be used to create a stand-alone
                                            PVC to provision the volume. The pod in
                                            which this EphemeralVolumeSource is embedded
                                            will be the owner of the PVC, i.e. the
                                            PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod
                                            name>-<volume name>` where `<volume name>`
                                            is the name from the `PodSpec.Volumes`
                                            array entry. Pod validation will reject
                                            the pod if the concatenated name is not
                                            valid for a PVC (for example, too long).
                                            \n An existing PVC with that name that
                                            is not owned by the pod will *not* be
                                            used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is
                                            then blocked until the unrelated PVC is
                                            removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has
                                            to updated with an owner reference to
                                            the pod once the pod exists. Normally
                                            this should not be necessary, but it may
                                            be useful when manually reconstructing
                                            a broken cluster. \n This field is read-only
                                            and no changes will be made by Kubernetes
                                            to the PVC after it has been created.
                                            \n Required, must not be nil."
                                          properties:
                                            metadata:
                                              description: May contain labels and
                                                annotations that will be copied into
                                                the PVC when creating it. No other
                                                fields are allowed and will be rejected
                                                during validation.
                                              type: object
                                            spec:
                                              description: The specification for the
                                                PersistentVolumeClaim. The entire
                                                content is copied unchanged into the
                                                PVC that gets created from this template.
                                                The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: 'AccessModes contains
                                                    the desired access modes the volume
                                                    should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                  items:
                                                    type: string
                                                  type: array
                                                dataSource:
                                                  description: 'This field can be
                                                    used to specify either: * An existing
                                                    VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external
                                                    controller can support the specified
                                                    data source, it will create a
                                                    new volume based on the contents
                                                    of the specified data source.
                                                    If the AnyVolumeDataSource feature
                                                    gate is enabled, this field will
                                                    always have the same contents
                                                    as the DataSourceRef field.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                dataSourceRef:
                                                  description: 'Specifies the object
                                                    from which to populate the volume
                                                    with data, if a non-empty volume
                                                    is desired. This may be any local
                                                    object from a non-empty API group
                                                    (non core object) or a PersistentVolumeClaim
                                                    object. When this field is specified,
                                                    volume binding will only succeed
                                                    if the type of the specified object
                                                    matches some installed volume
                                                    populator or dynamic provisioner.
                                                    This field will replace the functionality
                                                    of the DataSource field and as
                                                    such if both fields are non-empty,
                                                    they must have the same value.
                                                    For backwards compatibility, both
                                                    fields (DataSource and DataSourceRef)
                                                    will be set to the same value
                                                    automatically if one of them is
                                                    empty and the other is non-empty.
                                                    There are two important differences
                                                    between DataSource and DataSourceRef:
                                                    * While DataSource only allows
                                                    two specific types of objects,
                                                    DataSourceRef allows any non-core
                                                    object, as well as PersistentVolumeClaim
                                                    objects. * While DataSource ignores
                                                    disallowed values (dropping them),
                                                    DataSourceRef preserves all values,
                                                    and generates an error if a disallowed
                                                    value is specified. (Alpha) Using
                                                    this field requires the AnyVolumeDataSource
                                                    feature gate to be enabled.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: 'Resources represents
                                                    the minimum resources the volume
                                                    should have. If RecoverVolumeExpansionFailure
                                                    feature is enabled users are allowed
                                                    to specify resource requirements
                                                    that are lower than previous value
                                                    but must still be higher than
                                                    capacity recorded in the status
                                                    field of the claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: A label query over
                                                    volumes to consider for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                storageClassName:
                                                  description: 'Name of the StorageClass
                                                    required by the claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                  type: string
                                                volumeMode:
                                                  description: volumeMode defines
                                                    what type of volume is required
                                                    by the claim. Value of Filesystem
                                                    is implied when not included in
                                                    claim spec.
                                                  type: string
                                                volumeName:
                                                  description: VolumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: FC represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: 'Filesystem type to mount.
                                            Must be a filesystem type supported by
                                            the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. TODO: how do
                                            we prevent errors in the filesystem from
                                            compromising the machine'
                                          type: string
                                        lun:
                                          description: 'Optional: FC target lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'Optional: FC target worldwide
                                            names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                        wwids:
                                          description: 'Optional: FC volume world
                                            wide identifiers (wwids) Either wwids
                                            or combination of targetWWNs and lun must
                                            be set, but not both simultaneously.'
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    flexVolume:
                                      description: FlexVolume represents a generic
                                        volume resource that is provisioned/attached
                                        using an exec based plugin.
                                      properties:
                                        driver:
                                          description: Driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". The default filesystem depends
                                            on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'Optional: Extra command options
                                            if any.'
                                          type: object
                                        readOnly:
                                          description: 'Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'Optional: SecretRef is reference
                                            to the secret object containing sensitive
                                            information to pass to the plugin scripts.
                                            This may be empty if no secret object
                                            is specified. If the secret object contains
                                            more than one secret, all secrets are
                                            passed to the plugin scripts.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: Flocker represents a Flocker volume
                                        attached to a kubelet's host machine. This
                                        depends on the Flocker control service being
                                        running
                                      properties:
                                        datasetName:
                                          description: Name of the dataset stored
                                            as metadata -> name on the dataset for
                                            Flocker should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: UUID of the dataset. This is
                                            unique identifier of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: 'GCEPersistentDisk represents a
                                        GCE Disk resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume
                                            that you want to mount. Tip: Ensure that
                                            the filesystem type is supported by the
                                            host operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'The partition in the volume
                                            that you want to mount. If omitted, the
                                            default is to mount by volume name. Examples:
                                            For volume /dev/sda1, you specify the
                                            partition as "1". Similarly, the volume
                                            partition for /dev/sda is "0" (or you
                                            can leave the property empty). More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: 'Unique name of the PD resource
                                            in GCE. Used to identify the disk in GCE.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: 'GitRepo represents a git repository
                                        at a particular revision. DEPRECATED: GitRepo
                                        is deprecated. To provision a container with
                                        a git repo, mount an EmptyDir into an InitContainer
                                        that clones the repo using git, then mount
                                        the EmptyDir into the Pod''s container.'
                                      properties:
                                        directory:
                                          description: Target directory name. Must
                                            not contain or start with '..'.  If '.'
                                            is supplied, the volume directory will
                                            be the git repository.  Otherwise, if
                                            specified, the volume will contain the
                                            git repository in the subdirectory with
                                            the given name.
                                          type: string
                                        repository:
                                          description: Repository URL
                                          type: string
                                        revision:
                                          description: Commit hash for the specified
                                            revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: 'Glusterfs represents a Glusterfs
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                      properties:
                                        endpoints:
                                          description: 'EndpointsName is the endpoint
                                            name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'Path is the Glusterfs volume
                                            path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the
                                            Glusterfs volume to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: 'HostPath represents a pre-existing
                                        file or directory on the host machine that
                                        is directly exposed to the container. This
                                        is generally used for system agents or other
                                        privileged things that are allowed to see
                                        the host machine. Most containers will NOT
                                        need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        --- TODO(jonesdl) We need to restrict who
                                        can use host directory mounts and who can/can
                                        not mount host directories as read/write.'
                                      properties:
                                        path:
                                          description: 'Path of the directory on the
                                            host. If the path is a symlink, it will
                                            follow the link to the real path. More
                                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: 'Type for HostPath Volume Defaults
                                            to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    iscsi:
                                      description: 'ISCSI represents an ISCSI Disk
                                        resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                      properties:
                                        chapAuthDiscovery:
                                          description: whether support iSCSI Discovery
                                            CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: whether support iSCSI Session
                                            CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'Filesystem type of the volume
                                            that you want to mount. Tip: Ensure that
                                            the filesystem type is supported by the
                                            host operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        initiatorName:
                                          description: Custom iSCSI Initiator Name.
                                            If initiatorName is specified with iscsiInterface
                                            simultaneously, new iSCSI interface <target
                                            portal>:<volume name> will be created
                                            for the connection.
                                          type: string
                                        iqn:
                                          description: Target iSCSI Qualified Name.
                                          type: string
                                        iscsiInterface:
                                          description: iSCSI Interface Name that uses
                                            an iSCSI transport. Defaults to 'default'
                                            (tcp).
                                          type: string
                                        lun:
                                          description: iSCSI Target Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: iSCSI Target Portal List. The
                                            portal is either an IP or ip_addr:port
                                            if the port is other than default (typically
                                            TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                        readOnly:
                                          description: ReadOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false.
                                          type: boolean
                                        secretRef:
                                          description: CHAP Secret for iSCSI target
                                            and initiator authentication
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        targetPortal:
                                          description: iSCSI Target Portal. The Portal
                                            is either an IP or ip_addr:port if the
                                            port is other than default (typically
                                            TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: 'Volume''s name. Must be a DNS_LABEL
                                        and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: 'NFS represents an NFS mount on
                                        the host that shares a pod''s lifetime More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      properties:
                                        path:
                                          description: 'Path that is exported by the
                                            NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the
                                            NFS export to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'Server is the hostname or
                                            IP address of the NFS server. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: 'PersistentVolumeClaimVolumeSource
                                        represents a reference to a PersistentVolumeClaim
                                        in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      properties:
                                        claimName:
                                          description: 'ClaimName is the name of a
                                            PersistentVolumeClaim in the same namespace
                                            as the pod using this volume. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: Will force the ReadOnly setting
                                            in VolumeMounts. Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: PhotonPersistentDisk represents
                                        a PhotonController persistent disk attached
                                        and mounted on kubelets host machine
                                      properties:
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                          type: string
                                        pdID:
                                          description: ID that identifies Photon Controller
                                            persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: PortworxVolume represents a portworx
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: FSType represents the filesystem
                                            type to mount Must be a filesystem type
                                            supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred
                                            to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write).
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: VolumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: Items for all in one resources
                                        secrets, configmaps, and downward API
                                      properties:
                                        defaultMode:
                                          description: Mode bits used to set permissions
                                            on created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Directories within the path are
                                            not affected by this setting. This might
                                            be in conflict with other options that
                                            affect the file mode, like fsGroup, and
                                            the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: list of volume projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: information about the
                                                  configMap data to project
                                                properties:
                                                  items:
                                                    description: If unspecified, each
                                                      key-value pair in the Data field
                                                      of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: The key to
                                                            project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: The relative
                                                            path of the file to map
                                                            the key to. May not be
                                                            an absolute path. May
                                                            not contain the path element
                                                            '..'. May not start with
                                                            the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its keys must be
                                                      defined
                                                    type: boolean
                                                type: object
                                              downwardAPI:
                                                description: information about the
                                                  downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                type: object
                                              secret:
                                                description: information about the
                                                  secret data to project
                                                properties:
                                                  items:
                                                    description: If unspecified, each
                                                      key-value pair in the Data field
                                                      of the referenced Secret will
                                                      be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: The key to
                                                            project.
                                                          type: string
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: The relative
                                                            path of the file to map
                                                            the key to. May not be
                                                            an absolute path. May
                                                            not contain the path element
                                                            '..'. May not start with
                                                            the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                type: object
                                              serviceAccountToken:
                                                description: information about the
                                                  serviceAccountToken data to project
                                                properties:
                                                  audience:
                                                    description: Audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: ExpirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: Path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    quobyte:
                                      description: Quobyte represents a Quobyte mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        group:
                                          description: Group to map volume access
                                            to Default is no group
                                          type: string
                                        readOnly:
                                          description: ReadOnly here will force the
                                            Quobyte volume to be mounted with read-only
                                            permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: Registry represents a single
                                            or multiple Quobyte Registry services
                                            specified as a string as host:port pair
                                            (multiple entries are separated with commas)
                                            which acts as the central registry for
                                            volumes
                                          type: string
                                        tenant:
                                          description: Tenant owning the given Quobyte
                                            volume in the Backend Used with dynamically
                                            provisioned Quobyte volumes, value is
                                            set by the plugin
                                          type: string
                                        user:
                                          description: User to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: Volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: 'RBD represents a Rados Block Device
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md'
                                      properties:
                                        fsType:
                                          description: 'Filesystem type of the volume
                                            that you want to mount. Tip: Ensure that
                                            the filesystem type is supported by the
                                            host operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        image:
                                          description: 'The rados image name. More
                                            info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'Keyring is the path to key
                                            ring for RBDUser. Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'A collection of Ceph monitors.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        pool:
                                          description: 'The rados pool name. Default
                                            is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'ReadOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'SecretRef is name of the authentication
                                            secret for RBDUser. If provided overrides
                                            keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        user:
                                          description: 'The rados user name. Default
                                            is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: ScaleIO represents a ScaleIO persistent
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". Default is "xfs".
                                          type: string
                                        gateway:
                                          description: The host address of the ScaleIO
                                            API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: The name of the ScaleIO Protection
                                            Domain for the configured storage.
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write).
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: SecretRef references to the
                                            secret for ScaleIO user and other sensitive
                                            information. If this is not provided,
                                            Login operation will fail.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        sslEnabled:
                                          description: Flag to enable/disable SSL
                                            communication with Gateway, default false
                                          type: boolean
                                        storageMode:
                                          description: Indicates whether the storage
                                            for a volume should be ThickProvisioned
                                            or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: The ScaleIO Storage Pool associated
                                            with the protection domain.
                                          type: string
                                        system:
                                          description: The name of the storage system
                                            as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: The name of a volume already
                                            created in the ScaleIO system that is
                                            associated with this volume source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: 'Secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits used to
                                            set permissions on created files by default.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. Defaults to 0644. Directories
                                            within the path are not affected by this
                                            setting. This might be in conflict with
                                            other options that affect the file mode,
                                            like fsGroup, and the result can be other
                                            mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed
                                            keys will be projected into the specified
                                            paths, and unlisted keys will not be present.
                                            If a key is specified which is not present
                                            in the Secret, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file. Must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of
                                                  the file to map the key to. May
                                                  not be an absolute path. May not
                                                  contain the path element '..'. May
                                                  not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: Specify whether the Secret
                                            or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'Name of the secret in the
                                            pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                    storageos:
                                      description: StorageOS represents a StorageOS
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                          type: string
                                        readOnly:
                                          description: Defaults to false (read/write).
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: SecretRef specifies the secret
                                            to use for obtaining the StorageOS API
                                            credentials.  If not specified, default
                                            values will be attempted.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                        volumeName:
                                          description: VolumeName is the human-readable
                                            name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: VolumeNamespace specifies the
                                            scope of the volume within StorageOS.  If
                                            no namespace is specified then the Pod's
                                            namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored
                                            within StorageOS for tighter integration.
                                            Set VolumeName to any name to override
                                            the default behaviour. Set to "default"
                                            if you are not using namespaces within
                                            StorageOS. Namespaces that do not pre-exist
                                            within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: VsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: Filesystem type to mount. Must
                                            be a filesystem type supported by the
                                            host operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: Storage Policy Based Management
                                            (SPBM) profile ID associated with the
                                            StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: Storage Policy Based Management
                                            (SPBM) profile name.
                                          type: string
                                        volumePath:
                                          description: Path that identifies vSphere
                                            volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                        type: object
                      racks:
                        description: A list of the named racks in the datacenter,
                          representing independent failure domains. The number of
                          racks should match the replication factor in the keyspaces
                          you plan to create, and the number of racks cannot easily
                          be changed once a datacenter is deployed.
                        items:
                          description: Rack ...
                          properties:
                            name:
                              description: The rack name
                              minLength: 2
                              type: string
                            nodeAffinityLabels:
                              additionalProperties:
                                type: string
                              description: NodeAffinityLabels to pin the rack, using
                                node affinity
                              type: object
                            zone:
                              description: Deprecated. Use nodeAffinityLabels instead.
                                Zone name to pin the rack, using node affinity
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      replaceNodes:
                        description: A list of pod names that need to be replaced.
                        items:
                          type: string
                        type: array
                      resources:
                        description: Kubernetes resource requests and limits, per
                          pod
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      rollingRestartRequested:
                        description: Whether to do a rolling restart at the next opportunity.
                          The operator will set this back to false once the restart
                          is in progress.
                        type: boolean
                      serverImage:
                        description: 'Cassandra server image name. Use of ImageConfig
                          to match ServerVersion is recommended instead of this value.
                          This value will override anything set in the ImageConfig
                          matching the ServerVersion More info: https://kubernetes.io/docs/concepts/containers/images'
                        type: string
                      serverType:
                        description: 'Server type: "cassandra" or "dse"'
                        enum:
                        - cassandra
                        - dse
                        type: string
                      serverVersion:
                        description: Version string for config builder, used to generate
                          Cassandra server configuration
                        pattern: (6\.8\.\d+)|(3\.11\.\d+)|(4\.0\.\d+)
                        type: string
                      serviceAccount:
                        description: The k8s service account to use for the server
                          pods
                        type: string
                      size:
                        description: Desired number of Cassandra server nodes
                        format: int32
                        minimum: 1
                        type: integer
                      stopped:
                        description: A stopped CassandraDatacenter will have no running
                          server pods, like using "stop" with traditional System V
                          init scripts. Other Kubernetes resources will be left intact,
                          and volumes will re-attach when the CassandraDatacenter
                          workload is resumed.
                        type: boolean
                      storageConfig:
                        description: Describes the persistent storage request of each
                          server node
                        properties:
                          additionalVolumes:
                            items:
                              description: AdditionalVolumes StorageConfig defines
                                additional storage configurations
                              properties:
                                mountPath:
                                  description: Mount path into cassandra container
                                  type: string
                                name:
                                  description: Name of the pvc
                                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                  type: string
                                pvcSpec:
                                  description: Persistent volume claim spec
                                  properties:
                                    accessModes:
                                      description: 'AccessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'This field can be used to specify
                                        either: * An existing VolumeSnapshot object
                                        (snapshot.storage.k8s.io/VolumeSnapshot) *
                                        An existing PVC (PersistentVolumeClaim) If
                                        the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. If the AnyVolumeDataSource
                                        feature gate is enabled, this field will always
                                        have the same contents as the DataSourceRef
                                        field.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    dataSourceRef:
                                      description: 'Specifies the object from which
                                        to populate the volume with data, if a non-empty
                                        volume is desired. This may be any local object
                                        from a non-empty API group (non core object)
                                        or a PersistentVolumeClaim object. When this
                                        field is specified, volume binding will only
                                        succeed if the type of the specified object
                                        matches some installed volume populator or
                                        dynamic provisioner. This field will replace
                                        the functionality of the DataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, both fields (DataSource and
                                        DataSourceRef) will be set to the same value
                                        automatically if one of them is empty and
                                        the other is non-empty. There are two important
                                        differences between DataSource and DataSourceRef:
                                        * While DataSource only allows two specific
                                        types of objects, DataSourceRef allows any
                                        non-core object, as well as PersistentVolumeClaim
                                        objects. * While DataSource ignores disallowed
                                        values (dropping them), DataSourceRef preserves
                                        all values, and generates an error if a disallowed
                                        value is specified. (Alpha) Using this field
                                        requires the AnyVolumeDataSource feature gate
                                        to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'Resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: A label query over volumes to consider
                                        for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    storageClassName:
                                      description: 'Name of the StorageClass required
                                        by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: VolumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - mountPath
                              - name
                              - pvcSpec
                              type: object
                            type: array
                          cassandraDataVolumeClaimSpec:
                            description: PersistentVolumeClaimSpec describes the common
                              attributes of storage devices and allows a Source for
                              provider-specific attributes
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'This field can be used to specify either:
                                  * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                  * An existing PVC (PersistentVolumeClaim) If the
                                  provisioner or an external controller can support
                                  the specified data source, it will create a new
                                  volume based on the contents of the specified data
                                  source. If the AnyVolumeDataSource feature gate
                                  is enabled, this field will always have the same
                                  contents as the DataSourceRef field.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              dataSourceRef:
                                description: 'Specifies the object from which to populate
                                  the volume with data, if a non-empty volume is desired.
                                  This may be any local object from a non-empty API
                                  group (non core object) or a PersistentVolumeClaim
                                  object. When this field is specified, volume binding
                                  will only succeed if the type of the specified object
                                  matches some installed volume populator or dynamic
                                  provisioner. This field will replace the functionality
                                  of the DataSource field and as such if both fields
                                  are non-empty, they must have the same value. For
                                  backwards compatibility, both fields (DataSource
                                  and DataSourceRef) will be set to the same value
                                  automatically if one of them is empty and the other
                                  is non-empty. There are two important differences
                                  between DataSource and DataSourceRef: * While DataSource
                                  only allows two specific types of objects, DataSourceRef
                                  allows any non-core object, as well as PersistentVolumeClaim
                                  objects. * While DataSource ignores disallowed values
                                  (dropping them), DataSourceRef preserves all values,
                                  and generates an error if a disallowed value is
                                  specified. (Alpha) Using this field requires the
                                  AnyVolumeDataSource feature gate to be enabled.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'Resources represents the minimum resources
                                  the volume should have. If RecoverVolumeExpansionFailure
                                  feature is enabled users are allowed to specify
                                  resource requirements that are lower than previous
                                  value but must still be higher than capacity recorded
                                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              selector:
                                description: A label query over volumes to consider
                                  for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by
                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                            type: object
                        type: object
                      superuserSecretName:
                        description: This secret defines the username and password
                          for the Cassandra server superuser. If it is omitted, we
                          will generate a secret instead.
                        type: string
                      systemLoggerImage:
                        description: Container image for the log tailing sidecar container.
                          Overrides value from ImageConfig SystemLoggerImage
                        type: string
                      systemLoggerResources:
                        description: Kubernetes resource requests and limits per system
                          logger container.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations applied to the Cassandra pod. Note
                          that these cannot be overridden with PodTemplateSpec.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                      users:
                        description: Cassandra users to bootstrap
                        items:
                          properties:
                            secretName:
                              type: string
                            superuser:
                              type: boolean
                          required:
                          - secretName
                          - superuser
                          type: object
                        type: array
                    required:
                    - clusterName
                    - serverType
                    - serverVersion
                    - size
                    - storageConfig
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - spec
                type: object
              failed:
                items:
                  type: string
                type: array
              finishTime:
                format: date-time
                type: string
              finished:
                items:
                  type: string
                type: array
              inProgress:
                items:
                  type: string
                type: array
              startTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cassandrarestores.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: CassandraRestore
    listKind: CassandraRestoreList
    plural: cassandrarestores
    singular: cassandrarestore
  scope: Namespaced
  versions:
  - deprecated: true
    deprecationWarning: medusa.k8ssandra.com/v1alpha1 CassandraBackup/CassandraRestore
      are deprecated, use medusa.k8ssandra.com/v1alpha1 MedusaBackupJob/MedusaRestoreJob
      instead.
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CassandraRestore is the Schema for the cassandrarestores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CassandraRestoreSpec defines the desired state of CassandraRestore
            properties:
              backup:
                description: The name of the CassandraBackup to restore
                type: string
              cassandraDatacenter:
                properties:
                  clusterName:
                    description: The name to give the C* cluster.
                    type: string
                  name:
                    description: The name to give the new, restored CassandraDatacenter
                    type: string
                required:
                - clusterName
                - name
                type: object
              inPlace:
                description: When true the restore will be performed on the source
                  cluster from which the backup was taken. There will be a rolling
                  restart of the source cluster.
                type: boolean
              shutdown:
                description: When set to true, the cluster is shutdown before the
                  restore is applied. This is necessary process if there are schema
                  changes between the backup and current schema. Recommended.
                type: boolean
            required:
            - backup
            - cassandraDatacenter
            - inPlace
            - shutdown
            type: object
          status:
            description: CassandraRestoreStatus defines the observed state of CassandraRestore
            properties:
              datacenterStopped:
                format: date-time
                type: string
              failed:
                items:
                  type: string
                type: array
              finishTime:
                format: date-time
                type: string
              finished:
                items:
                  type: string
                type: array
              inProgress:
                items:
                  type: string
                type: array
              restoreKey:
                description: A unique key that identifies the restore operation.
                type: string
              startTime:
                format: date-time
                type: string
            required:
            - restoreKey
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clientconfigs.config.k8ssandra.io
spec:
  group: config.k8ssandra.io
  names:
    kind: ClientConfig
    listKind: ClientConfigList
    plural: clientconfigs
    singular: clientconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClientConfig is the Schema for the kubeconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClientConfigSpec defines the desired state of KubeConfig
            properties:
              contextName:
                description: ContextName allows to override the object name for context-name.
                  If not set, the ClientConfig.Name is used as context name
                type: string
              kubeConfigSecret:
                description: KubeConfigSecret should reference an existing secret;
                  the actual configuration will be read from this secret's "kubeconfig"
                  key.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE_K8S)/$(CERTIFICATE_NAME_K8S)
    controller-gen.kubebuilder.io/version: v0.8.0
  name: k8ssandraclusters.k8ssandra.io
spec:
  group: k8ssandra.io
  names:
    kind: K8ssandraCluster
    listKind: K8ssandraClusterList
    plural: k8ssandraclusters
    shortNames:
    - k8c
    - k8cs
    singular: k8ssandracluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: K8ssandraCluster is the Schema for the k8ssandraclusters API.
          The K8ssandraCluster CRD name is also the name of the Cassandra cluster
          (which corresponds to cluster_name in cassandra.yaml).
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: K8ssandraClusterSpec defines the desired state of K8ssandraCluster
            properties:
              auth:
                default: true
                description: Whether to enable authentication in this cluster. The
                  default is true; it is highly recommended to always leave authentication
                  turned on. When enabled, authentication will be enforced not only
                  on Cassandra nodes, but also on Reaper, Medusa and Stargate nodes,
                  if any.
                type: boolean
              cassandra:
                description: Cassandra is a specification of the Cassandra cluster.
                  This includes everything from the number of datacenters, the k8s
                  cluster where each DC should be deployed, node affinity (via racks),
                  individual C* node settings, JVM settings, and more.
                properties:
                  additionalSeeds:
                    description: AdditionalSeeds specifies Cassandra node IPs for
                      an existing datacenter. This is primarily intended for migrations
                      from an existing Cassandra cluster that is not managed by k8ssandra-operator.
                      Note that this property should NOT be used to set seeds for
                      a DC that is or will be managed by k8ssandra-operator. k8ssandra-operator
                      already manages seeds for DCs that it manages. If you have DNS
                      set up such that you can resolve hostnames for the remote Cassandra
                      cluster, then you can specify hostnames here; otherwise, use
                      IP addresses.
                    items:
                      type: string
                    type: array
                  cdc:
                    description: CDC defines the desired state for CDC integrations.
                      It can be used to feed mutation events from Cassandra into an
                      Apache Pulsar cluster, from where they can be expored to external
                      systems.
                    properties:
                      cdcConcurrentProcessors:
                        type: integer
                      cdcPollIntervalM:
                        type: integer
                      cdcWorkingDir:
                        type: string
                      errorCommitLogReprocessEnabled:
                        type: boolean
                      pulsarAuthParams:
                        type: string
                      pulsarAuthPluginClassName:
                        type: string
                      pulsarBatchDelayInMs:
                        type: integer
                      pulsarKeyBasedBatcher:
                        type: boolean
                      pulsarMaxPendingMessages:
                        type: integer
                      pulsarMaxPendingMessagesAcrossPartitions:
                        type: integer
                      pulsarServiceUrl:
                        minLength: 1
                        type: string
                      sslAllowInsecureConnection:
                        type: string
                      sslCipherSuites:
                        type: string
                      sslEnabledProtocols:
                        type: string
                      sslHostnameVerificationEnable:
                        type: string
                      sslKeystorePassword:
                        type: string
                      sslKeystorePath:
                        type: string
                      sslProvider:
                        type: string
                      sslTruststorePassword:
                        type: string
                      sslTruststorePath:
                        type: string
                      sslTruststoreType:
                        type: string
                      topicPrefix:
                        type: string
                    required:
                    - pulsarServiceUrl
                    type: object
                  clientEncryptionStores:
                    description: Client encryption stores which are used by Cassandra
                      and Reaper.
                    properties:
                      keystoreSecretRef:
                        description: ref to the secret that contains the keystore
                          and its password the expected format of the secret is a
                          "keystore" entry and a "keystore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      truststoreSecretRef:
                        description: ref to the secret that contains the truststore
                          and its password the expected format of the secret is a
                          "truststore" entry and a "truststore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - keystoreSecretRef
                    - truststoreSecretRef
                    type: object
                  clusterName:
                    description: Override the Cassandra cluster name. If unspecified,
                      the cluster name will be the same as the K8ssandraCluster CRD
                      name.
                    type: string
                  config:
                    description: CassandraConfig is configuration settings that are
                      applied to cassandra.yaml and the various jvm*.options files.
                    properties:
                      cassandraYaml:
                        description: 'CassandraYaml defines the contents of the cassandra.yaml
                          file. For more info see: https://cassandra.apache.org/doc/latest/cassandra/configuration/cass_yaml_file.html'
                        properties:
                          allocate_tokens_for_keyspace:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          allocate_tokens_for_local_replication_factor:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          audit_logging_options:
                            description: 'Exists in: 4.0, trunk'
                            properties:
                              archive_command:
                                type: string
                              block:
                                type: boolean
                              enabled:
                                type: boolean
                              excluded_categories:
                                type: string
                              excluded_keyspaces:
                                type: string
                              excluded_users:
                                type: string
                              included_categories:
                                type: string
                              included_keyspaces:
                                type: string
                              included_users:
                                type: string
                              logger:
                                properties:
                                  class_name:
                                    type: string
                                  parameters:
                                    additionalProperties:
                                      type: string
                                    type: object
                                required:
                                - class_name
                                type: object
                              max_archive_retries:
                                type: integer
                              max_log_size:
                                type: integer
                              max_queue_weight:
                                type: integer
                              roll_cycle:
                                type: string
                            required:
                            - enabled
                            type: object
                          auth_read_consistency_level:
                            description: Exists in trunk
                            enum:
                            - ANY
                            - ONE
                            - TWO
                            - THREE
                            - QUORUM
                            - ALL
                            - LOCAL_QUORUM
                            - EACH_QUORUM
                            - SERIAL
                            - LOCAL_SERIAL
                            - LOCAL_ONE
                            - NODE_LOCAL
                            type: string
                          auth_write_consistency_level:
                            description: Exists in trunk
                            enum:
                            - ANY
                            - ONE
                            - TWO
                            - THREE
                            - QUORUM
                            - ALL
                            - LOCAL_QUORUM
                            - EACH_QUORUM
                            - SERIAL
                            - LOCAL_SERIAL
                            - LOCAL_ONE
                            - NODE_LOCAL
                            type: string
                          authenticator:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          authorizer:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          auto_hints_cleanup_enabled:
                            description: Exists in trunk
                            type: boolean
                          auto_optimise_full_repair_streams:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          auto_optimise_inc_repair_streams:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          auto_optimise_preview_repair_streams:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          auto_snapshot:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          autocompaction_on_startup_enabled:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          automatic_sstable_upgrade:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          available_processors:
                            description: Exists in trunk
                            type: integer
                          back_pressure_enabled:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          back_pressure_strategy:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              class_name:
                                type: string
                              parameters:
                                additionalProperties:
                                  type: string
                                type: object
                            required:
                            - class_name
                            type: object
                          batch_size_fail_threshold_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          batch_size_warn_threshold_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          batchlog_replay_throttle_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          block_for_peers_in_remote_dcs:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          block_for_peers_timeout_in_secs:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          buffer_pool_use_heap_if_exhausted:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          cas_contention_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          cdc_enabled:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          cdc_free_space_check_interval_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          cdc_raw_directory:
                            description: Exists in 3.11, 4.0, trunk TODO mountable
                              directory
                            type: string
                          cdc_total_space_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          check_for_duplicate_rows_during_compaction:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          check_for_duplicate_rows_during_reads:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          client_encryption_options:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              accepted_protocols:
                                items:
                                  type: string
                                type: array
                              algorithm:
                                type: string
                              cipher_suites:
                                items:
                                  type: string
                                type: array
                              enabled:
                                type: boolean
                              optional:
                                type: boolean
                              protocol:
                                type: string
                              require_client_auth:
                                default: false
                                type: boolean
                              store_type:
                                type: string
                            required:
                            - enabled
                            type: object
                          client_error_reporting_exclusions:
                            description: Exists in trunk
                            properties:
                              subnets:
                                items:
                                  type: string
                                type: array
                            required:
                            - subnets
                            type: object
                          column_index_cache_size_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          column_index_size_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          commitlog_compression:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              class_name:
                                type: string
                              parameters:
                                additionalProperties:
                                  type: string
                                type: object
                            required:
                            - class_name
                            type: object
                          commitlog_max_compression_buffers_in_pool:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          commitlog_periodic_queue_size:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          commitlog_segment_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          commitlog_sync:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - periodic
                            - batch
                            - group
                            type: string
                          commitlog_sync_batch_window_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          commitlog_sync_group_window_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          commitlog_sync_period_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          commitlog_total_space_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          compaction_large_partition_warning_threshold_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          compaction_throughput_mb_per_sec:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          compaction_tombstone_warning_threshold:
                            description: Exists in trunk
                            type: integer
                          concurrent_compactors:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          concurrent_counter_writes:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          concurrent_materialized_view_builders:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          concurrent_materialized_view_writes:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          concurrent_reads:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          concurrent_replicates:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          concurrent_validations:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          concurrent_writes:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          consecutive_message_errors_threshold:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          corrupted_tombstone_strategy:
                            description: 'Exists in: 4.0, trunk'
                            enum:
                            - disabled
                            - warn
                            - exception
                            type: string
                          counter_cache_keys_to_save:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          counter_cache_save_period:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          counter_cache_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          counter_write_request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          credentials_cache_max_entries:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          credentials_update_interval_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          credentials_validity_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          cross_node_timeout:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          default_keyspace_rf:
                            description: Exists in trunk
                            type: integer
                          denylist_consistency_level:
                            description: Exists in trunk
                            enum:
                            - ANY
                            - ONE
                            - TWO
                            - THREE
                            - QUORUM
                            - ALL
                            - LOCAL_QUORUM
                            - EACH_QUORUM
                            - SERIAL
                            - LOCAL_SERIAL
                            - LOCAL_ONE
                            - NODE_LOCAL
                            type: string
                          denylist_initial_load_retry_seconds:
                            description: Exists in trunk
                            type: integer
                          denylist_max_keys_per_table:
                            description: Exists in trunk
                            type: integer
                          denylist_max_keys_total:
                            description: Exists in trunk
                            type: integer
                          denylist_refresh_seconds:
                            description: Exists in trunk
                            type: integer
                          diagnostic_events_enabled:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          disk_access_mode:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - auto
                            - mmap
                            - mmap_index_only
                            - standard
                            type: string
                          disk_optimization_estimate_percentile:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          disk_optimization_page_cross_chance:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          disk_optimization_strategy:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - ssd
                            - spinning
                            type: string
                          dynamic_snitch:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          dynamic_snitch_badness_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          dynamic_snitch_reset_interval_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          dynamic_snitch_update_interval_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          enable_denylist_range_reads:
                            description: Exists in trunk
                            type: boolean
                          enable_denylist_reads:
                            description: Exists in trunk
                            type: boolean
                          enable_denylist_writes:
                            description: Exists in trunk
                            type: boolean
                          enable_drop_compact_storage:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          enable_materialized_views:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          enable_partition_denylist:
                            description: Exists in trunk
                            type: boolean
                          enable_sasi_indexes:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          enable_scripted_user_defined_functions:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          enable_transient_replication:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          enable_user_defined_functions:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          enable_user_defined_functions_threads:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          endpoint_snitch:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          failure_detector:
                            description: Exists in trunk
                            type: string
                          file_cache_enabled:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          file_cache_round_up:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          file_cache_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          flush_compression:
                            description: 'Exists in: 4.0, trunk'
                            enum:
                            - none
                            - fast
                            - table
                            type: string
                          full_query_logging_options:
                            description: 'Exists in: 4.0, trunk'
                            properties:
                              archive_command:
                                type: string
                              block:
                                type: boolean
                              log_dir:
                                type: string
                              max_archive_retries:
                                type: integer
                              max_log_size:
                                type: integer
                              max_queue_weight:
                                type: integer
                              roll_cycle:
                                type: string
                            type: object
                          gc_log_threshold_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          gc_warn_threshold_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          hint_window_persistent_enabled:
                            description: Exists in trunk
                            type: boolean
                          hinted_handoff_disabled_datacenters:
                            description: Exists in 3.11, 4.0, trunk
                            items:
                              type: string
                            type: array
                          hinted_handoff_enabled:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          hinted_handoff_throttle_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          hints_compression:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              class_name:
                                type: string
                              parameters:
                                additionalProperties:
                                  type: string
                                type: object
                            required:
                            - class_name
                            type: object
                          hints_flush_period_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          ideal_consistency_level:
                            description: 'Exists in: 4.0, trunk'
                            enum:
                            - ANY
                            - ONE
                            - TWO
                            - THREE
                            - QUORUM
                            - ALL
                            - LOCAL_QUORUM
                            - EACH_QUORUM
                            - SERIAL
                            - LOCAL_SERIAL
                            - LOCAL_ONE
                            - NODE_LOCAL
                            type: string
                          index_interval:
                            description: Exists in 3.11
                            type: integer
                          index_summary_capacity_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          index_summary_resize_interval_in_minutes:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          initial_range_tombstone_list_allocation_size:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          inter_dc_stream_throughput_outbound_megabits_per_sec:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          inter_dc_tcp_nodelay:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          internode_application_receive_queue_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_application_receive_queue_reserve_endpoint_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_application_receive_queue_reserve_global_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_application_send_queue_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_application_send_queue_reserve_endpoint_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_application_send_queue_reserve_global_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_authenticator:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          internode_compression:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - all
                            - none
                            - dc
                            type: string
                          internode_error_reporting_exclusions:
                            description: Exists in trunk
                            properties:
                              subnets:
                                items:
                                  type: string
                                type: array
                            required:
                            - subnets
                            type: object
                          internode_max_message_size_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_recv_buff_size_in_bytes:
                            description: Exists in 3.11
                            type: integer
                          internode_send_buff_size_in_bytes:
                            description: Exists in 3.11
                            type: integer
                          internode_socket_receive_buffer_size_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_socket_send_buffer_size_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_streaming_tcp_user_timeout_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_tcp_connect_timeout_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          internode_tcp_user_timeout_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          key_cache_keys_to_save:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          key_cache_migrate_during_compaction:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          key_cache_save_period:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          key_cache_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          keyspace_count_warn_threshold:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          max_concurrent_automatic_sstable_upgrades:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          max_hint_window_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          max_hints_delivery_threads:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          max_hints_file_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          max_mutation_size_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          max_streaming_retries:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          max_value_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          memtable_allocation_type:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - unslabbed_heap_buffers
                            - unslabbed_heap_buffers_logged
                            - heap_buffers
                            - offheap_buffers
                            - offheap_objects
                            type: string
                          memtable_cleanup_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          memtable_flush_writers:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          memtable_heap_space_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          memtable_offheap_space_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          min_free_space_per_drive_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          minimum_keyspace_rf:
                            description: Exists in trunk
                            type: integer
                          native_transport_allow_older_protocols:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          native_transport_flush_in_batches_legacy:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          native_transport_idle_timeout_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          native_transport_max_concurrent_connections:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_concurrent_connections_per_ip:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_concurrent_requests_in_bytes:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_concurrent_requests_in_bytes_per_ip:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_frame_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_negotiable_protocol_version:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_max_requests_per_second:
                            description: Exists in trunk
                            type: integer
                          native_transport_max_threads:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          native_transport_rate_limiting_enabled:
                            description: Exists in trunk
                            type: boolean
                          native_transport_receive_queue_capacity_in_bytes:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          network_authorizer:
                            description: 'Exists in: 4.0, trunk'
                            type: string
                          networking_cache_size_in_mb:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          num_tokens:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          otc_backlog_expiration_interval_ms:
                            description: Exists in 3.11
                            type: integer
                          otc_coalescing_enough_coalesced_messages:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          otc_coalescing_strategy:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          otc_coalescing_window_us:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          paxos_cache_size_in_mb:
                            description: Exists in trunk
                            type: integer
                          periodic_commitlog_sync_lag_block_in_ms:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          permissions_cache_max_entries:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          permissions_update_interval_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          permissions_validity_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          phi_convict_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          prepared_statements_cache_size_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          range_request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          range_tombstone_list_growth_factor:
                            description: 'Exists in: 4.0, trunk'
                            type: string
                          read_request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          reject_repair_compaction_threshold:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          repair_command_pool_full_strategy:
                            description: 'Exists in: 4.0, trunk'
                            enum:
                            - queue
                            - reject
                            type: string
                          repair_command_pool_size:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          repair_session_max_tree_depth:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          repair_session_space_in_mb:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          repaired_data_tracking_for_partition_reads_enabled:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          repaired_data_tracking_for_range_reads_enabled:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          replica_filtering_protection:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              cached_rows_fail_threshold:
                                type: integer
                              cached_rows_warn_threshold:
                                type: integer
                            type: object
                          report_unconfirmed_repaired_data_mismatches:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          request_scheduler:
                            description: Exists in 3.11
                            type: string
                          request_scheduler_id:
                            description: Exists in 3.11
                            enum:
                            - keyspace
                            type: string
                          request_scheduler_options:
                            description: Exists in 3.11
                            properties:
                              default_weight:
                                type: integer
                              throttle_limit:
                                type: integer
                              weights:
                                additionalProperties:
                                  type: integer
                                type: object
                            type: object
                          request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          role_manager:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          roles_cache_max_entries:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          roles_update_interval_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          roles_validity_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          row_cache_class_name:
                            description: Exists in 3.11, 4.0, trunk
                            type: string
                          row_cache_keys_to_save:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          row_cache_save_period:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          row_cache_size_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          server_encryption_options:
                            description: Exists in 3.11, 4.0, trunk
                            properties:
                              accepted_protocols:
                                items:
                                  type: string
                                type: array
                              algorithm:
                                type: string
                              cipher_suites:
                                items:
                                  type: string
                                type: array
                              enable_legacy_ssl_storage_port:
                                default: false
                                type: boolean
                              internode_encryption:
                                default: none
                                enum:
                                - none
                                - dc
                                - rack
                                - all
                                type: string
                              optional:
                                default: false
                                type: boolean
                              protocol:
                                type: string
                              require_client_auth:
                                default: false
                                type: boolean
                              require_endpoint_verification:
                                default: false
                                type: boolean
                              store_type:
                                type: string
                            type: object
                          slow_query_log_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          snapshot_before_compaction:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          snapshot_links_per_second:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          snapshot_on_duplicate_row_detection:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          snapshot_on_repaired_data_mismatch:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          sstable_preemptive_open_interval_in_mb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          stream_entire_sstables:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          stream_throughput_outbound_megabits_per_sec:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          streaming_connections_per_host:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          streaming_keep_alive_period_in_secs:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          streaming_socket_timeout_in_ms:
                            description: Exists in 3.11
                            type: integer
                          table_count_warn_threshold:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          thrift_framed_transport_size_in_mb:
                            description: Exists in 3.11
                            type: integer
                          thrift_max_message_length_in_mb:
                            description: Exists in 3.11
                            type: integer
                          thrift_prepared_statements_cache_size_mb:
                            description: Exists in 3.11
                            type: integer
                          tombstone_failure_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          tombstone_warn_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          tracetype_query_ttl:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          tracetype_repair_ttl:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          track_warnings:
                            description: Exists in trunk
                            properties:
                              coordinator_read_size:
                                type: integer
                              enabled:
                                type: boolean
                              local_read_size:
                                type: integer
                              row_index_size:
                                type: integer
                            required:
                            - enabled
                            type: object
                          traverse_auth_from_root:
                            description: Exists in trunk
                            type: boolean
                          trickle_fsync:
                            description: Exists in 3.11, 4.0, trunk
                            type: boolean
                          trickle_fsync_interval_in_kb:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          truncate_request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          unlogged_batch_across_partitions_warn_threshold:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          use_deterministic_table_id:
                            description: Exists in trunk
                            type: boolean
                          use_offheap_merkle_trees:
                            description: 'Exists in: 4.0, trunk'
                            type: boolean
                          user_defined_function_fail_timeout:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          user_defined_function_warn_timeout:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          user_function_timeout_policy:
                            description: Exists in 3.11, 4.0, trunk
                            enum:
                            - ignore
                            - die
                            - die_immediate
                            type: string
                          validation_preview_purge_head_start_in_sec:
                            description: 'Exists in: 4.0, trunk'
                            type: integer
                          windows_timer_interval:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                          write_request_timeout_in_ms:
                            description: Exists in 3.11, 4.0, trunk
                            type: integer
                        type: object
                      jvmOptions:
                        properties:
                          additionalOptions:
                            description: Additional, arbitrary JVM options (advanced).
                            items:
                              type: string
                            type: array
                          cassandra_available_processors:
                            description: 'Available CPU processors. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -Dcassandra.available_processors.'
                            type: integer
                          cassandra_disable_auth_caches_remote_configuration:
                            description: 'Disable remote configuration via JMX of
                              auth caches. Disabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -Dcassandra.disable_auth_caches_remote_configuration.'
                            type: boolean
                          cassandra_expiration_date_overflow_policy:
                            description: 'Defines how to handle INSERT requests with
                              TTL exceeding the maximum supported expiration date.
                              Possible values include `REJECT`, `CAP`, `CAP_NOWARN`.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -Dcassandra.expiration_date_overflow_policy.'
                            type: string
                          cassandra_force_3_0_protocol_version:
                            description: 'Disabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Corresponds
                              to: -Dcassandra.force_3_0_protocol_version=true.'
                            type: boolean
                          cassandra_force_default_indexing_page_size:
                            description: 'Disable dynamic calculation of the page
                              size used when indexing an entire partition (during
                              initial index build/rebuild). Disabled by default. Cass
                              Config Builder: supported for Cassandra 3.11 in jvm.options.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -Dcassandra.force_default_indexing_page_size.'
                            type: boolean
                          cassandra_max_hint_ttl_seconds:
                            description: 'Imposes an upper bound on hint lifetime
                              below the normal min gc_grace_seconds. Disabled by default.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -Dcassandra.maxHintTTL.'
                            type: integer
                          cassandra_metrics_reporter_config_file:
                            description: 'Enable pluggable metrics reporter. Disabled
                              by default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Dcassandra.metricsReporterConfigFile. TODO mountable
                              directory'
                            type: string
                          cassandra_ring_delay_ms:
                            description: 'Amount of time in milliseconds that a node
                              waits before joining the ring. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -Dcassandra.ring_delay_ms.'
                            type: integer
                          cassandra_triggers_directory:
                            description: 'Default location for the trigger JARs. Disabled
                              by default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Dcassandra.triggers_dir. TODO mountable directory'
                            type: string
                          cassandra_write_survey:
                            description: 'For testing new compaction and compression
                              strategies. Disabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -Dcassandra.write_survey.'
                            type: boolean
                          debug_disable_contended_annotations:
                            description: 'Disable honoring user code @Contended annotations.
                              Enabled by default. Cass Config Builder: supported for
                              Cassandra 4.0 in jvm-server.options. Corresponds to:
                              -XX:-RestrictContended.'
                            type: boolean
                          debug_enable_flight_recorder:
                            description: 'Enable Flight Recorder (Use in production
                              is subject to Oracle licensing). Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -XX:+FlightRecorder.'
                            type: boolean
                          debug_listen_remote_debuggers:
                            description: 'Listen for JVM remote debuggers on port
                              1414. Disabled by default. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1414".'
                            type: boolean
                          debug_log_compilation:
                            description: 'Make Cassandra JVM log internal method compilation
                              (developers only). Disabled by default. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -XX:+LogCompilation.'
                            type: boolean
                          debug_non_safepoints:
                            description: 'Whether the compiler should generate the
                              necessary metadata for the parts of the code not at
                              safe points as well. For use with Flight Recorder. Enabled
                              by default. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -XX:+DebugNonSafepoints.'
                            type: boolean
                          debug_preserve_frame_pointer:
                            description: 'Preserve Frame Pointer. Enabled by default.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -XX:+PreserveFramePointer.'
                            type: boolean
                          debug_unlock_commercial_features:
                            description: 'Unlock commercial features. Disabled by
                              default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+UnlockCommercialFeatures.'
                            type: boolean
                          debug_unlock_diagnostic_vm_options:
                            description: 'Enabled by default. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+UnlockDiagnosticVMOptions.'
                            type: boolean
                          gc:
                            default: G1GC
                            description: 'The name of the garbage collector to use.
                              Depending on the Cassandra version, not all values are
                              supported: Cassandra 3.11 supports only G1GC and CMS;
                              Cassandra 4.0 supports G1GC, ZGC, Shenandoah and Graal.
                              This option will unlock the corresponding garbage collector
                              with a default configuration; to further tune the GC
                              settings, use the additional JVM options field. Use
                              the special value Custom if you intend to use non-standard
                              garbage collectors. Cass Config Builder: supported for
                              Cassandra 3.11 in jvm.options. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm11-server.options.'
                            enum:
                            - G1GC
                            - CMS
                            - ZGC
                            - Shenandoah
                            - Graal
                            - Custom
                            type: string
                          gc_cms_heap_size_young_generation:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Disabled by default. Can only be used when
                              CMS garbage collector is used. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Corresponds
                              to: -Xmn.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          gc_cms_initiating_occupancy_fraction:
                            description: 'Defaults to 75. Can only be used when CMS
                              garbage collector is used. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Corresponds to: -XX:CMSInitiatingOccupancyFraction.'
                            maximum: 100
                            minimum: 0
                            type: integer
                          gc_cms_max_tenuring_threshold:
                            description: 'Defaults to 1. Can only be used when CMS
                              garbage collector is used. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Corresponds to: -XX:MaxTenuringThreshold.'
                            type: integer
                          gc_cms_survivor_ratio:
                            description: 'Defaults to 8. Can only be used when CMS
                              garbage collector is used. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Corresponds to: -XX:SurvivorRatio.'
                            type: integer
                          gc_cms_wait_duration_ms:
                            description: 'Defaults to 10000. Can only be used when
                              CMS garbage collector is used. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Corresponds
                              to: -XX:CMSWaitDuration.'
                            type: integer
                          gc_g1_conc_threads:
                            description: 'Concurrent GC Threads. Can only be used
                              when G1 garbage collector is used. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm11-server.options. Corresponds to: -XX:ConcGCThreads.'
                            type: integer
                          gc_g1_initiating_heap_occupancy_percent:
                            description: 'Initiating Heap Occupancy Percentage. Can
                              only be used when G1 garbage collector is used. Cass
                              Config Builder: supported for Cassandra 3.11 in jvm.options.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm11-server.options. Corresponds to: -XX:InitiatingHeapOccupancyPercent.'
                            maximum: 100
                            minimum: 0
                            type: integer
                          gc_g1_max_gc_pause_ms:
                            description: 'G1GC Max GC Pause in milliseconds. Defaults
                              to 500. Can only be used when G1 garbage collector is
                              used. Cass Config Builder: supported for Cassandra 3.11
                              in jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm11-server.options. Corresponds to: -XX:MaxGCPauseMillis.'
                            type: integer
                          gc_g1_parallel_threads:
                            description: 'Parallel GC Threads. Can only be used when
                              G1 garbage collector is used. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm11-server.options.
                              Corresponds to: -XX:ParallelGCThreads.'
                            type: integer
                          gc_g1_rset_updating_pause_time_percent:
                            description: 'G1GC Updating Pause Time Percentage. Defaults
                              to 5. Can only be used when G1 garbage collector is
                              used. Cass Config Builder: supported for Cassandra 3.11
                              in jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm11-server.options. Corresponds to: -XX:G1RSetUpdatingPauseTimePercent.'
                            maximum: 100
                            minimum: 0
                            type: integer
                          gc_print_application_stopped_time:
                            description: 'Print GC Application Stopped Time. Disabled
                              by default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Corresponds to: -XX:+PrintGCApplicationStoppedTime.'
                            type: boolean
                          gc_print_date_stamps:
                            description: 'Print GC Date Stamps. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:+PrintGCDateStamps.'
                            type: boolean
                          gc_print_details:
                            description: 'Print GC details. Disabled by default. Cass
                              Config Builder: supported for Cassandra 3.11 in jvm.options.
                              Corresponds to: -XX:+PrintGCDetails.'
                            type: boolean
                          gc_print_flss_statistics:
                            description: 'Print FLSS Statistics. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:PrintFLSStatistics=1.'
                            type: boolean
                          gc_print_heap:
                            description: 'Print Heap at GC. Disabled by default. Cass
                              Config Builder: supported for Cassandra 3.11 in jvm.options.
                              Corresponds to: -XX:+PrintHeapAtGC.'
                            type: boolean
                          gc_print_log_file_size:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Size of each log file. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:GCLogFileSize.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          gc_print_number_of_log_files:
                            description: 'Number of GC log files. Disabled by default.
                              Can only be used when the G1 garbage collector is used.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:NumberOfGCLogFiles.'
                            type: integer
                          gc_print_promotion_failure:
                            description: 'Print promotion failure. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:+PrintPromotionFailure.'
                            type: boolean
                          gc_print_tenuring_distribution:
                            description: 'Print tenuring distribution. Defaults to
                              false. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Corresponds to: -XX:+PrintTenuringDistribution.'
                            type: boolean
                          gc_print_use_log_file:
                            description: 'Whether to print GC logs to /var/log/cassandra/gc.log.
                              Disabled by default. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Corresponds to: -Xloggc:/var/log/cassandra/gc.log.'
                            type: boolean
                          gc_print_use_log_file_rotation:
                            description: 'Use GC Log File Rotation. Disabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Corresponds to: -XX:+UseGCLogFileRotation.'
                            type: boolean
                          heap_initial_size:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Disabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -Xms.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          heap_max_size:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Disabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -Xmx.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          heapNewGenSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Deprecated. Use gc_cms_heap_size_young_generation
                              instead. Valid for CMS garbage collector only + Cassandra
                              3.11.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          heapSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Deprecated. Use heap_initial_size and heap_max_size
                              instead. If this field is defined, it applies to both
                              max_heap_size and initial_heap_size.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          jdk_allow_attach_self:
                            description: 'Allow the current VM to attach to itself.
                              Defaults to true. Cass Config Builder: supported for
                              Cassandra 4.0 in jvm11-server.options. Corresponds to:
                              -Djdk.attach.allowAttachSelf=true.'
                            type: boolean
                          jmx_connection_type:
                            description: 'Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Possible values
                              for 3.11 include `local-no-auth`, `remote-no-auth`,
                              and `remote-dse-unified-auth`. Defaults to `local-no-auth`.
                              Possible values for 4.0 include `local-no-auth`, `remote-no-auth`.
                              Defaults to `local-no-auth`.'
                            type: string
                          jmx_port:
                            description: 'Disabled by default. Defaults to 7199. TODO
                              Make Reaper aware of the JMX port if a non-default port
                              is used. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options.'
                            type: integer
                          jmx_remote_ssl:
                            description: 'Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Defaults to
                              false. Valid only when JmxConnectionType is "remote-no-auth",
                              "remote-dse-unified-auth".'
                            type: boolean
                          jmx_remote_ssl_opts:
                            description: 'Remote SSL options. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.'
                            type: string
                          jmx_remote_ssl_require_client_auth:
                            description: 'Require Client Authentication for remote
                              SSL? Defaults to false. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options.'
                            type: boolean
                          netty_eventloop_maxpendingtasks:
                            description: 'Defaults to 65536. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Dio.netty.eventLoop.maxPendingTasks.'
                            type: integer
                          netty_try_reflection_set_accessible:
                            description: 'Netty setting `io.netty.tryReflectionSetAccessible`.
                              Defaults to true. Cass Config Builder: supported for
                              Cassandra 4.0 in jvm11-server.options. Corresponds to:
                              -Dio.netty.tryReflectionSetAccessible=true.'
                            type: boolean
                          nio_align_direct_memory:
                            description: 'Align direct memory allocations on page
                              boundaries. Enabled by default. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Dsun.nio.PageAlignDirectMemory=true.'
                            type: boolean
                          nio_maxcachedbuffersize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Defaults to 1048576. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Djdk.nio.maxCachedBufferSize.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          vm_always_pre_touch:
                            description: 'Ensure all memory is faulted and zeroed
                              on startup. Enabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -XX:+AlwaysPreTouch.'
                            type: boolean
                          vm_crash_on_out_of_memory_error:
                            description: 'Disabled by default. Requires `exit_on_out_of_memory_error`
                              to be disabled.. Cass Config Builder: supported for
                              Cassandra 4.0 in jvm-server.options. Corresponds to:
                              -XX:+CrashOnOutOfMemoryError.'
                            type: boolean
                          vm_disable_biased_locking:
                            description: 'Disable biased locking to avoid biased lock
                              revocation pauses. Disabled by default. Cass Config
                              Builder: supported for Cassandra 3.11 in jvm.options.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -XX:-UseBiasedLocking.
                              Note: the Cass Config Builder option is named use_biased_locking,
                              but setting it to true disables biased locking.'
                            type: boolean
                          vm_disable_perf_shared_mem:
                            description: 'Disable hsperfdata mmap''ed file. Enabled
                              by default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+PerfDisableSharedMem.'
                            type: boolean
                          vm_enable_assertions:
                            description: 'Enable assertions. Enabled by default. Cass
                              Config Builder: supported for Cassandra 3.11 in jvm.options.
                              Cass Config Builder: supported for Cassandra 4.0 in
                              jvm-server.options. Corresponds to: -ea.'
                            type: boolean
                          vm_enable_non_root_thread_priority:
                            description: 'Enable lowering thread priority without
                              being root on linux. See CASSANDRA-1181 for details.
                              Enabled by default. Cass Config Builder: supported for
                              Cassandra 3.11 in jvm.options. Corresponds to: -XX:ThreadPriorityPolicy=42.'
                            type: boolean
                          vm_enable_thread_priorities:
                            description: 'Enable thread priorities. Enabled by default.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -XX:+UseThreadPriorities.'
                            type: boolean
                          vm_exit_on_out_of_memory_error:
                            description: 'Disabled by default. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+ExitOnOutOfMemoryError.'
                            type: boolean
                          vm_guaranteed_safepoint_interval_ms:
                            description: 'Defaults to 300000 milliseconds. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -XX:GuaranteedSafepointInterval.'
                            type: integer
                          vm_heap_dump_on_out_of_memory_error:
                            description: 'Enabled by default. Cass Config Builder:
                              supported for Cassandra 3.11 in jvm.options. Cass Config
                              Builder: supported for Cassandra 4.0 in jvm-server.options.
                              Corresponds to: -XX:+HeapDumpOnOutOfMemoryError.'
                            type: boolean
                          vm_per_thread_stack_size:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Per-thread stack size. Defaults to 256Ki.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -Xss.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          vm_prefer_ipv4:
                            description: 'Prefer binding to IPv4 network interfaces.
                              Enabled by default. Cass Config Builder: supported for
                              Cassandra 3.11 in jvm.options. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Djava.net.preferIPv4Stack=true.'
                            type: boolean
                          vm_print_heap_histogram_on_out_of_memory_error:
                            description: 'Disabled by default. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -Dcassandra.printHeapHistogramOnOutOfMemoryError.'
                            type: boolean
                          vm_resize_tlab:
                            description: 'Allow resizing of thread-local allocation
                              blocks. Enabled by default. Cass Config Builder: supported
                              for Cassandra 3.11 in jvm.options. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+ResizeTLAB.'
                            type: boolean
                          vm_string_table_size:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'The size of interned string table. Larger
                              sizes are beneficial to gossip. Defaults to 1000003.
                              Cass Config Builder: supported for Cassandra 3.11 in
                              jvm.options. Cass Config Builder: supported for Cassandra
                              4.0 in jvm-server.options. Corresponds to: -XX:StringTableSize.'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          vm_use_numa:
                            description: 'Enabled by default. Cass Config Builder:
                              supported for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+UseNUMA.'
                            type: boolean
                          vm_use_tlab:
                            description: 'Enable thread-local allocation blocks. Enabled
                              by default. Cass Config Builder: supported for Cassandra
                              3.11 in jvm.options. Cass Config Builder: supported
                              for Cassandra 4.0 in jvm-server.options. Corresponds
                              to: -XX:+UseTLAB.'
                            type: boolean
                        type: object
                    type: object
                  containers:
                    description: 'Containers defines containers to be deployed in
                      each Cassandra pod. K8ssandra-operator and cass-operator will
                      create their own containers, which can be referenced here to
                      override specific settings, such as mounts or resources request/limits
                      for example. Example: containers: - name: server-system-logger
                      - name: custom-container image: busybox - name: cassandra'
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME)
                            syntax: i.e. "$$(VAR_NAME)" will produce the string literal
                            "$(VAR_NAME)". Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot
                            be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. Double $$ are reduced to a single $, which
                            allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                            will produce the string literal "$(VAR_NAME)". Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The Pod''s termination
                                grace period countdown begins before the PreStop hook
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period (unless delayed by
                                finalizers). Other management of the container blocks
                                until the hook completes or until the termination
                                grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                            will be restarted if the probe fails. Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Exposing a port here gives the system additional information
                            about the network connections a container uses, but is
                            primarily informational. Not specifying a port here DOES
                            NOT prevent that port from being exposed. Any port which
                            is listening on the default "0.0.0.0" address inside a
                            container will be accessible from the network. Cannot
                            be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the
                            probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        securityContext:
                          description: 'SecurityContext defines the security options
                            the container should be run with. If set, the fields of
                            SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must only be set if type is "Localhost".
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. This
                                    field is alpha-level and will only be honored
                                    by components that enable the WindowsHostProcessContainers
                                    feature flag. Setting this field without the feature
                                    flag will result in errors when validating the
                                    Pod. All of a Pod's containers must have the same
                                    effective HostProcess value (it is not allowed
                                    to have a mix of HostProcess containers and non-HostProcess
                                    containers).  In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                            initialized. If specified, no other probes are executed
                            until this completes successfully. If this probe fails,
                            the Pod will be restarted, just as if the livenessProbe
                            failed. This can be used to provide different probe parameters
                            at the beginning of a Pod''s lifecycle, when it might
                            take a long time to load data or warm a cache, than during
                            steady-state operation. This cannot be updated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  datacenters:
                    description: Datacenters a list of the DCs in the cluster.
                    items:
                      properties:
                        cdc:
                          description: CDC defines the desired state for CDC integrations.
                            It can be used to feed mutation events from Cassandra
                            into an Apache Pulsar cluster, from where they can be
                            expored to external systems.
                          properties:
                            cdcConcurrentProcessors:
                              type: integer
                            cdcPollIntervalM:
                              type: integer
                            cdcWorkingDir:
                              type: string
                            errorCommitLogReprocessEnabled:
                              type: boolean
                            pulsarAuthParams:
                              type: string
                            pulsarAuthPluginClassName:
                              type: string
                            pulsarBatchDelayInMs:
                              type: integer
                            pulsarKeyBasedBatcher:
                              type: boolean
                            pulsarMaxPendingMessages:
                              type: integer
                            pulsarMaxPendingMessagesAcrossPartitions:
                              type: integer
                            pulsarServiceUrl:
                              minLength: 1
                              type: string
                            sslAllowInsecureConnection:
                              type: string
                            sslCipherSuites:
                              type: string
                            sslEnabledProtocols:
                              type: string
                            sslHostnameVerificationEnable:
                              type: string
                            sslKeystorePassword:
                              type: string
                            sslKeystorePath:
                              type: string
                            sslProvider:
                              type: string
                            sslTruststorePassword:
                              type: string
                            sslTruststorePath:
                              type: string
                            sslTruststoreType:
                              type: string
                            topicPrefix:
                              type: string
                          required:
                          - pulsarServiceUrl
                          type: object
                        containers:
                          description: 'Containers defines containers to be deployed
                            in each Cassandra pod. K8ssandra-operator and cass-operator
                            will create their own containers, which can be referenced
                            here to override specific settings, such as mounts or
                            resources request/limits for example. Example: containers:
                            - name: server-system-logger - name: custom-container
                            image: busybox - name: cassandra'
                          items:
                            description: A single application container that you want
                              to run within a pod.
                            properties:
                              args:
                                description: 'Arguments to the entrypoint. The docker
                                  image''s CMD is used if this is not provided. Variable
                                  references $(VAR_NAME) are expanded using the container''s
                                  environment. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Cannot be updated.
                                  More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              command:
                                description: 'Entrypoint array. Not executed within
                                  a shell. The docker image''s ENTRYPOINT is used
                                  if this is not provided. Variable references $(VAR_NAME)
                                  are expanded using the container''s environment.
                                  If a variable cannot be resolved, the reference
                                  in the input string will be unchanged. Double $$
                                  are reduced to a single $, which allows for escaping
                                  the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                  produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Cannot be updated.
                                  More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              env:
                                description: List of environment variables to set
                                  in the container. Cannot be updated.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              envFrom:
                                description: List of sources to populate environment
                                  variables in the container. The keys defined within
                                  a source must be a C_IDENTIFIER. All invalid keys
                                  will be reported as an event when the container
                                  is starting. When a key exists in multiple sources,
                                  the value associated with the last source will take
                                  precedence. Values defined by an Env with a duplicate
                                  key will take precedence. Cannot be updated.
                                items:
                                  description: EnvFromSource represents the source
                                    of a set of ConfigMaps
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            must be defined
                                          type: boolean
                                      type: object
                                    prefix:
                                      description: An optional identifier to prepend
                                        to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            must be defined
                                          type: boolean
                                      type: object
                                  type: object
                                type: array
                              image:
                                description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                  This field is optional to allow higher level config
                                  management to default or override container images
                                  in workload controllers like Deployments and StatefulSets.'
                                type: string
                              imagePullPolicy:
                                description: 'Image pull policy. One of Always, Never,
                                  IfNotPresent. Defaults to Always if :latest tag
                                  is specified, or IfNotPresent otherwise. Cannot
                                  be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                type: string
                              lifecycle:
                                description: Actions that the management system should
                                  take in response to container lifecycle events.
                                  Cannot be updated.
                                properties:
                                  postStart:
                                    description: 'PostStart is called immediately
                                      after a container is created. If the handler
                                      fails, the container is terminated and restarted
                                      according to its restart policy. Other management
                                      of the container blocks until the hook completes.
                                      More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      tcpSocket:
                                        description: Deprecated. TCPSocket is NOT
                                          supported as a LifecycleHandler and kept
                                          for the backward compatibility. There are
                                          no validation of this field and lifecycle
                                          hooks will fail in runtime when tcp handler
                                          is specified.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                    type: object
                                  preStop:
                                    description: 'PreStop is called immediately before
                                      a container is terminated due to an API request
                                      or management event such as liveness/startup
                                      probe failure, preemption, resource contention,
                                      etc. The handler is not called if the container
                                      crashes or exits. The Pod''s termination grace
                                      period countdown begins before the PreStop hook
                                      is executed. Regardless of the outcome of the
                                      handler, the container will eventually terminate
                                      within the Pod''s termination grace period (unless
                                      delayed by finalizers). Other management of
                                      the container blocks until the hook completes
                                      or until the termination grace period is reached.
                                      More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      tcpSocket:
                                        description: Deprecated. TCPSocket is NOT
                                          supported as a LifecycleHandler and kept
                                          for the backward compatibility. There are
                                          no validation of this field and lifecycle
                                          hooks will fail in runtime when tcp handler
                                          is specified.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                    type: object
                                type: object
                              livenessProbe:
                                description: 'Periodic probe of container liveness.
                                  Container will be restarted if the probe fails.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              name:
                                description: Name of the container specified as a
                                  DNS_LABEL. Each container in a pod must have a unique
                                  name (DNS_LABEL). Cannot be updated.
                                type: string
                              ports:
                                description: List of ports to expose from the container.
                                  Exposing a port here gives the system additional
                                  information about the network connections a container
                                  uses, but is primarily informational. Not specifying
                                  a port here DOES NOT prevent that port from being
                                  exposed. Any port which is listening on the default
                                  "0.0.0.0" address inside a container will be accessible
                                  from the network. Cannot be updated.
                                items:
                                  description: ContainerPort represents a network
                                    port in a single container.
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the
                                        pod's IP address. This must be a valid port
                                        number, 0 < x < 65536.
                                      format: int32
                                      type: integer
                                    hostIP:
                                      description: What host IP to bind the external
                                        port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the
                                        host. If specified, this must be a valid port
                                        number, 0 < x < 65536. If HostNetwork is specified,
                                        this must match ContainerPort. Most containers
                                        do not need this.
                                      format: int32
                                      type: integer
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port
                                        in a pod must have a unique name. Name for
                                        the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description: Protocol for port. Must be UDP,
                                        TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                  - containerPort
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - containerPort
                                - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description: 'Periodic probe of container service
                                  readiness. Container will be removed from service
                                  endpoints if the probe fails. Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              resources:
                                description: 'Compute Resources required by this container.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              securityContext:
                                description: 'SecurityContext defines the security
                                  options the container should be run with. If set,
                                  the fields of SecurityContext override the equivalent
                                  fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              startupProbe:
                                description: 'StartupProbe indicates that the Pod
                                  has successfully initialized. If specified, no other
                                  probes are executed until this completes successfully.
                                  If this probe fails, the Pod will be restarted,
                                  just as if the livenessProbe failed. This can be
                                  used to provide different probe parameters at the
                                  beginning of a Pod''s lifecycle, when it might take
                                  a long time to load data or warm a cache, than during
                                  steady-state operation. This cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              stdin:
                                description: Whether this container should allocate
                                  a buffer for stdin in the container runtime. If
                                  this is not set, reads from stdin in the container
                                  will always result in EOF. Default is false.
                                type: boolean
                              stdinOnce:
                                description: Whether the container runtime should
                                  close the stdin channel after it has been opened
                                  by a single attach. When stdin is true the stdin
                                  stream will remain open across multiple attach sessions.
                                  If stdinOnce is set to true, stdin is opened on
                                  container start, is empty until the first client
                                  attaches to stdin, and then remains open and accepts
                                  data until the client disconnects, at which time
                                  stdin is closed and remains closed until the container
                                  is restarted. If this flag is false, a container
                                  processes that reads from stdin will never receive
                                  an EOF. Default is false
                                type: boolean
                              terminationMessagePath:
                                description: 'Optional: Path at which the file to
                                  which the container''s termination message will
                                  be written is mounted into the container''s filesystem.
                                  Message written is intended to be brief final status,
                                  such as an assertion failure message. Will be truncated
                                  by the node if greater than 4096 bytes. The total
                                  message length across all containers will be limited
                                  to 12kb. Defaults to /dev/termination-log. Cannot
                                  be updated.'
                                type: string
                              terminationMessagePolicy:
                                description: Indicate how the termination message
                                  should be populated. File will use the contents
                                  of terminationMessagePath to populate the container
                                  status message on both success and failure. FallbackToLogsOnError
                                  will use the last chunk of container log output
                                  if the termination message file is empty and the
                                  container exited with an error. The log output is
                                  limited to 2048 bytes or 80 lines, whichever is
                                  smaller. Defaults to File. Cannot be updated.
                                type: string
                              tty:
                                description: Whether this container should allocate
                                  a TTY for itself, also requires 'stdin' to be true.
                                  Default is false.
                                type: boolean
                              volumeDevices:
                                description: volumeDevices is the list of block devices
                                  to be used by the container.
                                items:
                                  description: volumeDevice describes a mapping of
                                    a raw block device within a container.
                                  properties:
                                    devicePath:
                                      description: devicePath is the path inside of
                                        the container that the device will be mapped
                                        to.
                                      type: string
                                    name:
                                      description: name must match the name of a persistentVolumeClaim
                                        in the pod
                                      type: string
                                  required:
                                  - devicePath
                                  - name
                                  type: object
                                type: array
                              volumeMounts:
                                description: Pod volumes to mount into the container's
                                  filesystem. Cannot be updated.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              workingDir:
                                description: Container's working directory. If not
                                  specified, the container runtime's default will
                                  be used, which might be configured in the container
                                  image. Cannot be updated.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        extraVolumes:
                          description: Volumes defines additional volumes to be added
                            to each Cassandra pod. If the volume uses a PersistentVolumeClaim,
                            the PVC will be managed by the statefulset.
                          properties:
                            pvcs:
                              description: PVCs defines additional volumes to be added
                                to each Cassandra pod and managed by the statefulset.
                                Such volumes are automatically mounted by cass-operator
                                into the cassandra containers.
                              items:
                                description: AdditionalVolumes StorageConfig defines
                                  additional storage configurations
                                properties:
                                  mountPath:
                                    description: Mount path into cassandra container
                                    type: string
                                  name:
                                    description: Name of the pvc
                                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                    type: string
                                  pvcSpec:
                                    description: Persistent volume claim spec
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef allows any
                                          non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef preserves
                                          all values, and generates an error if a
                                          disallowed value is specified. (Alpha) Using
                                          this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                - mountPath
                                - name
                                - pvcSpec
                                type: object
                              type: array
                            volumes:
                              description: Volumes defines volumes to be added to
                                each Cassandra pod.
                              items:
                                description: Volume represents a named volume in a
                                  pod that may be accessed by any container in the
                                  pod.
                                properties:
                                  awsElasticBlockStore:
                                    description: 'AWSElasticBlockStore represents
                                      an AWS Disk resource that is attached to a kubelet''s
                                      host machine and then exposed to the pod. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                    properties:
                                      fsType:
                                        description: 'Filesystem type of the volume
                                          that you want to mount. Tip: Ensure that
                                          the filesystem type is supported by the
                                          host operating system. Examples: "ext4",
                                          "xfs", "ntfs". Implicitly inferred to be
                                          "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          TODO: how do we prevent errors in the filesystem
                                          from compromising the machine'
                                        type: string
                                      partition:
                                        description: 'The partition in the volume
                                          that you want to mount. If omitted, the
                                          default is to mount by volume name. Examples:
                                          For volume /dev/sda1, you specify the partition
                                          as "1". Similarly, the volume partition
                                          for /dev/sda is "0" (or you can leave the
                                          property empty).'
                                        format: int32
                                        type: integer
                                      readOnly:
                                        description: 'Specify "true" to force and
                                          set the ReadOnly property in VolumeMounts
                                          to "true". If omitted, the default is "false".
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                        type: boolean
                                      volumeID:
                                        description: 'Unique ID of the persistent
                                          disk resource in AWS (Amazon EBS volume).
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                        type: string
                                    required:
                                    - volumeID
                                    type: object
                                  azureDisk:
                                    description: AzureDisk represents an Azure Data
                                      Disk mount on the host and bind mount to the
                                      pod.
                                    properties:
                                      cachingMode:
                                        description: 'Host Caching mode: None, Read
                                          Only, Read Write.'
                                        type: string
                                      diskName:
                                        description: The Name of the data disk in
                                          the blob storage
                                        type: string
                                      diskURI:
                                        description: The URI the data disk in the
                                          blob storage
                                        type: string
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Implicitly inferred to be "ext4" if unspecified.
                                        type: string
                                      kind:
                                        description: 'Expected values Shared: multiple
                                          blob disks per storage account  Dedicated:
                                          single blob disk per storage account  Managed:
                                          azure managed data disk (only in managed
                                          availability set). defaults to shared'
                                        type: string
                                      readOnly:
                                        description: Defaults to false (read/write).
                                          ReadOnly here will force the ReadOnly setting
                                          in VolumeMounts.
                                        type: boolean
                                    required:
                                    - diskName
                                    - diskURI
                                    type: object
                                  azureFile:
                                    description: AzureFile represents an Azure File
                                      Service mount on the host and bind mount to
                                      the pod.
                                    properties:
                                      readOnly:
                                        description: Defaults to false (read/write).
                                          ReadOnly here will force the ReadOnly setting
                                          in VolumeMounts.
                                        type: boolean
                                      secretName:
                                        description: the name of secret that contains
                                          Azure Storage Account Name and Key
                                        type: string
                                      shareName:
                                        description: Share Name
                                        type: string
                                    required:
                                    - secretName
                                    - shareName
                                    type: object
                                  cephfs:
                                    description: CephFS represents a Ceph FS mount
                                      on the host that shares a pod's lifetime
                                    properties:
                                      monitors:
                                        description: 'Required: Monitors is a collection
                                          of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                        items:
                                          type: string
                                        type: array
                                      path:
                                        description: 'Optional: Used as the mounted
                                          root, rather than the full Ceph tree, default
                                          is /'
                                        type: string
                                      readOnly:
                                        description: 'Optional: Defaults to false
                                          (read/write). ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts. More info:
                                          https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                        type: boolean
                                      secretFile:
                                        description: 'Optional: SecretFile is the
                                          path to key ring for User, default is /etc/ceph/user.secret
                                          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                        type: string
                                      secretRef:
                                        description: 'Optional: SecretRef is reference
                                          to the authentication secret for User, default
                                          is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      user:
                                        description: 'Optional: User is the rados
                                          user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                        type: string
                                    required:
                                    - monitors
                                    type: object
                                  cinder:
                                    description: 'Cinder represents a cinder volume
                                      attached and mounted on kubelets host machine.
                                      More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    properties:
                                      fsType:
                                        description: 'Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Examples: "ext4", "xfs",
                                          "ntfs". Implicitly inferred to be "ext4"
                                          if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                        type: string
                                      readOnly:
                                        description: 'Optional: Defaults to false
                                          (read/write). ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts. More info:
                                          https://examples.k8s.io/mysql-cinder-pd/README.md'
                                        type: boolean
                                      secretRef:
                                        description: 'Optional: points to a secret
                                          object containing parameters used to connect
                                          to OpenStack.'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      volumeID:
                                        description: 'volume id used to identify the
                                          volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                        type: string
                                    required:
                                    - volumeID
                                    type: object
                                  configMap:
                                    description: ConfigMap represents a configMap
                                      that should populate this volume
                                    properties:
                                      defaultMode:
                                        description: 'Optional: mode bits used to
                                          set permissions on created files by default.
                                          Must be an octal value between 0000 and
                                          0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values,
                                          JSON requires decimal values for mode bits.
                                          Defaults to 0644. Directories within the
                                          path are not affected by this setting. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                        format: int32
                                        type: integer
                                      items:
                                        description: If unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file. Must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the
                                                file to map the key to. May not be
                                                an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its keys must be defined
                                        type: boolean
                                    type: object
                                  csi:
                                    description: CSI (Container Storage Interface)
                                      represents ephemeral storage that is handled
                                      by certain external CSI drivers (Beta feature).
                                    properties:
                                      driver:
                                        description: Driver is the name of the CSI
                                          driver that handles this volume. Consult
                                          with your admin for the correct name as
                                          registered in the cluster.
                                        type: string
                                      fsType:
                                        description: Filesystem type to mount. Ex.
                                          "ext4", "xfs", "ntfs". If not provided,
                                          the empty value is passed to the associated
                                          CSI driver which will determine the default
                                          filesystem to apply.
                                        type: string
                                      nodePublishSecretRef:
                                        description: NodePublishSecretRef is a reference
                                          to the secret object containing sensitive
                                          information to pass to the CSI driver to
                                          complete the CSI NodePublishVolume and NodeUnpublishVolume
                                          calls. This field is optional, and  may
                                          be empty if no secret is required. If the
                                          secret object contains more than one secret,
                                          all secret references are passed.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      readOnly:
                                        description: Specifies a read-only configuration
                                          for the volume. Defaults to false (read/write).
                                        type: boolean
                                      volumeAttributes:
                                        additionalProperties:
                                          type: string
                                        description: VolumeAttributes stores driver-specific
                                          properties that are passed to the CSI driver.
                                          Consult your driver's documentation for
                                          supported values.
                                        type: object
                                    required:
                                    - driver
                                    type: object
                                  downwardAPI:
                                    description: DownwardAPI represents downward API
                                      about the pod that should populate this volume
                                    properties:
                                      defaultMode:
                                        description: 'Optional: mode bits to use on
                                          created files by default. Must be a Optional:
                                          mode bits used to set permissions on created
                                          files by default. Must be an octal value
                                          between 0000 and 0777 or a decimal value
                                          between 0 and 511. YAML accepts both octal
                                          and decimal values, JSON requires decimal
                                          values for mode bits. Defaults to 0644.
                                          Directories within the path are not affected
                                          by this setting. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      items:
                                        description: Items is a list of downward API
                                          volume file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  emptyDir:
                                    description: 'EmptyDir represents a temporary
                                      directory that shares a pod''s lifetime. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    properties:
                                      medium:
                                        description: 'What type of storage medium
                                          should back this directory. The default
                                          is "" which means to use the node''s default
                                          medium. Must be an empty string (default)
                                          or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                        type: string
                                      sizeLimit:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: 'Total amount of local storage
                                          required for this EmptyDir volume. The size
                                          limit is also applicable for memory medium.
                                          The maximum usage on memory medium EmptyDir
                                          would be the minimum value between the SizeLimit
                                          specified here and the sum of memory limits
                                          of all containers in a pod. The default
                                          is nil which means that the limit is undefined.
                                          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  ephemeral:
                                    description: "Ephemeral represents a volume that
                                      is handled by a cluster storage driver. The
                                      volume's lifecycle is tied to the pod that defines
                                      it - it will be created before the pod starts,
                                      and deleted when the pod is removed. \n Use
                                      this if: a) the volume is only needed while
                                      the pod runs, b) features of normal volumes
                                      like restoring from snapshot or capacity tracking
                                      are needed, c) the storage driver is specified
                                      through a storage class, and d) the storage
                                      driver supports dynamic volume provisioning
                                      through a PersistentVolumeClaim (see EphemeralVolumeSource
                                      for more information on the connection between
                                      this volume type and PersistentVolumeClaim).
                                      \n Use PersistentVolumeClaim or one of the vendor-specific
                                      APIs for volumes that persist for longer than
                                      the lifecycle of an individual pod. \n Use CSI
                                      for light-weight local ephemeral volumes if
                                      the CSI driver is meant to be used that way
                                      - see the documentation of the driver for more
                                      information. \n A pod can use both types of
                                      ephemeral volumes and persistent volumes at
                                      the same time."
                                    properties:
                                      volumeClaimTemplate:
                                        description: "Will be used to create a stand-alone
                                          PVC to provision the volume. The pod in
                                          which this EphemeralVolumeSource is embedded
                                          will be the owner of the PVC, i.e. the PVC
                                          will be deleted together with the pod.  The
                                          name of the PVC will be `<pod name>-<volume
                                          name>` where `<volume name>` is the name
                                          from the `PodSpec.Volumes` array entry.
                                          Pod validation will reject the pod if the
                                          concatenated name is not valid for a PVC
                                          (for example, too long). \n An existing
                                          PVC with that name that is not owned by
                                          the pod will *not* be used for the pod to
                                          avoid using an unrelated volume by mistake.
                                          Starting the pod is then blocked until the
                                          unrelated PVC is removed. If such a pre-created
                                          PVC is meant to be used by the pod, the
                                          PVC has to updated with an owner reference
                                          to the pod once the pod exists. Normally
                                          this should not be necessary, but it may
                                          be useful when manually reconstructing a
                                          broken cluster. \n This field is read-only
                                          and no changes will be made by Kubernetes
                                          to the PVC after it has been created. \n
                                          Required, must not be nil."
                                        properties:
                                          metadata:
                                            description: May contain labels and annotations
                                              that will be copied into the PVC when
                                              creating it. No other fields are allowed
                                              and will be rejected during validation.
                                            type: object
                                          spec:
                                            description: The specification for the
                                              PersistentVolumeClaim. The entire content
                                              is copied unchanged into the PVC that
                                              gets created from this template. The
                                              same fields as in a PersistentVolumeClaim
                                              are also valid here.
                                            properties:
                                              accessModes:
                                                description: 'AccessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'This field can be used
                                                  to specify either: * An existing
                                                  VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external
                                                  controller can support the specified
                                                  data source, it will create a new
                                                  volume based on the contents of
                                                  the specified data source. If the
                                                  AnyVolumeDataSource feature gate
                                                  is enabled, this field will always
                                                  have the same contents as the DataSourceRef
                                                  field.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              dataSourceRef:
                                                description: 'Specifies the object
                                                  from which to populate the volume
                                                  with data, if a non-empty volume
                                                  is desired. This may be any local
                                                  object from a non-empty API group
                                                  (non core object) or a PersistentVolumeClaim
                                                  object. When this field is specified,
                                                  volume binding will only succeed
                                                  if the type of the specified object
                                                  matches some installed volume populator
                                                  or dynamic provisioner. This field
                                                  will replace the functionality of
                                                  the DataSource field and as such
                                                  if both fields are non-empty, they
                                                  must have the same value. For backwards
                                                  compatibility, both fields (DataSource
                                                  and DataSourceRef) will be set to
                                                  the same value automatically if
                                                  one of them is empty and the other
                                                  is non-empty. There are two important
                                                  differences between DataSource and
                                                  DataSourceRef: * While DataSource
                                                  only allows two specific types of
                                                  objects, DataSourceRef allows any
                                                  non-core object, as well as PersistentVolumeClaim
                                                  objects. * While DataSource ignores
                                                  disallowed values (dropping them),
                                                  DataSourceRef preserves all values,
                                                  and generates an error if a disallowed
                                                  value is specified. (Alpha) Using
                                                  this field requires the AnyVolumeDataSource
                                                  feature gate to be enabled.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'Resources represents
                                                  the minimum resources the volume
                                                  should have. If RecoverVolumeExpansionFailure
                                                  feature is enabled users are allowed
                                                  to specify resource requirements
                                                  that are lower than previous value
                                                  but must still be higher than capacity
                                                  recorded in the status field of
                                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes
                                                  to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'Name of the StorageClass
                                                  required by the claim. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                        required:
                                        - spec
                                        type: object
                                    type: object
                                  fc:
                                    description: FC represents a Fibre Channel resource
                                      that is attached to a kubelet's host machine
                                      and then exposed to the pod.
                                    properties:
                                      fsType:
                                        description: 'Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Implicitly inferred to be "ext4" if unspecified.
                                          TODO: how do we prevent errors in the filesystem
                                          from compromising the machine'
                                        type: string
                                      lun:
                                        description: 'Optional: FC target lun number'
                                        format: int32
                                        type: integer
                                      readOnly:
                                        description: 'Optional: Defaults to false
                                          (read/write). ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts.'
                                        type: boolean
                                      targetWWNs:
                                        description: 'Optional: FC target worldwide
                                          names (WWNs)'
                                        items:
                                          type: string
                                        type: array
                                      wwids:
                                        description: 'Optional: FC volume world wide
                                          identifiers (wwids) Either wwids or combination
                                          of targetWWNs and lun must be set, but not
                                          both simultaneously.'
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  flexVolume:
                                    description: FlexVolume represents a generic volume
                                      resource that is provisioned/attached using
                                      an exec based plugin.
                                    properties:
                                      driver:
                                        description: Driver is the name of the driver
                                          to use for this volume.
                                        type: string
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          The default filesystem depends on FlexVolume
                                          script.
                                        type: string
                                      options:
                                        additionalProperties:
                                          type: string
                                        description: 'Optional: Extra command options
                                          if any.'
                                        type: object
                                      readOnly:
                                        description: 'Optional: Defaults to false
                                          (read/write). ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts.'
                                        type: boolean
                                      secretRef:
                                        description: 'Optional: SecretRef is reference
                                          to the secret object containing sensitive
                                          information to pass to the plugin scripts.
                                          This may be empty if no secret object is
                                          specified. If the secret object contains
                                          more than one secret, all secrets are passed
                                          to the plugin scripts.'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                    required:
                                    - driver
                                    type: object
                                  flocker:
                                    description: Flocker represents a Flocker volume
                                      attached to a kubelet's host machine. This depends
                                      on the Flocker control service being running
                                    properties:
                                      datasetName:
                                        description: Name of the dataset stored as
                                          metadata -> name on the dataset for Flocker
                                          should be considered as deprecated
                                        type: string
                                      datasetUUID:
                                        description: UUID of the dataset. This is
                                          unique identifier of a Flocker dataset
                                        type: string
                                    type: object
                                  gcePersistentDisk:
                                    description: 'GCEPersistentDisk represents a GCE
                                      Disk resource that is attached to a kubelet''s
                                      host machine and then exposed to the pod. More
                                      info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    properties:
                                      fsType:
                                        description: 'Filesystem type of the volume
                                          that you want to mount. Tip: Ensure that
                                          the filesystem type is supported by the
                                          host operating system. Examples: "ext4",
                                          "xfs", "ntfs". Implicitly inferred to be
                                          "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          TODO: how do we prevent errors in the filesystem
                                          from compromising the machine'
                                        type: string
                                      partition:
                                        description: 'The partition in the volume
                                          that you want to mount. If omitted, the
                                          default is to mount by volume name. Examples:
                                          For volume /dev/sda1, you specify the partition
                                          as "1". Similarly, the volume partition
                                          for /dev/sda is "0" (or you can leave the
                                          property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                        format: int32
                                        type: integer
                                      pdName:
                                        description: 'Unique name of the PD resource
                                          in GCE. Used to identify the disk in GCE.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                        type: string
                                      readOnly:
                                        description: 'ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts. Defaults
                                          to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                        type: boolean
                                    required:
                                    - pdName
                                    type: object
                                  gitRepo:
                                    description: 'GitRepo represents a git repository
                                      at a particular revision. DEPRECATED: GitRepo
                                      is deprecated. To provision a container with
                                      a git repo, mount an EmptyDir into an InitContainer
                                      that clones the repo using git, then mount the
                                      EmptyDir into the Pod''s container.'
                                    properties:
                                      directory:
                                        description: Target directory name. Must not
                                          contain or start with '..'.  If '.' is supplied,
                                          the volume directory will be the git repository.  Otherwise,
                                          if specified, the volume will contain the
                                          git repository in the subdirectory with
                                          the given name.
                                        type: string
                                      repository:
                                        description: Repository URL
                                        type: string
                                      revision:
                                        description: Commit hash for the specified
                                          revision.
                                        type: string
                                    required:
                                    - repository
                                    type: object
                                  glusterfs:
                                    description: 'Glusterfs represents a Glusterfs
                                      mount on the host that shares a pod''s lifetime.
                                      More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                    properties:
                                      endpoints:
                                        description: 'EndpointsName is the endpoint
                                          name that details Glusterfs topology. More
                                          info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                        type: string
                                      path:
                                        description: 'Path is the Glusterfs volume
                                          path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                        type: string
                                      readOnly:
                                        description: 'ReadOnly here will force the
                                          Glusterfs volume to be mounted with read-only
                                          permissions. Defaults to false. More info:
                                          https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                        type: boolean
                                    required:
                                    - endpoints
                                    - path
                                    type: object
                                  hostPath:
                                    description: 'HostPath represents a pre-existing
                                      file or directory on the host machine that is
                                      directly exposed to the container. This is generally
                                      used for system agents or other privileged things
                                      that are allowed to see the host machine. Most
                                      containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      --- TODO(jonesdl) We need to restrict who can
                                      use host directory mounts and who can/can not
                                      mount host directories as read/write.'
                                    properties:
                                      path:
                                        description: 'Path of the directory on the
                                          host. If the path is a symlink, it will
                                          follow the link to the real path. More info:
                                          https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                        type: string
                                      type:
                                        description: 'Type for HostPath Volume Defaults
                                          to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                        type: string
                                    required:
                                    - path
                                    type: object
                                  iscsi:
                                    description: 'ISCSI represents an ISCSI Disk resource
                                      that is attached to a kubelet''s host machine
                                      and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                    properties:
                                      chapAuthDiscovery:
                                        description: whether support iSCSI Discovery
                                          CHAP authentication
                                        type: boolean
                                      chapAuthSession:
                                        description: whether support iSCSI Session
                                          CHAP authentication
                                        type: boolean
                                      fsType:
                                        description: 'Filesystem type of the volume
                                          that you want to mount. Tip: Ensure that
                                          the filesystem type is supported by the
                                          host operating system. Examples: "ext4",
                                          "xfs", "ntfs". Implicitly inferred to be
                                          "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                          TODO: how do we prevent errors in the filesystem
                                          from compromising the machine'
                                        type: string
                                      initiatorName:
                                        description: Custom iSCSI Initiator Name.
                                          If initiatorName is specified with iscsiInterface
                                          simultaneously, new iSCSI interface <target
                                          portal>:<volume name> will be created for
                                          the connection.
                                        type: string
                                      iqn:
                                        description: Target iSCSI Qualified Name.
                                        type: string
                                      iscsiInterface:
                                        description: iSCSI Interface Name that uses
                                          an iSCSI transport. Defaults to 'default'
                                          (tcp).
                                        type: string
                                      lun:
                                        description: iSCSI Target Lun number.
                                        format: int32
                                        type: integer
                                      portals:
                                        description: iSCSI Target Portal List. The
                                          portal is either an IP or ip_addr:port if
                                          the port is other than default (typically
                                          TCP ports 860 and 3260).
                                        items:
                                          type: string
                                        type: array
                                      readOnly:
                                        description: ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts. Defaults
                                          to false.
                                        type: boolean
                                      secretRef:
                                        description: CHAP Secret for iSCSI target
                                          and initiator authentication
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      targetPortal:
                                        description: iSCSI Target Portal. The Portal
                                          is either an IP or ip_addr:port if the port
                                          is other than default (typically TCP ports
                                          860 and 3260).
                                        type: string
                                    required:
                                    - iqn
                                    - lun
                                    - targetPortal
                                    type: object
                                  name:
                                    description: 'Volume''s name. Must be a DNS_LABEL
                                      and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  nfs:
                                    description: 'NFS represents an NFS mount on the
                                      host that shares a pod''s lifetime More info:
                                      https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    properties:
                                      path:
                                        description: 'Path that is exported by the
                                          NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                        type: string
                                      readOnly:
                                        description: 'ReadOnly here will force the
                                          NFS export to be mounted with read-only
                                          permissions. Defaults to false. More info:
                                          https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                        type: boolean
                                      server:
                                        description: 'Server is the hostname or IP
                                          address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                        type: string
                                    required:
                                    - path
                                    - server
                                    type: object
                                  persistentVolumeClaim:
                                    description: 'PersistentVolumeClaimVolumeSource
                                      represents a reference to a PersistentVolumeClaim
                                      in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      claimName:
                                        description: 'ClaimName is the name of a PersistentVolumeClaim
                                          in the same namespace as the pod using this
                                          volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        type: string
                                      readOnly:
                                        description: Will force the ReadOnly setting
                                          in VolumeMounts. Default false.
                                        type: boolean
                                    required:
                                    - claimName
                                    type: object
                                  photonPersistentDisk:
                                    description: PhotonPersistentDisk represents a
                                      PhotonController persistent disk attached and
                                      mounted on kubelets host machine
                                    properties:
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Implicitly inferred to be "ext4" if unspecified.
                                        type: string
                                      pdID:
                                        description: ID that identifies Photon Controller
                                          persistent disk
                                        type: string
                                    required:
                                    - pdID
                                    type: object
                                  portworxVolume:
                                    description: PortworxVolume represents a portworx
                                      volume attached and mounted on kubelets host
                                      machine
                                    properties:
                                      fsType:
                                        description: FSType represents the filesystem
                                          type to mount Must be a filesystem type
                                          supported by the host operating system.
                                          Ex. "ext4", "xfs". Implicitly inferred to
                                          be "ext4" if unspecified.
                                        type: string
                                      readOnly:
                                        description: Defaults to false (read/write).
                                          ReadOnly here will force the ReadOnly setting
                                          in VolumeMounts.
                                        type: boolean
                                      volumeID:
                                        description: VolumeID uniquely identifies
                                          a Portworx volume
                                        type: string
                                    required:
                                    - volumeID
                                    type: object
                                  projected:
                                    description: Items for all in one resources secrets,
                                      configmaps, and downward API
                                    properties:
                                      defaultMode:
                                        description: Mode bits used to set permissions
                                          on created files by default. Must be an
                                          octal value between 0000 and 0777 or a decimal
                                          value between 0 and 511. YAML accepts both
                                          octal and decimal values, JSON requires
                                          decimal values for mode bits. Directories
                                          within the path are not affected by this
                                          setting. This might be in conflict with
                                          other options that affect the file mode,
                                          like fsGroup, and the result can be other
                                          mode bits set.
                                        format: int32
                                        type: integer
                                      sources:
                                        description: list of volume projections
                                        items:
                                          description: Projection that may be projected
                                            along with other supported volume types
                                          properties:
                                            configMap:
                                              description: information about the configMap
                                                data to project
                                              properties:
                                                items:
                                                  description: If unspecified, each
                                                    key-value pair in the Data field
                                                    of the referenced ConfigMap will
                                                    be projected into the volume as
                                                    a file whose name is the key and
                                                    content is the value. If specified,
                                                    the listed keys will be projected
                                                    into the specified paths, and
                                                    unlisted keys will not be present.
                                                    If a key is specified which is
                                                    not present in the ConfigMap,
                                                    the volume setup will error unless
                                                    it is marked optional. Paths must
                                                    be relative and may not contain
                                                    the '..' path or start with '..'.
                                                  items:
                                                    description: Maps a string key
                                                      to a path within a volume.
                                                    properties:
                                                      key:
                                                        description: The key to project.
                                                        type: string
                                                      mode:
                                                        description: 'Optional: mode
                                                          bits used to set permissions
                                                          on this file. Must be an
                                                          octal value between 0000
                                                          and 0777 or a decimal value
                                                          between 0 and 511. YAML
                                                          accepts both octal and decimal
                                                          values, JSON requires decimal
                                                          values for mode bits. If
                                                          not specified, the volume
                                                          defaultMode will be used.
                                                          This might be in conflict
                                                          with other options that
                                                          affect the file mode, like
                                                          fsGroup, and the result
                                                          can be other mode bits set.'
                                                        format: int32
                                                        type: integer
                                                      path:
                                                        description: The relative
                                                          path of the file to map
                                                          the key to. May not be an
                                                          absolute path. May not contain
                                                          the path element '..'. May
                                                          not start with the string
                                                          '..'.
                                                        type: string
                                                    required:
                                                    - key
                                                    - path
                                                    type: object
                                                  type: array
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its keys must be
                                                    defined
                                                  type: boolean
                                              type: object
                                            downwardAPI:
                                              description: information about the downwardAPI
                                                data to project
                                              properties:
                                                items:
                                                  description: Items is a list of
                                                    DownwardAPIVolume file
                                                  items:
                                                    description: DownwardAPIVolumeFile
                                                      represents information to create
                                                      the file containing the pod
                                                      field
                                                    properties:
                                                      fieldRef:
                                                        description: 'Required: Selects
                                                          a field of the pod: only
                                                          annotations, labels, name
                                                          and namespace are supported.'
                                                        properties:
                                                          apiVersion:
                                                            description: Version of
                                                              the schema the FieldPath
                                                              is written in terms
                                                              of, defaults to "v1".
                                                            type: string
                                                          fieldPath:
                                                            description: Path of the
                                                              field to select in the
                                                              specified API version.
                                                            type: string
                                                        required:
                                                        - fieldPath
                                                        type: object
                                                      mode:
                                                        description: 'Optional: mode
                                                          bits used to set permissions
                                                          on this file, must be an
                                                          octal value between 0000
                                                          and 0777 or a decimal value
                                                          between 0 and 511. YAML
                                                          accepts both octal and decimal
                                                          values, JSON requires decimal
                                                          values for mode bits. If
                                                          not specified, the volume
                                                          defaultMode will be used.
                                                          This might be in conflict
                                                          with other options that
                                                          affect the file mode, like
                                                          fsGroup, and the result
                                                          can be other mode bits set.'
                                                        format: int32
                                                        type: integer
                                                      path:
                                                        description: 'Required: Path
                                                          is  the relative path name
                                                          of the file to be created.
                                                          Must not be absolute or
                                                          contain the ''..'' path.
                                                          Must be utf-8 encoded. The
                                                          first item of the relative
                                                          path must not start with
                                                          ''..'''
                                                        type: string
                                                      resourceFieldRef:
                                                        description: 'Selects a resource
                                                          of the container: only resources
                                                          limits and requests (limits.cpu,
                                                          limits.memory, requests.cpu
                                                          and requests.memory) are
                                                          currently supported.'
                                                        properties:
                                                          containerName:
                                                            description: 'Container
                                                              name: required for volumes,
                                                              optional for env vars'
                                                            type: string
                                                          divisor:
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            description: Specifies
                                                              the output format of
                                                              the exposed resources,
                                                              defaults to "1"
                                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                            x-kubernetes-int-or-string: true
                                                          resource:
                                                            description: 'Required:
                                                              resource to select'
                                                            type: string
                                                        required:
                                                        - resource
                                                        type: object
                                                    required:
                                                    - path
                                                    type: object
                                                  type: array
                                              type: object
                                            secret:
                                              description: information about the secret
                                                data to project
                                              properties:
                                                items:
                                                  description: If unspecified, each
                                                    key-value pair in the Data field
                                                    of the referenced Secret will
                                                    be projected into the volume as
                                                    a file whose name is the key and
                                                    content is the value. If specified,
                                                    the listed keys will be projected
                                                    into the specified paths, and
                                                    unlisted keys will not be present.
                                                    If a key is specified which is
                                                    not present in the Secret, the
                                                    volume setup will error unless
                                                    it is marked optional. Paths must
                                                    be relative and may not contain
                                                    the '..' path or start with '..'.
                                                  items:
                                                    description: Maps a string key
                                                      to a path within a volume.
                                                    properties:
                                                      key:
                                                        description: The key to project.
                                                        type: string
                                                      mode:
                                                        description: 'Optional: mode
                                                          bits used to set permissions
                                                          on this file. Must be an
                                                          octal value between 0000
                                                          and 0777 or a decimal value
                                                          between 0 and 511. YAML
                                                          accepts both octal and decimal
                                                          values, JSON requires decimal
                                                          values for mode bits. If
                                                          not specified, the volume
                                                          defaultMode will be used.
                                                          This might be in conflict
                                                          with other options that
                                                          affect the file mode, like
                                                          fsGroup, and the result
                                                          can be other mode bits set.'
                                                        format: int32
                                                        type: integer
                                                      path:
                                                        description: The relative
                                                          path of the file to map
                                                          the key to. May not be an
                                                          absolute path. May not contain
                                                          the path element '..'. May
                                                          not start with the string
                                                          '..'.
                                                        type: string
                                                    required:
                                                    - key
                                                    - path
                                                    type: object
                                                  type: array
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              type: object
                                            serviceAccountToken:
                                              description: information about the serviceAccountToken
                                                data to project
                                              properties:
                                                audience:
                                                  description: Audience is the intended
                                                    audience of the token. A recipient
                                                    of a token must identify itself
                                                    with an identifier specified in
                                                    the audience of the token, and
                                                    otherwise should reject the token.
                                                    The audience defaults to the identifier
                                                    of the apiserver.
                                                  type: string
                                                expirationSeconds:
                                                  description: ExpirationSeconds is
                                                    the requested duration of validity
                                                    of the service account token.
                                                    As the token approaches expiration,
                                                    the kubelet volume plugin will
                                                    proactively rotate the service
                                                    account token. The kubelet will
                                                    start trying to rotate the token
                                                    if the token is older than 80
                                                    percent of its time to live or
                                                    if the token is older than 24
                                                    hours.Defaults to 1 hour and must
                                                    be at least 10 minutes.
                                                  format: int64
                                                  type: integer
                                                path:
                                                  description: Path is the path relative
                                                    to the mount point of the file
                                                    to project the token into.
                                                  type: string
                                              required:
                                              - path
                                              type: object
                                          type: object
                                        type: array
                                    type: object
                                  quobyte:
                                    description: Quobyte represents a Quobyte mount
                                      on the host that shares a pod's lifetime
                                    properties:
                                      group:
                                        description: Group to map volume access to
                                          Default is no group
                                        type: string
                                      readOnly:
                                        description: ReadOnly here will force the
                                          Quobyte volume to be mounted with read-only
                                          permissions. Defaults to false.
                                        type: boolean
                                      registry:
                                        description: Registry represents a single
                                          or multiple Quobyte Registry services specified
                                          as a string as host:port pair (multiple
                                          entries are separated with commas) which
                                          acts as the central registry for volumes
                                        type: string
                                      tenant:
                                        description: Tenant owning the given Quobyte
                                          volume in the Backend Used with dynamically
                                          provisioned Quobyte volumes, value is set
                                          by the plugin
                                        type: string
                                      user:
                                        description: User to map volume access to
                                          Defaults to serivceaccount user
                                        type: string
                                      volume:
                                        description: Volume is a string that references
                                          an already created Quobyte volume by name.
                                        type: string
                                    required:
                                    - registry
                                    - volume
                                    type: object
                                  rbd:
                                    description: 'RBD represents a Rados Block Device
                                      mount on the host that shares a pod''s lifetime.
                                      More info: https://examples.k8s.io/volumes/rbd/README.md'
                                    properties:
                                      fsType:
                                        description: 'Filesystem type of the volume
                                          that you want to mount. Tip: Ensure that
                                          the filesystem type is supported by the
                                          host operating system. Examples: "ext4",
                                          "xfs", "ntfs". Implicitly inferred to be
                                          "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                          TODO: how do we prevent errors in the filesystem
                                          from compromising the machine'
                                        type: string
                                      image:
                                        description: 'The rados image name. More info:
                                          https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        type: string
                                      keyring:
                                        description: 'Keyring is the path to key ring
                                          for RBDUser. Default is /etc/ceph/keyring.
                                          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        type: string
                                      monitors:
                                        description: 'A collection of Ceph monitors.
                                          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        items:
                                          type: string
                                        type: array
                                      pool:
                                        description: 'The rados pool name. Default
                                          is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        type: string
                                      readOnly:
                                        description: 'ReadOnly here will force the
                                          ReadOnly setting in VolumeMounts. Defaults
                                          to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        type: boolean
                                      secretRef:
                                        description: 'SecretRef is name of the authentication
                                          secret for RBDUser. If provided overrides
                                          keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      user:
                                        description: 'The rados user name. Default
                                          is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                        type: string
                                    required:
                                    - image
                                    - monitors
                                    type: object
                                  scaleIO:
                                    description: ScaleIO represents a ScaleIO persistent
                                      volume attached and mounted on Kubernetes nodes.
                                    properties:
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Default is "xfs".
                                        type: string
                                      gateway:
                                        description: The host address of the ScaleIO
                                          API Gateway.
                                        type: string
                                      protectionDomain:
                                        description: The name of the ScaleIO Protection
                                          Domain for the configured storage.
                                        type: string
                                      readOnly:
                                        description: Defaults to false (read/write).
                                          ReadOnly here will force the ReadOnly setting
                                          in VolumeMounts.
                                        type: boolean
                                      secretRef:
                                        description: SecretRef references to the secret
                                          for ScaleIO user and other sensitive information.
                                          If this is not provided, Login operation
                                          will fail.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      sslEnabled:
                                        description: Flag to enable/disable SSL communication
                                          with Gateway, default false
                                        type: boolean
                                      storageMode:
                                        description: Indicates whether the storage
                                          for a volume should be ThickProvisioned
                                          or ThinProvisioned. Default is ThinProvisioned.
                                        type: string
                                      storagePool:
                                        description: The ScaleIO Storage Pool associated
                                          with the protection domain.
                                        type: string
                                      system:
                                        description: The name of the storage system
                                          as configured in ScaleIO.
                                        type: string
                                      volumeName:
                                        description: The name of a volume already
                                          created in the ScaleIO system that is associated
                                          with this volume source.
                                        type: string
                                    required:
                                    - gateway
                                    - secretRef
                                    - system
                                    type: object
                                  secret:
                                    description: 'Secret represents a secret that
                                      should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                    properties:
                                      defaultMode:
                                        description: 'Optional: mode bits used to
                                          set permissions on created files by default.
                                          Must be an octal value between 0000 and
                                          0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values,
                                          JSON requires decimal values for mode bits.
                                          Defaults to 0644. Directories within the
                                          path are not affected by this setting. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                        format: int32
                                        type: integer
                                      items:
                                        description: If unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: The key to project.
                                              type: string
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file. Must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: The relative path of the
                                                file to map the key to. May not be
                                                an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      optional:
                                        description: Specify whether the Secret or
                                          its keys must be defined
                                        type: boolean
                                      secretName:
                                        description: 'Name of the secret in the pod''s
                                          namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                        type: string
                                    type: object
                                  storageos:
                                    description: StorageOS represents a StorageOS
                                      volume attached and mounted on Kubernetes nodes.
                                    properties:
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Implicitly inferred to be "ext4" if unspecified.
                                        type: string
                                      readOnly:
                                        description: Defaults to false (read/write).
                                          ReadOnly here will force the ReadOnly setting
                                          in VolumeMounts.
                                        type: boolean
                                      secretRef:
                                        description: SecretRef specifies the secret
                                          to use for obtaining the StorageOS API credentials.  If
                                          not specified, default values will be attempted.
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      volumeName:
                                        description: VolumeName is the human-readable
                                          name of the StorageOS volume.  Volume names
                                          are only unique within a namespace.
                                        type: string
                                      volumeNamespace:
                                        description: VolumeNamespace specifies the
                                          scope of the volume within StorageOS.  If
                                          no namespace is specified then the Pod's
                                          namespace will be used.  This allows the
                                          Kubernetes name scoping to be mirrored within
                                          StorageOS for tighter integration. Set VolumeName
                                          to any name to override the default behaviour.
                                          Set to "default" if you are not using namespaces
                                          within StorageOS. Namespaces that do not
                                          pre-exist within StorageOS will be created.
                                        type: string
                                    type: object
                                  vsphereVolume:
                                    description: VsphereVolume represents a vSphere
                                      volume attached and mounted on kubelets host
                                      machine
                                    properties:
                                      fsType:
                                        description: Filesystem type to mount. Must
                                          be a filesystem type supported by the host
                                          operating system. Ex. "ext4", "xfs", "ntfs".
                                          Implicitly inferred to be "ext4" if unspecified.
                                        type: string
                                      storagePolicyID:
                                        description: Storage Policy Based Management
                                          (SPBM) profile ID associated with the StoragePolicyName.
                                        type: string
                                      storagePolicyName:
                                        description: Storage Policy Based Management
                                          (SPBM) profile name.
                                        type: string
                                      volumePath:
                                        description: Path that identifies vSphere
                                          volume vmdk
                                        type: string
                                    required:
                                    - volumePath
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                        initContainers:
                          description: 'InitContainers defines init-containers to
                            be deployed in each Cassandra pod. K8ssandra-operator
                            and cass-operator will create their own init-containers,
                            which can be referenced here to control ordering or override
                            specific settings such as mounts or resources request/limits
                            for example. Only the name of the k8ssandra-operator/cass-operator
                            init-containers is required, not their full definition
                            which will be created by the operators. Example: initContainers:
                            - name: server-config-init - name: custom-init-container
                            image: busybox - name: medusa-restore Otherwise init-containers
                            referenced here will be injected in first position'
                          items:
                            description: A single application container that you want
                              to run within a pod.
                            properties:
                              args:
                                description: 'Arguments to the entrypoint. The docker
                                  image''s CMD is used if this is not provided. Variable
                                  references $(VAR_NAME) are expanded using the container''s
                                  environment. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Cannot be updated.
                                  More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              command:
                                description: 'Entrypoint array. Not executed within
                                  a shell. The docker image''s ENTRYPOINT is used
                                  if this is not provided. Variable references $(VAR_NAME)
                                  are expanded using the container''s environment.
                                  If a variable cannot be resolved, the reference
                                  in the input string will be unchanged. Double $$
                                  are reduced to a single $, which allows for escaping
                                  the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                  produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Cannot be updated.
                                  More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              env:
                                description: List of environment variables to set
                                  in the container. Cannot be updated.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              envFrom:
                                description: List of sources to populate environment
                                  variables in the container. The keys defined within
                                  a source must be a C_IDENTIFIER. All invalid keys
                                  will be reported as an event when the container
                                  is starting. When a key exists in multiple sources,
                                  the value associated with the last source will take
                                  precedence. Values defined by an Env with a duplicate
                                  key will take precedence. Cannot be updated.
                                items:
                                  description: EnvFromSource represents the source
                                    of a set of ConfigMaps
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            must be defined
                                          type: boolean
                                      type: object
                                    prefix:
                                      description: An optional identifier to prepend
                                        to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            must be defined
                                          type: boolean
                                      type: object
                                  type: object
                                type: array
                              image:
                                description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                  This field is optional to allow higher level config
                                  management to default or override container images
                                  in workload controllers like Deployments and StatefulSets.'
                                type: string
                              imagePullPolicy:
                                description: 'Image pull policy. One of Always, Never,
                                  IfNotPresent. Defaults to Always if :latest tag
                                  is specified, or IfNotPresent otherwise. Cannot
                                  be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                type: string
                              lifecycle:
                                description: Actions that the management system should
                                  take in response to container lifecycle events.
                                  Cannot be updated.
                                properties:
                                  postStart:
                                    description: 'PostStart is called immediately
                                      after a container is created. If the handler
                                      fails, the container is terminated and restarted
                                      according to its restart policy. Other management
                                      of the container blocks until the hook completes.
                                      More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      tcpSocket:
                                        description: Deprecated. TCPSocket is NOT
                                          supported as a LifecycleHandler and kept
                                          for the backward compatibility. There are
                                          no validation of this field and lifecycle
                                          hooks will fail in runtime when tcp handler
                                          is specified.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                    type: object
                                  preStop:
                                    description: 'PreStop is called immediately before
                                      a container is terminated due to an API request
                                      or management event such as liveness/startup
                                      probe failure, preemption, resource contention,
                                      etc. The handler is not called if the container
                                      crashes or exits. The Pod''s termination grace
                                      period countdown begins before the PreStop hook
                                      is executed. Regardless of the outcome of the
                                      handler, the container will eventually terminate
                                      within the Pod''s termination grace period (unless
                                      delayed by finalizers). Other management of
                                      the container blocks until the hook completes
                                      or until the termination grace period is reached.
                                      More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      tcpSocket:
                                        description: Deprecated. TCPSocket is NOT
                                          supported as a LifecycleHandler and kept
                                          for the backward compatibility. There are
                                          no validation of this field and lifecycle
                                          hooks will fail in runtime when tcp handler
                                          is specified.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                    type: object
                                type: object
                              livenessProbe:
                                description: 'Periodic probe of container liveness.
                                  Container will be restarted if the probe fails.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              name:
                                description: Name of the container specified as a
                                  DNS_LABEL. Each container in a pod must have a unique
                                  name (DNS_LABEL). Cannot be updated.
                                type: string
                              ports:
                                description: List of ports to expose from the container.
                                  Exposing a port here gives the system additional
                                  information about the network connections a container
                                  uses, but is primarily informational. Not specifying
                                  a port here DOES NOT prevent that port from being
                                  exposed. Any port which is listening on the default
                                  "0.0.0.0" address inside a container will be accessible
                                  from the network. Cannot be updated.
                                items:
                                  description: ContainerPort represents a network
                                    port in a single container.
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the
                                        pod's IP address. This must be a valid port
                                        number, 0 < x < 65536.
                                      format: int32
                                      type: integer
                                    hostIP:
                                      description: What host IP to bind the external
                                        port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the
                                        host. If specified, this must be a valid port
                                        number, 0 < x < 65536. If HostNetwork is specified,
                                        this must match ContainerPort. Most containers
                                        do not need this.
                                      format: int32
                                      type: integer
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port
                                        in a pod must have a unique name. Name for
                                        the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description: Protocol for port. Must be UDP,
                                        TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                  - containerPort
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - containerPort
                                - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description: 'Periodic probe of container service
                                  readiness. Container will be removed from service
                                  endpoints if the probe fails. Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              resources:
                                description: 'Compute Resources required by this container.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              securityContext:
                                description: 'SecurityContext defines the security
                                  options the container should be run with. If set,
                                  the fields of SecurityContext override the equivalent
                                  fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              startupProbe:
                                description: 'StartupProbe indicates that the Pod
                                  has successfully initialized. If specified, no other
                                  probes are executed until this completes successfully.
                                  If this probe fails, the Pod will be restarted,
                                  just as if the livenessProbe failed. This can be
                                  used to provide different probe parameters at the
                                  beginning of a Pod''s lifecycle, when it might take
                                  a long time to load data or warm a cache, than during
                                  steady-state operation. This cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for
                                      the probe to be considered failed after having
                                      succeeded. Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  grpc:
                                    description: GRPC specifies an action involving
                                      a GRPC port. This is an alpha field and requires
                                      enabling GRPCContainerProbe feature gate.
                                    properties:
                                      port:
                                        description: Port number of the gRPC service.
                                          Number must be in the range 1 to 65535.
                                        format: int32
                                        type: integer
                                      service:
                                        description: "Service is the name of the service
                                          to place in the gRPC HealthCheckRequest
                                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                          \n If this is not specified, the default
                                          behavior is defined by gRPC."
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform
                                      the probe. Default to 10 seconds. Minimum value
                                      is 1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for
                                      the probe to be considered successful after
                                      having failed. Defaults to 1. Must be 1 for
                                      liveness and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: TCPSocket specifies an action involving
                                      a TCP port.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the
                                      pod needs to terminate gracefully upon probe
                                      failure. The grace period is the duration in
                                      seconds after the processes running in the pod
                                      are sent a termination signal and the time when
                                      the processes are forcibly halted with a kill
                                      signal. Set this value longer than the expected
                                      cleanup time for your process. If this value
                                      is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature
                                      gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              stdin:
                                description: Whether this container should allocate
                                  a buffer for stdin in the container runtime. If
                                  this is not set, reads from stdin in the container
                                  will always result in EOF. Default is false.
                                type: boolean
                              stdinOnce:
                                description: Whether the container runtime should
                                  close the stdin channel after it has been opened
                                  by a single attach. When stdin is true the stdin
                                  stream will remain open across multiple attach sessions.
                                  If stdinOnce is set to true, stdin is opened on
                                  container start, is empty until the first client
                                  attaches to stdin, and then remains open and accepts
                                  data until the client disconnects, at which time
                                  stdin is closed and remains closed until the container
                                  is restarted. If this flag is false, a container
                                  processes that reads from stdin will never receive
                                  an EOF. Default is false
                                type: boolean
                              terminationMessagePath:
                                description: 'Optional: Path at which the file to
                                  which the container''s termination message will
                                  be written is mounted into the container''s filesystem.
                                  Message written is intended to be brief final status,
                                  such as an assertion failure message. Will be truncated
                                  by the node if greater than 4096 bytes. The total
                                  message length across all containers will be limited
                                  to 12kb. Defaults to /dev/termination-log. Cannot
                                  be updated.'
                                type: string
                              terminationMessagePolicy:
                                description: Indicate how the termination message
                                  should be populated. File will use the contents
                                  of terminationMessagePath to populate the container
                                  status message on both success and failure. FallbackToLogsOnError
                                  will use the last chunk of container log output
                                  if the termination message file is empty and the
                                  container exited with an error. The log output is
                                  limited to 2048 bytes or 80 lines, whichever is
                                  smaller. Defaults to File. Cannot be updated.
                                type: string
                              tty:
                                description: Whether this container should allocate
                                  a TTY for itself, also requires 'stdin' to be true.
                                  Default is false.
                                type: boolean
                              volumeDevices:
                                description: volumeDevices is the list of block devices
                                  to be used by the container.
                                items:
                                  description: volumeDevice describes a mapping of
                                    a raw block device within a container.
                                  properties:
                                    devicePath:
                                      description: devicePath is the path inside of
                                        the container that the device will be mapped
                                        to.
                                      type: string
                                    name:
                                      description: name must match the name of a persistentVolumeClaim
                                        in the pod
                                      type: string
                                  required:
                                  - devicePath
                                  - name
                                  type: object
                                type: array
                              volumeMounts:
                                description: Pod volumes to mount into the container's
                                  filesystem. Cannot be updated.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              workingDir:
                                description: Container's working directory. If not
                                  specified, the container runtime's default will
                                  be used, which might be configured in the container
                                  image. Cannot be updated.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        jmxInitContainerImage:
                          default:
                            name: busybox
                            tag: 1.34.1
                          description: The image to use in each Cassandra pod for
                            the (short-lived) init container that enables JMX remote
                            authentication on Cassandra pods. This is only useful
                            when authentication is enabled in the cluster. The default
                            is "busybox:1.34.1".
                          properties:
                            name:
                              description: The image name to use.
                              type: string
                            pullPolicy:
                              description: The image pull policy to use. Defaults
                                to "Always" if the tag is "latest", otherwise to "IfNotPresent".
                              enum:
                              - Always
                              - IfNotPresent
                              - Never
                              type: string
                            pullSecretRef:
                              description: 'The secret to use when pulling the image
                                from private repositories. If specified, this secret
                                will be passed to individual puller implementations
                                for them to use. For example, in the case of Docker,
                                only DockerConfig type secrets are honored. More info:
                                https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            registry:
                              default: docker.io
                              description: The Docker registry to use. Defaults to
                                "docker.io", the official Docker Hub.
                              type: string
                            repository:
                              description: The Docker repository to use.
                              type: string
                            tag:
                              default: latest
                              description: The image tag to use. Defaults to "latest".
                              type: string
                          type: object
                        k8sContext:
                          type: string
                        metadata:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          type: object
                        mgmtAPIHeap:
                          anyOf:
                          - type: integer
                          - type: string
                          description: MgmtAPIHeap defines the amount of memory devoted
                            to the management api heap.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        networking:
                          description: Networking enables host networking and configures
                            a NodePort ports.
                          properties:
                            hostNetwork:
                              type: boolean
                            nodePort:
                              properties:
                                internode:
                                  type: integer
                                internodeSSL:
                                  type: integer
                                native:
                                  type: integer
                                nativeSSL:
                                  type: integer
                              type: object
                          type: object
                        racks:
                          description: Racks is a list of named racks. Note that racks
                            are used to create node affinity. //
                          items:
                            description: Rack ...
                            properties:
                              name:
                                description: The rack name
                                minLength: 2
                                type: string
                              nodeAffinityLabels:
                                additionalProperties:
                                  type: string
                                description: NodeAffinityLabels to pin the rack, using
                                  node affinity
                                type: object
                              zone:
                                description: Deprecated. Use nodeAffinityLabels instead.
                                  Zone name to pin the rack, using node affinity
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        resources:
                          description: Resources is the cpu and memory resources for
                            the cassandra container.
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        serverImage:
                          description: ServerImage is the image for the cassandra
                            container. Note that this should be a management-api image.
                            If left empty the operator will choose a default image
                            based on ServerVersion.
                          type: string
                        serverVersion:
                          description: ServerVersion is the Cassandra version.
                          pattern: (3\.11\.\d+)|(4\.0\.\d+)
                          type: string
                        size:
                          description: Size is the number Cassandra pods to deploy
                            in this datacenter. This number does not include Stargate
                            instances.
                          format: int32
                          minimum: 1
                          type: integer
                        softPodAntiAffinity:
                          description: SoftPodAntiAffinity sets whether multiple Cassandra
                            instances can be scheduled on the same node. This should
                            normally be false to ensure cluster resilience but may
                            be set true for test/dev scenarios to minimise the number
                            of nodes required.
                          type: boolean
                        stargate:
                          description: Stargate defines the desired deployment characteristics
                            for Stargate in this datacenter. Leave nil to skip deploying
                            Stargate in this datacenter.
                          properties:
                            affinity:
                              description: Affinity is the affinity to apply to all
                                the Stargate pods. Leave nil to let the controller
                                reuse the same affinity rules used for data pods in
                                this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                              properties:
                                nodeAffinity:
                                  description: Describes node affinity scheduling
                                    rules for the pod.
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node matches the corresponding matchExpressions;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: An empty preferred scheduling
                                          term matches all objects with implicit weight
                                          0 (i.e. it's a no-op). A null preferred
                                          scheduling term matches no objects (i.e.
                                          is also a no-op).
                                        properties:
                                          preference:
                                            description: A node selector term, associated
                                              with the corresponding weight.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          weight:
                                            description: Weight associated with matching
                                              the corresponding nodeSelectorTerm,
                                              in the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - preference
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to an update), the
                                        system may or may not try to eventually evict
                                        the pod from its node.
                                      properties:
                                        nodeSelectorTerms:
                                          description: Required. A list of node selector
                                            terms. The terms are ORed.
                                          items:
                                            description: A null or empty node selector
                                              term matches no objects. The requirements
                                              of them are ANDed. The TopologySelectorTerm
                                              type implements a subset of the NodeSelectorTerm.
                                            properties:
                                              matchExpressions:
                                                description: A list of node selector
                                                  requirements by node's labels.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchFields:
                                                description: A list of node selector
                                                  requirements by node's fields.
                                                items:
                                                  description: A node selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: The label key that
                                                        the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: Represents a key's
                                                        relationship to a set of values.
                                                        Valid operators are In, NotIn,
                                                        Exists, DoesNotExist. Gt,
                                                        and Lt.
                                                      type: string
                                                    values:
                                                      description: An array of string
                                                        values. If the operator is
                                                        In or NotIn, the values array
                                                        must be non-empty. If the
                                                        operator is Exists or DoesNotExist,
                                                        the values array must be empty.
                                                        If the operator is Gt or Lt,
                                                        the values array must have
                                                        a single element, which will
                                                        be interpreted as an integer.
                                                        This array is replaced during
                                                        a strategic merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                            type: object
                                          type: array
                                      required:
                                      - nodeSelectorTerms
                                      type: object
                                  type: object
                                podAffinity:
                                  description: Describes pod affinity scheduling rules
                                    (e.g. co-locate this pod in the same node, zone,
                                    etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the affinity expressions
                                        specified by this field, but it may choose
                                        a node that violates one or more of the expressions.
                                        The node that is most preferred is the one
                                        with the greatest sum of weights, i.e. for
                                        each node that meets all of the scheduling
                                        requirements (resource request, requiredDuringScheduling
                                        affinity expressions, etc.), compute a sum
                                        by iterating through the elements of this
                                        field and adding "weight" to the sum if the
                                        node has pods which matches the corresponding
                                        podAffinityTerm; the node(s) with the highest
                                        sum are the most preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces. This field is beta-level
                                                  and is only honored when PodAffinityNamespaceSelector
                                                  feature is enabled.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the affinity requirements specified
                                        by this field are not met at scheduling time,
                                        the pod will not be scheduled onto the node.
                                        If the affinity requirements specified by
                                        this field cease to be met at some point during
                                        pod execution (e.g. due to a pod label update),
                                        the system may or may not try to eventually
                                        evict the pod from its node. When there are
                                        multiple elements, the lists of nodes corresponding
                                        to each podAffinityTerm are intersected, i.e.
                                        all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaceSelector:
                                            description: A label query over the set
                                              of namespaces that the term applies
                                              to. The term is applied to the union
                                              of the namespaces selected by this field
                                              and the ones listed in the namespaces
                                              field. null selector and null or empty
                                              namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                              This field is beta-level and is only
                                              honored when PodAffinityNamespaceSelector
                                              feature is enabled.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies a static
                                              list of namespace names that the term
                                              applies to. The term is applied to the
                                              union of the namespaces listed in this
                                              field and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null
                                              namespaceSelector means "this pod's
                                              namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                                podAntiAffinity:
                                  description: Describes pod anti-affinity scheduling
                                    rules (e.g. avoid putting this pod in the same
                                    node, zone, etc. as some other pod(s)).
                                  properties:
                                    preferredDuringSchedulingIgnoredDuringExecution:
                                      description: The scheduler will prefer to schedule
                                        pods to nodes that satisfy the anti-affinity
                                        expressions specified by this field, but it
                                        may choose a node that violates one or more
                                        of the expressions. The node that is most
                                        preferred is the one with the greatest sum
                                        of weights, i.e. for each node that meets
                                        all of the scheduling requirements (resource
                                        request, requiredDuringScheduling anti-affinity
                                        expressions, etc.), compute a sum by iterating
                                        through the elements of this field and adding
                                        "weight" to the sum if the node has pods which
                                        matches the corresponding podAffinityTerm;
                                        the node(s) with the highest sum are the most
                                        preferred.
                                      items:
                                        description: The weights of all of the matched
                                          WeightedPodAffinityTerm fields are added
                                          per-node to find the most preferred node(s)
                                        properties:
                                          podAffinityTerm:
                                            description: Required. A pod affinity
                                              term, associated with the corresponding
                                              weight.
                                            properties:
                                              labelSelector:
                                                description: A label query over a
                                                  set of resources, in this case pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaceSelector:
                                                description: A label query over the
                                                  set of namespaces that the term
                                                  applies to. The term is applied
                                                  to the union of the namespaces selected
                                                  by this field and the ones listed
                                                  in the namespaces field. null selector
                                                  and null or empty namespaces list
                                                  means "this pod's namespace". An
                                                  empty selector ({}) matches all
                                                  namespaces. This field is beta-level
                                                  and is only honored when PodAffinityNamespaceSelector
                                                  feature is enabled.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              namespaces:
                                                description: namespaces specifies
                                                  a static list of namespace names
                                                  that the term applies to. The term
                                                  is applied to the union of the namespaces
                                                  listed in this field and the ones
                                                  selected by namespaceSelector. null
                                                  or empty namespaces list and null
                                                  namespaceSelector means "this pod's
                                                  namespace"
                                                items:
                                                  type: string
                                                type: array
                                              topologyKey:
                                                description: This pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with the pods matching the labelSelector
                                                  in the specified namespaces, where
                                                  co-located is defined as running
                                                  on a node whose value of the label
                                                  with key topologyKey matches that
                                                  of any node on which any of the
                                                  selected pods is running. Empty
                                                  topologyKey is not allowed.
                                                type: string
                                            required:
                                            - topologyKey
                                            type: object
                                          weight:
                                            description: weight associated with matching
                                              the corresponding podAffinityTerm, in
                                              the range 1-100.
                                            format: int32
                                            type: integer
                                        required:
                                        - podAffinityTerm
                                        - weight
                                        type: object
                                      type: array
                                    requiredDuringSchedulingIgnoredDuringExecution:
                                      description: If the anti-affinity requirements
                                        specified by this field are not met at scheduling
                                        time, the pod will not be scheduled onto the
                                        node. If the anti-affinity requirements specified
                                        by this field cease to be met at some point
                                        during pod execution (e.g. due to a pod label
                                        update), the system may or may not try to
                                        eventually evict the pod from its node. When
                                        there are multiple elements, the lists of
                                        nodes corresponding to each podAffinityTerm
                                        are intersected, i.e. all terms must be satisfied.
                                      items:
                                        description: Defines a set of pods (namely
                                          those matching the labelSelector relative
                                          to the given namespace(s)) that this pod
                                          should be co-located (affinity) or not co-located
                                          (anti-affinity) with, where co-located is
                                          defined as running on a node whose value
                                          of the label with key <topologyKey> matches
                                          that of any node on which a pod of the set
                                          of pods is running
                                        properties:
                                          labelSelector:
                                            description: A label query over a set
                                              of resources, in this case pods.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaceSelector:
                                            description: A label query over the set
                                              of namespaces that the term applies
                                              to. The term is applied to the union
                                              of the namespaces selected by this field
                                              and the ones listed in the namespaces
                                              field. null selector and null or empty
                                              namespaces list means "this pod's namespace".
                                              An empty selector ({}) matches all namespaces.
                                              This field is beta-level and is only
                                              honored when PodAffinityNamespaceSelector
                                              feature is enabled.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          namespaces:
                                            description: namespaces specifies a static
                                              list of namespace names that the term
                                              applies to. The term is applied to the
                                              union of the namespaces listed in this
                                              field and the ones selected by namespaceSelector.
                                              null or empty namespaces list and null
                                              namespaceSelector means "this pod's
                                              namespace"
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: This pod should be co-located
                                              (affinity) or not co-located (anti-affinity)
                                              with the pods matching the labelSelector
                                              in the specified namespaces, where co-located
                                              is defined as running on a node whose
                                              value of the label with key topologyKey
                                              matches that of any node on which any
                                              of the selected pods is running. Empty
                                              topologyKey is not allowed.
                                            type: string
                                        required:
                                        - topologyKey
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            allowStargateOnDataNodes:
                              default: false
                              description: 'AllowStargateOnDataNodes allows Stargate
                                pods to be scheduled on a worker node already hosting
                                data pods for this datacenter. The default is false,
                                which means that Stargate pods will be scheduled on
                                separate worker nodes. Note: if the datacenter pods
                                have HostNetwork:true, then the Stargate pods will
                                inherit of it, in which case it is possible that Stargate
                                nodes won''t be allowed to sit on data nodes even
                                if this property is set to true, because of port conflicts
                                on the same IP address.'
                              type: boolean
                            authOptions:
                              description: Authentication options.
                              properties:
                                apiAuthMethod:
                                  default: Table
                                  description: 'The method to use for authenticating
                                    requests to the Stargate APIs. Stargate currently
                                    has two authentication / authorization methods:
                                    - Table: table-based; - JWT: JSON web token (JWT)-based.
                                    The methods are mutually exclusive. The default
                                    method is Table.'
                                  enum:
                                  - Table
                                  - JWT
                                  type: string
                                providerUrl:
                                  description: Required when using JWT authentication
                                    method, ignored otherwise.
                                  type: string
                                tokenTtlSeconds:
                                  description: The time-to-live in seconds of an API
                                    authentication token. Valid only for the Table
                                    authentication method. By default, the token persists
                                    for 30 minutes with a sliding window. Each use
                                    of the token to authenticate resets the 30-minute
                                    window. A token created and used after 29 minutes
                                    will authenticate a request, but if 31 minutes
                                    passes before use, the token will no longer exist.
                                    Default is 1800 seconds (30 minutes).
                                  minimum: 1
                                  type: integer
                              type: object
                            cassandraConfigMapRef:
                              description: CassandraConfigMapRef is a reference to
                                a ConfigMap that holds Cassandra configuration. The
                                map should have a key named cassandra_yaml.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            containerImage:
                              default:
                                repository: stargateio
                                tag: v1.0.45
                              description: ContainerImage is the image characteristics
                                to use for Stargate containers. Leave nil to use a
                                default image.
                              properties:
                                name:
                                  description: The image name to use.
                                  type: string
                                pullPolicy:
                                  description: The image pull policy to use. Defaults
                                    to "Always" if the tag is "latest", otherwise
                                    to "IfNotPresent".
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  - Never
                                  type: string
                                pullSecretRef:
                                  description: 'The secret to use when pulling the
                                    image from private repositories. If specified,
                                    this secret will be passed to individual puller
                                    implementations for them to use. For example,
                                    in the case of Docker, only DockerConfig type
                                    secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                registry:
                                  default: docker.io
                                  description: The Docker registry to use. Defaults
                                    to "docker.io", the official Docker Hub.
                                  type: string
                                repository:
                                  description: The Docker repository to use.
                                  type: string
                                tag:
                                  default: latest
                                  description: The image tag to use. Defaults to "latest".
                                  type: string
                              type: object
                            heapSize:
                              anyOf:
                              - type: integer
                              - type: string
                              default: 256Mi
                              description: 'HeapSize sets the JVM heap size to use
                                for Stargate. If no Resources are specified, this
                                value will also be used to set a default memory request
                                and limit for the Stargate pods: these will be set
                                to HeapSize x2 and x4, respectively.'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            livenessProbe:
                              description: LivenessProbe sets the Stargate liveness
                                probe. Leave nil to use defaults.
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                failureThreshold:
                                  description: Minimum consecutive failures for the
                                    probe to be considered failed after having succeeded.
                                    Defaults to 3. Minimum value is 1.
                                  format: int32
                                  type: integer
                                grpc:
                                  description: GRPC specifies an action involving
                                    a GRPC port. This is an alpha field and requires
                                    enabling GRPCContainerProbe feature gate.
                                  properties:
                                    port:
                                      description: Port number of the gRPC service.
                                        Number must be in the range 1 to 65535.
                                      format: int32
                                      type: integer
                                    service:
                                      description: "Service is the name of the service
                                        to place in the gRPC HealthCheckRequest (see
                                        https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                        \n If this is not specified, the default behavior
                                        is defined by gRPC."
                                      type: string
                                  required:
                                  - port
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                initialDelaySeconds:
                                  description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                                periodSeconds:
                                  description: How often (in seconds) to perform the
                                    probe. Default to 10 seconds. Minimum value is
                                    1.
                                  format: int32
                                  type: integer
                                successThreshold:
                                  description: Minimum consecutive successes for the
                                    probe to be considered successful after having
                                    failed. Defaults to 1. Must be 1 for liveness
                                    and startup. Minimum value is 1.
                                  format: int32
                                  type: integer
                                tcpSocket:
                                  description: TCPSocket specifies an action involving
                                    a TCP port.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                                terminationGracePeriodSeconds:
                                  description: Optional duration in seconds the pod
                                    needs to terminate gracefully upon probe failure.
                                    The grace period is the duration in seconds after
                                    the processes running in the pod are sent a termination
                                    signal and the time when the processes are forcibly
                                    halted with a kill signal. Set this value longer
                                    than the expected cleanup time for your process.
                                    If this value is nil, the pod's terminationGracePeriodSeconds
                                    will be used. Otherwise, this value overrides
                                    the value provided by the pod spec. Value must
                                    be non-negative integer. The value zero indicates
                                    stop immediately via the kill signal (no opportunity
                                    to shut down). This is a beta field and requires
                                    enabling ProbeTerminationGracePeriod feature gate.
                                    Minimum value is 1. spec.terminationGracePeriodSeconds
                                    is used if unset.
                                  format: int64
                                  type: integer
                                timeoutSeconds:
                                  description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                              type: object
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: NodeSelector is an optional map of label
                                keys and values to restrict the scheduling of Stargate
                                nodes to workers with matching labels. Leave nil to
                                let the controller reuse the same node selectors used
                                for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                              type: object
                            racks:
                              description: Racks allow customizing Stargate characteristics
                                for specific racks in the datacenter.
                              items:
                                description: StargateRackTemplate defines custom rules
                                  for Stargate pods in a given rack. These rules will
                                  be merged with rules defined at datacenter level
                                  in a StargateDatacenterTemplate; rack-level rules
                                  have precedence over datacenter-level ones.
                                properties:
                                  affinity:
                                    description: Affinity is the affinity to apply
                                      to all the Stargate pods. Leave nil to let the
                                      controller reuse the same affinity rules used
                                      for data pods in this datacenter, if any. See
                                      https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                                    properties:
                                      nodeAffinity:
                                        description: Describes node affinity scheduling
                                          rules for the pod.
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the affinity expressions specified by
                                              this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node matches the corresponding
                                              matchExpressions; the node(s) with the
                                              highest sum are the most preferred.
                                            items:
                                              description: An empty preferred scheduling
                                                term matches all objects with implicit
                                                weight 0 (i.e. it's a no-op). A null
                                                preferred scheduling term matches
                                                no objects (i.e. is also a no-op).
                                              properties:
                                                preference:
                                                  description: A node selector term,
                                                    associated with the corresponding
                                                    weight.
                                                  properties:
                                                    matchExpressions:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        labels.
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchFields:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        fields.
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                  type: object
                                                weight:
                                                  description: Weight associated with
                                                    matching the corresponding nodeSelectorTerm,
                                                    in the range 1-100.
                                                  format: int32
                                                  type: integer
                                              required:
                                              - preference
                                              - weight
                                              type: object
                                            type: array
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to an update),
                                              the system may or may not try to eventually
                                              evict the pod from its node.
                                            properties:
                                              nodeSelectorTerms:
                                                description: Required. A list of node
                                                  selector terms. The terms are ORed.
                                                items:
                                                  description: A null or empty node
                                                    selector term matches no objects.
                                                    The requirements of them are ANDed.
                                                    The TopologySelectorTerm type
                                                    implements a subset of the NodeSelectorTerm.
                                                  properties:
                                                    matchExpressions:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        labels.
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchFields:
                                                      description: A list of node
                                                        selector requirements by node's
                                                        fields.
                                                      items:
                                                        description: A node selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: The label
                                                              key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: Represents
                                                              a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists, DoesNotExist.
                                                              Gt, and Lt.
                                                            type: string
                                                          values:
                                                            description: An array
                                                              of string values. If
                                                              the operator is In or
                                                              NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. If the operator
                                                              is Gt or Lt, the values
                                                              array must have a single
                                                              element, which will
                                                              be interpreted as an
                                                              integer. This array
                                                              is replaced during a
                                                              strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                  type: object
                                                type: array
                                            required:
                                            - nodeSelectorTerms
                                            type: object
                                        type: object
                                      podAffinity:
                                        description: Describes pod affinity scheduling
                                          rules (e.g. co-locate this pod in the same
                                          node, zone, etc. as some other pod(s)).
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the affinity expressions specified by
                                              this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node has pods which matches the
                                              corresponding podAffinityTerm; the node(s)
                                              with the highest sum are the most preferred.
                                            items:
                                              description: The weights of all of the
                                                matched WeightedPodAffinityTerm fields
                                                are added per-node to find the most
                                                preferred node(s)
                                              properties:
                                                podAffinityTerm:
                                                  description: Required. A pod affinity
                                                    term, associated with the corresponding
                                                    weight.
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaceSelector:
                                                      description: A label query over
                                                        the set of namespaces that
                                                        the term applies to. The term
                                                        is applied to the union of
                                                        the namespaces selected by
                                                        this field and the ones listed
                                                        in the namespaces field. null
                                                        selector and null or empty
                                                        namespaces list means "this
                                                        pod's namespace". An empty
                                                        selector ({}) matches all
                                                        namespaces. This field is
                                                        beta-level and is only honored
                                                        when PodAffinityNamespaceSelector
                                                        feature is enabled.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        a static list of namespace
                                                        names that the term applies
                                                        to. The term is applied to
                                                        the union of the namespaces
                                                        listed in this field and the
                                                        ones selected by namespaceSelector.
                                                        null or empty namespaces list
                                                        and null namespaceSelector
                                                        means "this pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                weight:
                                                  description: weight associated with
                                                    matching the corresponding podAffinityTerm,
                                                    in the range 1-100.
                                                  format: int32
                                                  type: integer
                                              required:
                                              - podAffinityTerm
                                              - weight
                                              type: object
                                            type: array
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to a pod label
                                              update), the system may or may not try
                                              to eventually evict the pod from its
                                              node. When there are multiple elements,
                                              the lists of nodes corresponding to
                                              each podAffinityTerm are intersected,
                                              i.e. all terms must be satisfied.
                                            items:
                                              description: Defines a set of pods (namely
                                                those matching the labelSelector relative
                                                to the given namespace(s)) that this
                                                pod should be co-located (affinity)
                                                or not co-located (anti-affinity)
                                                with, where co-located is defined
                                                as running on a node whose value of
                                                the label with key <topologyKey> matches
                                                that of any node on which a pod of
                                                the set of pods is running
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                    This field is beta-level and is
                                                    only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            type: array
                                        type: object
                                      podAntiAffinity:
                                        description: Describes pod anti-affinity scheduling
                                          rules (e.g. avoid putting this pod in the
                                          same node, zone, etc. as some other pod(s)).
                                        properties:
                                          preferredDuringSchedulingIgnoredDuringExecution:
                                            description: The scheduler will prefer
                                              to schedule pods to nodes that satisfy
                                              the anti-affinity expressions specified
                                              by this field, but it may choose a node
                                              that violates one or more of the expressions.
                                              The node that is most preferred is the
                                              one with the greatest sum of weights,
                                              i.e. for each node that meets all of
                                              the scheduling requirements (resource
                                              request, requiredDuringScheduling anti-affinity
                                              expressions, etc.), compute a sum by
                                              iterating through the elements of this
                                              field and adding "weight" to the sum
                                              if the node has pods which matches the
                                              corresponding podAffinityTerm; the node(s)
                                              with the highest sum are the most preferred.
                                            items:
                                              description: The weights of all of the
                                                matched WeightedPodAffinityTerm fields
                                                are added per-node to find the most
                                                preferred node(s)
                                              properties:
                                                podAffinityTerm:
                                                  description: Required. A pod affinity
                                                    term, associated with the corresponding
                                                    weight.
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaceSelector:
                                                      description: A label query over
                                                        the set of namespaces that
                                                        the term applies to. The term
                                                        is applied to the union of
                                                        the namespaces selected by
                                                        this field and the ones listed
                                                        in the namespaces field. null
                                                        selector and null or empty
                                                        namespaces list means "this
                                                        pod's namespace". An empty
                                                        selector ({}) matches all
                                                        namespaces. This field is
                                                        beta-level and is only honored
                                                        when PodAffinityNamespaceSelector
                                                        feature is enabled.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        a static list of namespace
                                                        names that the term applies
                                                        to. The term is applied to
                                                        the union of the namespaces
                                                        listed in this field and the
                                                        ones selected by namespaceSelector.
                                                        null or empty namespaces list
                                                        and null namespaceSelector
                                                        means "this pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                weight:
                                                  description: weight associated with
                                                    matching the corresponding podAffinityTerm,
                                                    in the range 1-100.
                                                  format: int32
                                                  type: integer
                                              required:
                                              - podAffinityTerm
                                              - weight
                                              type: object
                                            type: array
                                          requiredDuringSchedulingIgnoredDuringExecution:
                                            description: If the anti-affinity requirements
                                              specified by this field are not met
                                              at scheduling time, the pod will not
                                              be scheduled onto the node. If the anti-affinity
                                              requirements specified by this field
                                              cease to be met at some point during
                                              pod execution (e.g. due to a pod label
                                              update), the system may or may not try
                                              to eventually evict the pod from its
                                              node. When there are multiple elements,
                                              the lists of nodes corresponding to
                                              each podAffinityTerm are intersected,
                                              i.e. all terms must be satisfied.
                                            items:
                                              description: Defines a set of pods (namely
                                                those matching the labelSelector relative
                                                to the given namespace(s)) that this
                                                pod should be co-located (affinity)
                                                or not co-located (anti-affinity)
                                                with, where co-located is defined
                                                as running on a node whose value of
                                                the label with key <topologyKey> matches
                                                that of any node on which a pod of
                                                the set of pods is running
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                    This field is beta-level and is
                                                    only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  allowStargateOnDataNodes:
                                    default: false
                                    description: 'AllowStargateOnDataNodes allows
                                      Stargate pods to be scheduled on a worker node
                                      already hosting data pods for this datacenter.
                                      The default is false, which means that Stargate
                                      pods will be scheduled on separate worker nodes.
                                      Note: if the datacenter pods have HostNetwork:true,
                                      then the Stargate pods will inherit of it, in
                                      which case it is possible that Stargate nodes
                                      won''t be allowed to sit on data nodes even
                                      if this property is set to true, because of
                                      port conflicts on the same IP address.'
                                    type: boolean
                                  authOptions:
                                    description: Authentication options.
                                    properties:
                                      apiAuthMethod:
                                        default: Table
                                        description: 'The method to use for authenticating
                                          requests to the Stargate APIs. Stargate
                                          currently has two authentication / authorization
                                          methods: - Table: table-based; - JWT: JSON
                                          web token (JWT)-based. The methods are mutually
                                          exclusive. The default method is Table.'
                                        enum:
                                        - Table
                                        - JWT
                                        type: string
                                      providerUrl:
                                        description: Required when using JWT authentication
                                          method, ignored otherwise.
                                        type: string
                                      tokenTtlSeconds:
                                        description: The time-to-live in seconds of
                                          an API authentication token. Valid only
                                          for the Table authentication method. By
                                          default, the token persists for 30 minutes
                                          with a sliding window. Each use of the token
                                          to authenticate resets the 30-minute window.
                                          A token created and used after 29 minutes
                                          will authenticate a request, but if 31 minutes
                                          passes before use, the token will no longer
                                          exist. Default is 1800 seconds (30 minutes).
                                        minimum: 1
                                        type: integer
                                    type: object
                                  cassandraConfigMapRef:
                                    description: CassandraConfigMapRef is a reference
                                      to a ConfigMap that holds Cassandra configuration.
                                      The map should have a key named cassandra_yaml.
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    type: object
                                  containerImage:
                                    default:
                                      repository: stargateio
                                      tag: v1.0.45
                                    description: ContainerImage is the image characteristics
                                      to use for Stargate containers. Leave nil to
                                      use a default image.
                                    properties:
                                      name:
                                        description: The image name to use.
                                        type: string
                                      pullPolicy:
                                        description: The image pull policy to use.
                                          Defaults to "Always" if the tag is "latest",
                                          otherwise to "IfNotPresent".
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        - Never
                                        type: string
                                      pullSecretRef:
                                        description: 'The secret to use when pulling
                                          the image from private repositories. If
                                          specified, this secret will be passed to
                                          individual puller implementations for them
                                          to use. For example, in the case of Docker,
                                          only DockerConfig type secrets are honored.
                                          More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                        type: object
                                      registry:
                                        default: docker.io
                                        description: The Docker registry to use. Defaults
                                          to "docker.io", the official Docker Hub.
                                        type: string
                                      repository:
                                        description: The Docker repository to use.
                                        type: string
                                      tag:
                                        default: latest
                                        description: The image tag to use. Defaults
                                          to "latest".
                                        type: string
                                    type: object
                                  heapSize:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 256Mi
                                    description: 'HeapSize sets the JVM heap size
                                      to use for Stargate. If no Resources are specified,
                                      this value will also be used to set a default
                                      memory request and limit for the Stargate pods:
                                      these will be set to HeapSize x2 and x4, respectively.'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  livenessProbe:
                                    description: LivenessProbe sets the Stargate liveness
                                      probe. Leave nil to use defaults.
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      failureThreshold:
                                        description: Minimum consecutive failures
                                          for the probe to be considered failed after
                                          having succeeded. Defaults to 3. Minimum
                                          value is 1.
                                        format: int32
                                        type: integer
                                      grpc:
                                        description: GRPC specifies an action involving
                                          a GRPC port. This is an alpha field and
                                          requires enabling GRPCContainerProbe feature
                                          gate.
                                        properties:
                                          port:
                                            description: Port number of the gRPC service.
                                              Number must be in the range 1 to 65535.
                                            format: int32
                                            type: integer
                                          service:
                                            description: "Service is the name of the
                                              service to place in the gRPC HealthCheckRequest
                                              (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                              \n If this is not specified, the default
                                              behavior is defined by gRPC."
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      initialDelaySeconds:
                                        description: 'Number of seconds after the
                                          container has started before liveness probes
                                          are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                        format: int32
                                        type: integer
                                      periodSeconds:
                                        description: How often (in seconds) to perform
                                          the probe. Default to 10 seconds. Minimum
                                          value is 1.
                                        format: int32
                                        type: integer
                                      successThreshold:
                                        description: Minimum consecutive successes
                                          for the probe to be considered successful
                                          after having failed. Defaults to 1. Must
                                          be 1 for liveness and startup. Minimum value
                                          is 1.
                                        format: int32
                                        type: integer
                                      tcpSocket:
                                        description: TCPSocket specifies an action
                                          involving a TCP port.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                      terminationGracePeriodSeconds:
                                        description: Optional duration in seconds
                                          the pod needs to terminate gracefully upon
                                          probe failure. The grace period is the duration
                                          in seconds after the processes running in
                                          the pod are sent a termination signal and
                                          the time when the processes are forcibly
                                          halted with a kill signal. Set this value
                                          longer than the expected cleanup time for
                                          your process. If this value is nil, the
                                          pod's terminationGracePeriodSeconds will
                                          be used. Otherwise, this value overrides
                                          the value provided by the pod spec. Value
                                          must be non-negative integer. The value
                                          zero indicates stop immediately via the
                                          kill signal (no opportunity to shut down).
                                          This is a beta field and requires enabling
                                          ProbeTerminationGracePeriod feature gate.
                                          Minimum value is 1. spec.terminationGracePeriodSeconds
                                          is used if unset.
                                        format: int64
                                        type: integer
                                      timeoutSeconds:
                                        description: 'Number of seconds after which
                                          the probe times out. Defaults to 1 second.
                                          Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                        format: int32
                                        type: integer
                                    type: object
                                  name:
                                    description: Name is the rack name. It must correspond
                                      to an existing rack name in the CassandraDatacenter
                                      resource where Stargate is being deployed, otherwise
                                      it will be ignored.
                                    minLength: 2
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: NodeSelector is an optional map of
                                      label keys and values to restrict the scheduling
                                      of Stargate nodes to workers with matching labels.
                                      Leave nil to let the controller reuse the same
                                      node selectors used for data pods in this datacenter,
                                      if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                                    type: object
                                  readinessProbe:
                                    description: ReadinessProbe sets the Stargate
                                      readiness probe. Leave nil to use defaults.
                                    properties:
                                      exec:
                                        description: Exec specifies the action to
                                          take.
                                        properties:
                                          command:
                                            description: Command is the command line
                                              to execute inside the container, the
                                              working directory for the command  is
                                              root ('/') in the container's filesystem.
                                              The command is simply exec'd, it is
                                              not run inside a shell, so traditional
                                              shell instructions ('|', etc) won't
                                              work. To use a shell, you need to explicitly
                                              call out to that shell. Exit status
                                              of 0 is treated as live/healthy and
                                              non-zero is unhealthy.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      failureThreshold:
                                        description: Minimum consecutive failures
                                          for the probe to be considered failed after
                                          having succeeded. Defaults to 3. Minimum
                                          value is 1.
                                        format: int32
                                        type: integer
                                      grpc:
                                        description: GRPC specifies an action involving
                                          a GRPC port. This is an alpha field and
                                          requires enabling GRPCContainerProbe feature
                                          gate.
                                        properties:
                                          port:
                                            description: Port number of the gRPC service.
                                              Number must be in the range 1 to 65535.
                                            format: int32
                                            type: integer
                                          service:
                                            description: "Service is the name of the
                                              service to place in the gRPC HealthCheckRequest
                                              (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                              \n If this is not specified, the default
                                              behavior is defined by gRPC."
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      httpGet:
                                        description: HTTPGet specifies the http request
                                          to perform.
                                        properties:
                                          host:
                                            description: Host name to connect to,
                                              defaults to the pod IP. You probably
                                              want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in
                                              the request. HTTP allows repeated headers.
                                            items:
                                              description: HTTPHeader describes a
                                                custom header to be used in HTTP probes
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          path:
                                            description: Path to access on the HTTP
                                              server.
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Name or number of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting
                                              to the host. Defaults to HTTP.
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      initialDelaySeconds:
                                        description: 'Number of seconds after the
                                          container has started before liveness probes
                                          are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                        format: int32
                                        type: integer
                                      periodSeconds:
                                        description: How often (in seconds) to perform
                                          the probe. Default to 10 seconds. Minimum
                                          value is 1.
                                        format: int32
                                        type: integer
                                      successThreshold:
                                        description: Minimum consecutive successes
                                          for the probe to be considered successful
                                          after having failed. Defaults to 1. Must
                                          be 1 for liveness and startup. Minimum value
                                          is 1.
                                        format: int32
                                        type: integer
                                      tcpSocket:
                                        description: TCPSocket specifies an action
                                          involving a TCP port.
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Number or name of the port
                                              to access on the container. Number must
                                              be in the range 1 to 65535. Name must
                                              be an IANA_SVC_NAME.
                                            x-kubernetes-int-or-string: true
                                        required:
                                        - port
                                        type: object
                                      terminationGracePeriodSeconds:
                                        description: Optional duration in seconds
                                          the pod needs to terminate gracefully upon
                                          probe failure. The grace period is the duration
                                          in seconds after the processes running in
                                          the pod are sent a termination signal and
                                          the time when the processes are forcibly
                                          halted with a kill signal. Set this value
                                          longer than the expected cleanup time for
                                          your process. If this value is nil, the
                                          pod's terminationGracePeriodSeconds will
                                          be used. Otherwise, this value overrides
                                          the value provided by the pod spec. Value
                                          must be non-negative integer. The value
                                          zero indicates stop immediately via the
                                          kill signal (no opportunity to shut down).
                                          This is a beta field and requires enabling
                                          ProbeTerminationGracePeriod feature gate.
                                          Minimum value is 1. spec.terminationGracePeriodSeconds
                                          is used if unset.
                                        format: int64
                                        type: integer
                                      timeoutSeconds:
                                        description: 'Number of seconds after which
                                          the probe times out. Defaults to 1 second.
                                          Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                        format: int32
                                        type: integer
                                    type: object
                                  resources:
                                    description: Resources is the Kubernetes resource
                                      requests and limits to apply, per Stargate pod.
                                      Leave nil to use defaults.
                                    properties:
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                  serviceAccount:
                                    default: default
                                    description: ServiceAccount is the service account
                                      name to use for Stargate pods.
                                    type: string
                                  telemetry:
                                    description: Telemetry defines the desired telemetry
                                      integrations to deploy targeting the Stargate
                                      pods for all DCs in this cluster (unless overriden
                                      by DC specific settings)
                                    properties:
                                      mcac:
                                        properties:
                                          metricFilters:
                                            description: 'MetricFilters allows passing
                                              filters to MCAC in order to reduce the
                                              amount of extracted metrics. Not setting
                                              this field will result in the default
                                              filters being used. Setting it to an
                                              empty list will result in all metrics
                                              being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                                              - "deny:org.apache.cassandra.metrics.table"
                                              - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                                              - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                                              - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      prometheus:
                                        properties:
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            description: CommonLabels are applied
                                              to all serviceMonitors created.
                                            type: object
                                          enabled:
                                            description: Enable the creation of Prometheus
                                              serviceMonitors for this resource (Cassandra
                                              or Stargate).
                                            type: boolean
                                        type: object
                                    type: object
                                  tolerations:
                                    description: Tolerations are tolerations to apply
                                      to the Stargate pods. Leave nil to let the controller
                                      reuse the same tolerations used for data pods
                                      in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                                    items:
                                      description: The pod this Toleration is attached
                                        to tolerates any taint that matches the triple
                                        <key,value,effect> using the matching operator
                                        <operator>.
                                      properties:
                                        effect:
                                          description: Effect indicates the taint
                                            effect to match. Empty means match all
                                            taint effects. When specified, allowed
                                            values are NoSchedule, PreferNoSchedule
                                            and NoExecute.
                                          type: string
                                        key:
                                          description: Key is the taint key that the
                                            toleration applies to. Empty means match
                                            all taint keys. If the key is empty, operator
                                            must be Exists; this combination means
                                            to match all values and all keys.
                                          type: string
                                        operator:
                                          description: Operator represents a key's
                                            relationship to the value. Valid operators
                                            are Exists and Equal. Defaults to Equal.
                                            Exists is equivalent to wildcard for value,
                                            so that a pod can tolerate all taints
                                            of a particular category.
                                          type: string
                                        tolerationSeconds:
                                          description: TolerationSeconds represents
                                            the period of time the toleration (which
                                            must be of effect NoExecute, otherwise
                                            this field is ignored) tolerates the taint.
                                            By default, it is not set, which means
                                            tolerate the taint forever (do not evict).
                                            Zero and negative values will be treated
                                            as 0 (evict immediately) by the system.
                                          format: int64
                                          type: integer
                                        value:
                                          description: Value is the taint value the
                                            toleration matches to. If the operator
                                            is Exists, the value should be empty,
                                            otherwise just a regular string.
                                          type: string
                                      type: object
                                    type: array
                                required:
                                - name
                                type: object
                              type: array
                            readinessProbe:
                              description: ReadinessProbe sets the Stargate readiness
                                probe. Leave nil to use defaults.
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                failureThreshold:
                                  description: Minimum consecutive failures for the
                                    probe to be considered failed after having succeeded.
                                    Defaults to 3. Minimum value is 1.
                                  format: int32
                                  type: integer
                                grpc:
                                  description: GRPC specifies an action involving
                                    a GRPC port. This is an alpha field and requires
                                    enabling GRPCContainerProbe feature gate.
                                  properties:
                                    port:
                                      description: Port number of the gRPC service.
                                        Number must be in the range 1 to 65535.
                                      format: int32
                                      type: integer
                                    service:
                                      description: "Service is the name of the service
                                        to place in the gRPC HealthCheckRequest (see
                                        https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                        \n If this is not specified, the default behavior
                                        is defined by gRPC."
                                      type: string
                                  required:
                                  - port
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                initialDelaySeconds:
                                  description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                                periodSeconds:
                                  description: How often (in seconds) to perform the
                                    probe. Default to 10 seconds. Minimum value is
                                    1.
                                  format: int32
                                  type: integer
                                successThreshold:
                                  description: Minimum consecutive successes for the
                                    probe to be considered successful after having
                                    failed. Defaults to 1. Must be 1 for liveness
                                    and startup. Minimum value is 1.
                                  format: int32
                                  type: integer
                                tcpSocket:
                                  description: TCPSocket specifies an action involving
                                    a TCP port.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                                terminationGracePeriodSeconds:
                                  description: Optional duration in seconds the pod
                                    needs to terminate gracefully upon probe failure.
                                    The grace period is the duration in seconds after
                                    the processes running in the pod are sent a termination
                                    signal and the time when the processes are forcibly
                                    halted with a kill signal. Set this value longer
                                    than the expected cleanup time for your process.
                                    If this value is nil, the pod's terminationGracePeriodSeconds
                                    will be used. Otherwise, this value overrides
                                    the value provided by the pod spec. Value must
                                    be non-negative integer. The value zero indicates
                                    stop immediately via the kill signal (no opportunity
                                    to shut down). This is a beta field and requires
                                    enabling ProbeTerminationGracePeriod feature gate.
                                    Minimum value is 1. spec.terminationGracePeriodSeconds
                                    is used if unset.
                                  format: int64
                                  type: integer
                                timeoutSeconds:
                                  description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                              type: object
                            resources:
                              description: Resources is the Kubernetes resource requests
                                and limits to apply, per Stargate pod. Leave nil to
                                use defaults.
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            serviceAccount:
                              default: default
                              description: ServiceAccount is the service account name
                                to use for Stargate pods.
                              type: string
                            size:
                              default: 1
                              description: Size is the number of Stargate instances
                                to deploy in each datacenter. They will be spread
                                evenly across racks.
                              format: int32
                              minimum: 1
                              type: integer
                            telemetry:
                              description: Telemetry defines the desired telemetry
                                integrations to deploy targeting the Stargate pods
                                for all DCs in this cluster (unless overriden by DC
                                specific settings)
                              properties:
                                mcac:
                                  properties:
                                    metricFilters:
                                      description: 'MetricFilters allows passing filters
                                        to MCAC in order to reduce the amount of extracted
                                        metrics. Not setting this field will result
                                        in the default filters being used. Setting
                                        it to an empty list will result in all metrics
                                        being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                                        - "deny:org.apache.cassandra.metrics.table"
                                        - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                                        - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                                        - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                prometheus:
                                  properties:
                                    commonLabels:
                                      additionalProperties:
                                        type: string
                                      description: CommonLabels are applied to all
                                        serviceMonitors created.
                                      type: object
                                    enabled:
                                      description: Enable the creation of Prometheus
                                        serviceMonitors for this resource (Cassandra
                                        or Stargate).
                                      type: boolean
                                  type: object
                              type: object
                            tolerations:
                              description: Tolerations are tolerations to apply to
                                the Stargate pods. Leave nil to let the controller
                                reuse the same tolerations used for data pods in this
                                datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                              items:
                                description: The pod this Toleration is attached to
                                  tolerates any taint that matches the triple <key,value,effect>
                                  using the matching operator <operator>.
                                properties:
                                  effect:
                                    description: Effect indicates the taint effect
                                      to match. Empty means match all taint effects.
                                      When specified, allowed values are NoSchedule,
                                      PreferNoSchedule and NoExecute.
                                    type: string
                                  key:
                                    description: Key is the taint key that the toleration
                                      applies to. Empty means match all taint keys.
                                      If the key is empty, operator must be Exists;
                                      this combination means to match all values and
                                      all keys.
                                    type: string
                                  operator:
                                    description: Operator represents a key's relationship
                                      to the value. Valid operators are Exists and
                                      Equal. Defaults to Equal. Exists is equivalent
                                      to wildcard for value, so that a pod can tolerate
                                      all taints of a particular category.
                                    type: string
                                  tolerationSeconds:
                                    description: TolerationSeconds represents the
                                      period of time the toleration (which must be
                                      of effect NoExecute, otherwise this field is
                                      ignored) tolerates the taint. By default, it
                                      is not set, which means tolerate the taint forever
                                      (do not evict). Zero and negative values will
                                      be treated as 0 (evict immediately) by the system.
                                    format: int64
                                    type: integer
                                  value:
                                    description: Value is the taint value the toleration
                                      matches to. If the operator is Exists, the value
                                      should be empty, otherwise just a regular string.
                                    type: string
                                type: object
                              type: array
                          required:
                          - size
                          type: object
                        stopped:
                          default: false
                          description: Stopped means that the datacenter will be stopped.
                            Use this for maintenance or for cost saving. A stopped
                            CassandraDatacenter will have no running server pods,
                            like using "stop" with  traditional System V init scripts.
                            Other Kubernetes resources will be left intact, and volumes
                            will re-attach when the CassandraDatacenter workload is
                            resumed.
                          type: boolean
                        storageConfig:
                          description: StorageConfig is the persistent storage requirements
                            for each Cassandra pod. This includes everything under
                            /var/lib/cassandra, namely the commit log and data directories.
                          properties:
                            additionalVolumes:
                              items:
                                description: AdditionalVolumes StorageConfig defines
                                  additional storage configurations
                                properties:
                                  mountPath:
                                    description: Mount path into cassandra container
                                    type: string
                                  name:
                                    description: Name of the pvc
                                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                    type: string
                                  pvcSpec:
                                    description: Persistent volume claim spec
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef allows any
                                          non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef preserves
                                          all values, and generates an error if a
                                          disallowed value is specified. (Alpha) Using
                                          this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to
                                          consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                - mountPath
                                - name
                                - pvcSpec
                                type: object
                              type: array
                            cassandraDataVolumeClaimSpec:
                              description: PersistentVolumeClaimSpec describes the
                                common attributes of storage devices and allows a
                                Source for provider-specific attributes
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. If the AnyVolumeDataSource feature
                                    gate is enabled, this field will always have the
                                    same contents as the DataSourceRef field.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                dataSourceRef:
                                  description: 'Specifies the object from which to
                                    populate the volume with data, if a non-empty
                                    volume is desired. This may be any local object
                                    from a non-empty API group (non core object) or
                                    a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    DataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, both fields (DataSource
                                    and DataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. There are two important differences
                                    between DataSource and DataSourceRef: * While
                                    DataSource only allows two specific types of objects,
                                    DataSourceRef allows any non-core object, as well
                                    as PersistentVolumeClaim objects. * While DataSource
                                    ignores disallowed values (dropping them), DataSourceRef
                                    preserves all values, and generates an error if
                                    a disallowed value is specified. (Alpha) Using
                                    this field requires the AnyVolumeDataSource feature
                                    gate to be enabled.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: 'Resources represents the minimum resources
                                    the volume should have. If RecoverVolumeExpansionFailure
                                    feature is enabled users are allowed to specify
                                    resource requirements that are lower than previous
                                    value but must still be higher than capacity recorded
                                    in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                selector:
                                  description: A label query over volumes to consider
                                    for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                storageClassName:
                                  description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  type: string
                                volumeMode:
                                  description: volumeMode defines what type of volume
                                    is required by the claim. Value of Filesystem
                                    is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: VolumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          type: object
                        telemetry:
                          description: Telemetry defines the desired state for telemetry
                            resources in this datacenter. If telemetry configurations
                            are defined, telemetry resources will be deployed to integrate
                            with a user-provided monitoring solution (at present,
                            only support for Prometheus is available).
                          properties:
                            mcac:
                              properties:
                                metricFilters:
                                  description: 'MetricFilters allows passing filters
                                    to MCAC in order to reduce the amount of extracted
                                    metrics. Not setting this field will result in
                                    the default filters being used. Setting it to
                                    an empty list will result in all metrics being
                                    extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                                    - "deny:org.apache.cassandra.metrics.table" -
                                    "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                                    - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                                    - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            prometheus:
                              properties:
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels are applied to all serviceMonitors
                                    created.
                                  type: object
                                enabled:
                                  description: Enable the creation of Prometheus serviceMonitors
                                    for this resource (Cassandra or Stargate).
                                  type: boolean
                              type: object
                          type: object
                        tolerations:
                          description: Tolerations applied to every Cassandra pod.
                          items:
                            description: The pod this Toleration is attached to tolerates
                              any taint that matches the triple <key,value,effect>
                              using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to
                                  match. Empty means match all taint effects. When
                                  specified, allowed values are NoSchedule, PreferNoSchedule
                                  and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration
                                  applies to. Empty means match all taint keys. If
                                  the key is empty, operator must be Exists; this
                                  combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship
                                  to the value. Valid operators are Exists and Equal.
                                  Defaults to Equal. Exists is equivalent to wildcard
                                  for value, so that a pod can tolerate all taints
                                  of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period
                                  of time the toleration (which must be of effect
                                  NoExecute, otherwise this field is ignored) tolerates
                                  the taint. By default, it is not set, which means
                                  tolerate the taint forever (do not evict). Zero
                                  and negative values will be treated as 0 (evict
                                  immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration
                                  matches to. If the operator is Exists, the value
                                  should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      required:
                      - size
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  extraVolumes:
                    description: Volumes defines additional volumes to be added to
                      each Cassandra pod. If the volume uses a PersistentVolumeClaim,
                      the PVC will be managed by the statefulset.
                    properties:
                      pvcs:
                        description: PVCs defines additional volumes to be added to
                          each Cassandra pod and managed by the statefulset. Such
                          volumes are automatically mounted by cass-operator into
                          the cassandra containers.
                        items:
                          description: AdditionalVolumes StorageConfig defines additional
                            storage configurations
                          properties:
                            mountPath:
                              description: Mount path into cassandra container
                              type: string
                            name:
                              description: Name of the pvc
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              type: string
                            pvcSpec:
                              description: Persistent volume claim spec
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. If the AnyVolumeDataSource feature
                                    gate is enabled, this field will always have the
                                    same contents as the DataSourceRef field.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                dataSourceRef:
                                  description: 'Specifies the object from which to
                                    populate the volume with data, if a non-empty
                                    volume is desired. This may be any local object
                                    from a non-empty API group (non core object) or
                                    a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    DataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, both fields (DataSource
                                    and DataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. There are two important differences
                                    between DataSource and DataSourceRef: * While
                                    DataSource only allows two specific types of objects,
                                    DataSourceRef allows any non-core object, as well
                                    as PersistentVolumeClaim objects. * While DataSource
                                    ignores disallowed values (dropping them), DataSourceRef
                                    preserves all values, and generates an error if
                                    a disallowed value is specified. (Alpha) Using
                                    this field requires the AnyVolumeDataSource feature
                                    gate to be enabled.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: 'Resources represents the minimum resources
                                    the volume should have. If RecoverVolumeExpansionFailure
                                    feature is enabled users are allowed to specify
                                    resource requirements that are lower than previous
                                    value but must still be higher than capacity recorded
                                    in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                selector:
                                  description: A label query over volumes to consider
                                    for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                storageClassName:
                                  description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  type: string
                                volumeMode:
                                  description: volumeMode defines what type of volume
                                    is required by the claim. Value of Filesystem
                                    is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: VolumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          required:
                          - mountPath
                          - name
                          - pvcSpec
                          type: object
                        type: array
                      volumes:
                        description: Volumes defines volumes to be added to each Cassandra
                          pod.
                        items:
                          description: Volume represents a named volume in a pod that
                            may be accessed by any container in the pod.
                          properties:
                            awsElasticBlockStore:
                              description: 'AWSElasticBlockStore represents an AWS
                                Disk resource that is attached to a kubelet''s host
                                machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              properties:
                                fsType:
                                  description: 'Filesystem type of the volume that
                                    you want to mount. Tip: Ensure that the filesystem
                                    type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                    to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                  type: string
                                partition:
                                  description: 'The partition in the volume that you
                                    want to mount. If omitted, the default is to mount
                                    by volume name. Examples: For volume /dev/sda1,
                                    you specify the partition as "1". Similarly, the
                                    volume partition for /dev/sda is "0" (or you can
                                    leave the property empty).'
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: 'Specify "true" to force and set the
                                    ReadOnly property in VolumeMounts to "true". If
                                    omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  type: boolean
                                volumeID:
                                  description: 'Unique ID of the persistent disk resource
                                    in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  type: string
                              required:
                              - volumeID
                              type: object
                            azureDisk:
                              description: AzureDisk represents an Azure Data Disk
                                mount on the host and bind mount to the pod.
                              properties:
                                cachingMode:
                                  description: 'Host Caching mode: None, Read Only,
                                    Read Write.'
                                  type: string
                                diskName:
                                  description: The Name of the data disk in the blob
                                    storage
                                  type: string
                                diskURI:
                                  description: The URI the data disk in the blob storage
                                  type: string
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified.
                                  type: string
                                kind:
                                  description: 'Expected values Shared: multiple blob
                                    disks per storage account  Dedicated: single blob
                                    disk per storage account  Managed: azure managed
                                    data disk (only in managed availability set).
                                    defaults to shared'
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write). ReadOnly
                                    here will force the ReadOnly setting in VolumeMounts.
                                  type: boolean
                              required:
                              - diskName
                              - diskURI
                              type: object
                            azureFile:
                              description: AzureFile represents an Azure File Service
                                mount on the host and bind mount to the pod.
                              properties:
                                readOnly:
                                  description: Defaults to false (read/write). ReadOnly
                                    here will force the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretName:
                                  description: the name of secret that contains Azure
                                    Storage Account Name and Key
                                  type: string
                                shareName:
                                  description: Share Name
                                  type: string
                              required:
                              - secretName
                              - shareName
                              type: object
                            cephfs:
                              description: CephFS represents a Ceph FS mount on the
                                host that shares a pod's lifetime
                              properties:
                                monitors:
                                  description: 'Required: Monitors is a collection
                                    of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                  items:
                                    type: string
                                  type: array
                                path:
                                  description: 'Optional: Used as the mounted root,
                                    rather than the full Ceph tree, default is /'
                                  type: string
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).
                                    ReadOnly here will force the ReadOnly setting
                                    in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                  type: boolean
                                secretFile:
                                  description: 'Optional: SecretFile is the path to
                                    key ring for User, default is /etc/ceph/user.secret
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                  type: string
                                secretRef:
                                  description: 'Optional: SecretRef is reference to
                                    the authentication secret for User, default is
                                    empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                user:
                                  description: 'Optional: User is the rados user name,
                                    default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                  type: string
                              required:
                              - monitors
                              type: object
                            cinder:
                              description: 'Cinder represents a cinder volume attached
                                and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              properties:
                                fsType:
                                  description: 'Filesystem type to mount. Must be
                                    a filesystem type supported by the host operating
                                    system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. More info:
                                    https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  type: string
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).
                                    ReadOnly here will force the ReadOnly setting
                                    in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  type: boolean
                                secretRef:
                                  description: 'Optional: points to a secret object
                                    containing parameters used to connect to OpenStack.'
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                volumeID:
                                  description: 'volume id used to identify the volume
                                    in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  type: string
                              required:
                              - volumeID
                              type: object
                            configMap:
                              description: ConfigMap represents a configMap that should
                                populate this volume
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits used to set permissions
                                    on created files by default. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. Defaults to 0644. Directories within
                                    the path are not affected by this setting. This
                                    might be in conflict with other options that affect
                                    the file mode, like fsGroup, and the result can
                                    be other mode bits set.'
                                  format: int32
                                  type: integer
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced ConfigMap
                                    will be projected into the volume as a file whose
                                    name is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the ConfigMap, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits used to
                                          set permissions on this file. Must be an
                                          octal value between 0000 and 0777 or a decimal
                                          value between 0 and 511. YAML accepts both
                                          octal and decimal values, JSON requires
                                          decimal values for mode bits. If not specified,
                                          the volume defaultMode will be used. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    keys must be defined
                                  type: boolean
                              type: object
                            csi:
                              description: CSI (Container Storage Interface) represents
                                ephemeral storage that is handled by certain external
                                CSI drivers (Beta feature).
                              properties:
                                driver:
                                  description: Driver is the name of the CSI driver
                                    that handles this volume. Consult with your admin
                                    for the correct name as registered in the cluster.
                                  type: string
                                fsType:
                                  description: Filesystem type to mount. Ex. "ext4",
                                    "xfs", "ntfs". If not provided, the empty value
                                    is passed to the associated CSI driver which will
                                    determine the default filesystem to apply.
                                  type: string
                                nodePublishSecretRef:
                                  description: NodePublishSecretRef is a reference
                                    to the secret object containing sensitive information
                                    to pass to the CSI driver to complete the CSI
                                    NodePublishVolume and NodeUnpublishVolume calls.
                                    This field is optional, and  may be empty if no
                                    secret is required. If the secret object contains
                                    more than one secret, all secret references are
                                    passed.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                readOnly:
                                  description: Specifies a read-only configuration
                                    for the volume. Defaults to false (read/write).
                                  type: boolean
                                volumeAttributes:
                                  additionalProperties:
                                    type: string
                                  description: VolumeAttributes stores driver-specific
                                    properties that are passed to the CSI driver.
                                    Consult your driver's documentation for supported
                                    values.
                                  type: object
                              required:
                              - driver
                              type: object
                            downwardAPI:
                              description: DownwardAPI represents downward API about
                                the pod that should populate this volume
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits to use on created
                                    files by default. Must be a Optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                items:
                                  description: Items is a list of downward API volume
                                    file
                                  items:
                                    description: DownwardAPIVolumeFile represents
                                      information to create the file containing the
                                      pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name
                                          and namespace are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      mode:
                                        description: 'Optional: mode bits used to
                                          set permissions on this file, must be an
                                          octal value between 0000 and 0777 or a decimal
                                          value between 0 and 511. YAML accepts both
                                          octal and decimal values, JSON requires
                                          decimal values for mode bits. If not specified,
                                          the volume defaultMode will be used. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative
                                          path name of the file to be created. Must
                                          not be absolute or contain the ''..'' path.
                                          Must be utf-8 encoded. The first item of
                                          the relative path must not start with ''..'''
                                        type: string
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, requests.cpu and requests.memory)
                                          are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                    required:
                                    - path
                                    type: object
                                  type: array
                              type: object
                            emptyDir:
                              description: 'EmptyDir represents a temporary directory
                                that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              properties:
                                medium:
                                  description: 'What type of storage medium should
                                    back this directory. The default is "" which means
                                    to use the node''s default medium. Must be an
                                    empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  type: string
                                sizeLimit:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: 'Total amount of local storage required
                                    for this EmptyDir volume. The size limit is also
                                    applicable for memory medium. The maximum usage
                                    on memory medium EmptyDir would be the minimum
                                    value between the SizeLimit specified here and
                                    the sum of memory limits of all containers in
                                    a pod. The default is nil which means that the
                                    limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            ephemeral:
                              description: "Ephemeral represents a volume that is
                                handled by a cluster storage driver. The volume's
                                lifecycle is tied to the pod that defines it - it
                                will be created before the pod starts, and deleted
                                when the pod is removed. \n Use this if: a) the volume
                                is only needed while the pod runs, b) features of
                                normal volumes like restoring from snapshot or capacity
                                tracking are needed, c) the storage driver is specified
                                through a storage class, and d) the storage driver
                                supports dynamic volume provisioning through a PersistentVolumeClaim
                                (see EphemeralVolumeSource for more information on
                                the connection between this volume type and PersistentVolumeClaim).
                                \n Use PersistentVolumeClaim or one of the vendor-specific
                                APIs for volumes that persist for longer than the
                                lifecycle of an individual pod. \n Use CSI for light-weight
                                local ephemeral volumes if the CSI driver is meant
                                to be used that way - see the documentation of the
                                driver for more information. \n A pod can use both
                                types of ephemeral volumes and persistent volumes
                                at the same time."
                              properties:
                                volumeClaimTemplate:
                                  description: "Will be used to create a stand-alone
                                    PVC to provision the volume. The pod in which
                                    this EphemeralVolumeSource is embedded will be
                                    the owner of the PVC, i.e. the PVC will be deleted
                                    together with the pod.  The name of the PVC will
                                    be `<pod name>-<volume name>` where `<volume name>`
                                    is the name from the `PodSpec.Volumes` array entry.
                                    Pod validation will reject the pod if the concatenated
                                    name is not valid for a PVC (for example, too
                                    long). \n An existing PVC with that name that
                                    is not owned by the pod will *not* be used for
                                    the pod to avoid using an unrelated volume by
                                    mistake. Starting the pod is then blocked until
                                    the unrelated PVC is removed. If such a pre-created
                                    PVC is meant to be used by the pod, the PVC has
                                    to updated with an owner reference to the pod
                                    once the pod exists. Normally this should not
                                    be necessary, but it may be useful when manually
                                    reconstructing a broken cluster. \n This field
                                    is read-only and no changes will be made by Kubernetes
                                    to the PVC after it has been created. \n Required,
                                    must not be nil."
                                  properties:
                                    metadata:
                                      description: May contain labels and annotations
                                        that will be copied into the PVC when creating
                                        it. No other fields are allowed and will be
                                        rejected during validation.
                                      type: object
                                    spec:
                                      description: The specification for the PersistentVolumeClaim.
                                        The entire content is copied unchanged into
                                        the PVC that gets created from this template.
                                        The same fields as in a PersistentVolumeClaim
                                        are also valid here.
                                      properties:
                                        accessModes:
                                          description: 'AccessModes contains the desired
                                            access modes the volume should have. More
                                            info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                          items:
                                            type: string
                                          type: array
                                        dataSource:
                                          description: 'This field can be used to
                                            specify either: * An existing VolumeSnapshot
                                            object (snapshot.storage.k8s.io/VolumeSnapshot)
                                            * An existing PVC (PersistentVolumeClaim)
                                            If the provisioner or an external controller
                                            can support the specified data source,
                                            it will create a new volume based on the
                                            contents of the specified data source.
                                            If the AnyVolumeDataSource feature gate
                                            is enabled, this field will always have
                                            the same contents as the DataSourceRef
                                            field.'
                                          properties:
                                            apiGroup:
                                              description: APIGroup is the group for
                                                the resource being referenced. If
                                                APIGroup is not specified, the specified
                                                Kind must be in the core API group.
                                                For any other third-party types, APIGroup
                                                is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                          - kind
                                          - name
                                          type: object
                                        dataSourceRef:
                                          description: 'Specifies the object from
                                            which to populate the volume with data,
                                            if a non-empty volume is desired. This
                                            may be any local object from a non-empty
                                            API group (non core object) or a PersistentVolumeClaim
                                            object. When this field is specified,
                                            volume binding will only succeed if the
                                            type of the specified object matches some
                                            installed volume populator or dynamic
                                            provisioner. This field will replace the
                                            functionality of the DataSource field
                                            and as such if both fields are non-empty,
                                            they must have the same value. For backwards
                                            compatibility, both fields (DataSource
                                            and DataSourceRef) will be set to the
                                            same value automatically if one of them
                                            is empty and the other is non-empty. There
                                            are two important differences between
                                            DataSource and DataSourceRef: * While
                                            DataSource only allows two specific types
                                            of objects, DataSourceRef allows any non-core
                                            object, as well as PersistentVolumeClaim
                                            objects. * While DataSource ignores disallowed
                                            values (dropping them), DataSourceRef
                                            preserves all values, and generates an
                                            error if a disallowed value is specified.
                                            (Alpha) Using this field requires the
                                            AnyVolumeDataSource feature gate to be
                                            enabled.'
                                          properties:
                                            apiGroup:
                                              description: APIGroup is the group for
                                                the resource being referenced. If
                                                APIGroup is not specified, the specified
                                                Kind must be in the core API group.
                                                For any other third-party types, APIGroup
                                                is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                          - kind
                                          - name
                                          type: object
                                        resources:
                                          description: 'Resources represents the minimum
                                            resources the volume should have. If RecoverVolumeExpansionFailure
                                            feature is enabled users are allowed to
                                            specify resource requirements that are
                                            lower than previous value but must still
                                            be higher than capacity recorded in the
                                            status field of the claim. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                          properties:
                                            limits:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: 'Limits describes the maximum
                                                amount of compute resources allowed.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                              type: object
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: 'Requests describes the
                                                minimum amount of compute resources
                                                required. If Requests is omitted for
                                                a container, it defaults to Limits
                                                if that is explicitly specified, otherwise
                                                to an implementation-defined value.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                              type: object
                                          type: object
                                        selector:
                                          description: A label query over volumes
                                            to consider for binding.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        storageClassName:
                                          description: 'Name of the StorageClass required
                                            by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                          type: string
                                        volumeMode:
                                          description: volumeMode defines what type
                                            of volume is required by the claim. Value
                                            of Filesystem is implied when not included
                                            in claim spec.
                                          type: string
                                        volumeName:
                                          description: VolumeName is the binding reference
                                            to the PersistentVolume backing this claim.
                                          type: string
                                      type: object
                                  required:
                                  - spec
                                  type: object
                              type: object
                            fc:
                              description: FC represents a Fibre Channel resource
                                that is attached to a kubelet's host machine and then
                                exposed to the pod.
                              properties:
                                fsType:
                                  description: 'Filesystem type to mount. Must be
                                    a filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified. TODO: how
                                    do we prevent errors in the filesystem from compromising
                                    the machine'
                                  type: string
                                lun:
                                  description: 'Optional: FC target lun number'
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).
                                    ReadOnly here will force the ReadOnly setting
                                    in VolumeMounts.'
                                  type: boolean
                                targetWWNs:
                                  description: 'Optional: FC target worldwide names
                                    (WWNs)'
                                  items:
                                    type: string
                                  type: array
                                wwids:
                                  description: 'Optional: FC volume world wide identifiers
                                    (wwids) Either wwids or combination of targetWWNs
                                    and lun must be set, but not both simultaneously.'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            flexVolume:
                              description: FlexVolume represents a generic volume
                                resource that is provisioned/attached using an exec
                                based plugin.
                              properties:
                                driver:
                                  description: Driver is the name of the driver to
                                    use for this volume.
                                  type: string
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". The default
                                    filesystem depends on FlexVolume script.
                                  type: string
                                options:
                                  additionalProperties:
                                    type: string
                                  description: 'Optional: Extra command options if
                                    any.'
                                  type: object
                                readOnly:
                                  description: 'Optional: Defaults to false (read/write).
                                    ReadOnly here will force the ReadOnly setting
                                    in VolumeMounts.'
                                  type: boolean
                                secretRef:
                                  description: 'Optional: SecretRef is reference to
                                    the secret object containing sensitive information
                                    to pass to the plugin scripts. This may be empty
                                    if no secret object is specified. If the secret
                                    object contains more than one secret, all secrets
                                    are passed to the plugin scripts.'
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                              required:
                              - driver
                              type: object
                            flocker:
                              description: Flocker represents a Flocker volume attached
                                to a kubelet's host machine. This depends on the Flocker
                                control service being running
                              properties:
                                datasetName:
                                  description: Name of the dataset stored as metadata
                                    -> name on the dataset for Flocker should be considered
                                    as deprecated
                                  type: string
                                datasetUUID:
                                  description: UUID of the dataset. This is unique
                                    identifier of a Flocker dataset
                                  type: string
                              type: object
                            gcePersistentDisk:
                              description: 'GCEPersistentDisk represents a GCE Disk
                                resource that is attached to a kubelet''s host machine
                                and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              properties:
                                fsType:
                                  description: 'Filesystem type of the volume that
                                    you want to mount. Tip: Ensure that the filesystem
                                    type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                    to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                  type: string
                                partition:
                                  description: 'The partition in the volume that you
                                    want to mount. If omitted, the default is to mount
                                    by volume name. Examples: For volume /dev/sda1,
                                    you specify the partition as "1". Similarly, the
                                    volume partition for /dev/sda is "0" (or you can
                                    leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  format: int32
                                  type: integer
                                pdName:
                                  description: 'Unique name of the PD resource in
                                    GCE. Used to identify the disk in GCE. More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  type: string
                                readOnly:
                                  description: 'ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts. Defaults to false. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  type: boolean
                              required:
                              - pdName
                              type: object
                            gitRepo:
                              description: 'GitRepo represents a git repository at
                                a particular revision. DEPRECATED: GitRepo is deprecated.
                                To provision a container with a git repo, mount an
                                EmptyDir into an InitContainer that clones the repo
                                using git, then mount the EmptyDir into the Pod''s
                                container.'
                              properties:
                                directory:
                                  description: Target directory name. Must not contain
                                    or start with '..'.  If '.' is supplied, the volume
                                    directory will be the git repository.  Otherwise,
                                    if specified, the volume will contain the git
                                    repository in the subdirectory with the given
                                    name.
                                  type: string
                                repository:
                                  description: Repository URL
                                  type: string
                                revision:
                                  description: Commit hash for the specified revision.
                                  type: string
                              required:
                              - repository
                              type: object
                            glusterfs:
                              description: 'Glusterfs represents a Glusterfs mount
                                on the host that shares a pod''s lifetime. More info:
                                https://examples.k8s.io/volumes/glusterfs/README.md'
                              properties:
                                endpoints:
                                  description: 'EndpointsName is the endpoint name
                                    that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                  type: string
                                path:
                                  description: 'Path is the Glusterfs volume path.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                  type: string
                                readOnly:
                                  description: 'ReadOnly here will force the Glusterfs
                                    volume to be mounted with read-only permissions.
                                    Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                  type: boolean
                              required:
                              - endpoints
                              - path
                              type: object
                            hostPath:
                              description: 'HostPath represents a pre-existing file
                                or directory on the host machine that is directly
                                exposed to the container. This is generally used for
                                system agents or other privileged things that are
                                allowed to see the host machine. Most containers will
                                NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                --- TODO(jonesdl) We need to restrict who can use
                                host directory mounts and who can/can not mount host
                                directories as read/write.'
                              properties:
                                path:
                                  description: 'Path of the directory on the host.
                                    If the path is a symlink, it will follow the link
                                    to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                  type: string
                                type:
                                  description: 'Type for HostPath Volume Defaults
                                    to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                  type: string
                              required:
                              - path
                              type: object
                            iscsi:
                              description: 'ISCSI represents an ISCSI Disk resource
                                that is attached to a kubelet''s host machine and
                                then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                              properties:
                                chapAuthDiscovery:
                                  description: whether support iSCSI Discovery CHAP
                                    authentication
                                  type: boolean
                                chapAuthSession:
                                  description: whether support iSCSI Session CHAP
                                    authentication
                                  type: boolean
                                fsType:
                                  description: 'Filesystem type of the volume that
                                    you want to mount. Tip: Ensure that the filesystem
                                    type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                    to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                  type: string
                                initiatorName:
                                  description: Custom iSCSI Initiator Name. If initiatorName
                                    is specified with iscsiInterface simultaneously,
                                    new iSCSI interface <target portal>:<volume name>
                                    will be created for the connection.
                                  type: string
                                iqn:
                                  description: Target iSCSI Qualified Name.
                                  type: string
                                iscsiInterface:
                                  description: iSCSI Interface Name that uses an iSCSI
                                    transport. Defaults to 'default' (tcp).
                                  type: string
                                lun:
                                  description: iSCSI Target Lun number.
                                  format: int32
                                  type: integer
                                portals:
                                  description: iSCSI Target Portal List. The portal
                                    is either an IP or ip_addr:port if the port is
                                    other than default (typically TCP ports 860 and
                                    3260).
                                  items:
                                    type: string
                                  type: array
                                readOnly:
                                  description: ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts. Defaults to false.
                                  type: boolean
                                secretRef:
                                  description: CHAP Secret for iSCSI target and initiator
                                    authentication
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                targetPortal:
                                  description: iSCSI Target Portal. The Portal is
                                    either an IP or ip_addr:port if the port is other
                                    than default (typically TCP ports 860 and 3260).
                                  type: string
                              required:
                              - iqn
                              - lun
                              - targetPortal
                              type: object
                            name:
                              description: 'Volume''s name. Must be a DNS_LABEL and
                                unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            nfs:
                              description: 'NFS represents an NFS mount on the host
                                that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              properties:
                                path:
                                  description: 'Path that is exported by the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  type: string
                                readOnly:
                                  description: 'ReadOnly here will force the NFS export
                                    to be mounted with read-only permissions. Defaults
                                    to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  type: boolean
                                server:
                                  description: 'Server is the hostname or IP address
                                    of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  type: string
                              required:
                              - path
                              - server
                              type: object
                            persistentVolumeClaim:
                              description: 'PersistentVolumeClaimVolumeSource represents
                                a reference to a PersistentVolumeClaim in the same
                                namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              properties:
                                claimName:
                                  description: 'ClaimName is the name of a PersistentVolumeClaim
                                    in the same namespace as the pod using this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  type: string
                                readOnly:
                                  description: Will force the ReadOnly setting in
                                    VolumeMounts. Default false.
                                  type: boolean
                              required:
                              - claimName
                              type: object
                            photonPersistentDisk:
                              description: PhotonPersistentDisk represents a PhotonController
                                persistent disk attached and mounted on kubelets host
                                machine
                              properties:
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified.
                                  type: string
                                pdID:
                                  description: ID that identifies Photon Controller
                                    persistent disk
                                  type: string
                              required:
                              - pdID
                              type: object
                            portworxVolume:
                              description: PortworxVolume represents a portworx volume
                                attached and mounted on kubelets host machine
                              properties:
                                fsType:
                                  description: FSType represents the filesystem type
                                    to mount Must be a filesystem type supported by
                                    the host operating system. Ex. "ext4", "xfs".
                                    Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write). ReadOnly
                                    here will force the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                volumeID:
                                  description: VolumeID uniquely identifies a Portworx
                                    volume
                                  type: string
                              required:
                              - volumeID
                              type: object
                            projected:
                              description: Items for all in one resources secrets,
                                configmaps, and downward API
                              properties:
                                defaultMode:
                                  description: Mode bits used to set permissions on
                                    created files by default. Must be an octal value
                                    between 0000 and 0777 or a decimal value between
                                    0 and 511. YAML accepts both octal and decimal
                                    values, JSON requires decimal values for mode
                                    bits. Directories within the path are not affected
                                    by this setting. This might be in conflict with
                                    other options that affect the file mode, like
                                    fsGroup, and the result can be other mode bits
                                    set.
                                  format: int32
                                  type: integer
                                sources:
                                  description: list of volume projections
                                  items:
                                    description: Projection that may be projected
                                      along with other supported volume types
                                    properties:
                                      configMap:
                                        description: information about the configMap
                                          data to project
                                        properties:
                                          items:
                                            description: If unspecified, each key-value
                                              pair in the Data field of the referenced
                                              ConfigMap will be projected into the
                                              volume as a file whose name is the key
                                              and content is the value. If specified,
                                              the listed keys will be projected into
                                              the specified paths, and unlisted keys
                                              will not be present. If a key is specified
                                              which is not present in the ConfigMap,
                                              the volume setup will error unless it
                                              is marked optional. Paths must be relative
                                              and may not contain the '..' path or
                                              start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: The key to project.
                                                  type: string
                                                mode:
                                                  description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file. Must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: The relative path of
                                                    the file to map the key to. May
                                                    not be an absolute path. May not
                                                    contain the path element '..'.
                                                    May not start with the string
                                                    '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its keys must be defined
                                            type: boolean
                                        type: object
                                      downwardAPI:
                                        description: information about the downwardAPI
                                          data to project
                                        properties:
                                          items:
                                            description: Items is a list of DownwardAPIVolume
                                              file
                                            items:
                                              description: DownwardAPIVolumeFile represents
                                                information to create the file containing
                                                the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects
                                                    a field of the pod: only annotations,
                                                    labels, name and namespace are
                                                    supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the
                                                        schema the FieldPath is written
                                                        in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field
                                                        to select in the specified
                                                        API version.
                                                      type: string
                                                  required:
                                                  - fieldPath
                                                  type: object
                                                mode:
                                                  description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file, must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the
                                                    relative path name of the file
                                                    to be created. Must not be absolute
                                                    or contain the ''..'' path. Must
                                                    be utf-8 encoded. The first item
                                                    of the relative path must not
                                                    start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: 'Selects a resource
                                                    of the container: only resources
                                                    limits and requests (limits.cpu,
                                                    limits.memory, requests.cpu and
                                                    requests.memory) are currently
                                                    supported.'
                                                  properties:
                                                    containerName:
                                                      description: 'Container name:
                                                        required for volumes, optional
                                                        for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      description: Specifies the output
                                                        format of the exposed resources,
                                                        defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource
                                                        to select'
                                                      type: string
                                                  required:
                                                  - resource
                                                  type: object
                                              required:
                                              - path
                                              type: object
                                            type: array
                                        type: object
                                      secret:
                                        description: information about the secret
                                          data to project
                                        properties:
                                          items:
                                            description: If unspecified, each key-value
                                              pair in the Data field of the referenced
                                              Secret will be projected into the volume
                                              as a file whose name is the key and
                                              content is the value. If specified,
                                              the listed keys will be projected into
                                              the specified paths, and unlisted keys
                                              will not be present. If a key is specified
                                              which is not present in the Secret,
                                              the volume setup will error unless it
                                              is marked optional. Paths must be relative
                                              and may not contain the '..' path or
                                              start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: The key to project.
                                                  type: string
                                                mode:
                                                  description: 'Optional: mode bits
                                                    used to set permissions on this
                                                    file. Must be an octal value between
                                                    0000 and 0777 or a decimal value
                                                    between 0 and 511. YAML accepts
                                                    both octal and decimal values,
                                                    JSON requires decimal values for
                                                    mode bits. If not specified, the
                                                    volume defaultMode will be used.
                                                    This might be in conflict with
                                                    other options that affect the
                                                    file mode, like fsGroup, and the
                                                    result can be other mode bits
                                                    set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: The relative path of
                                                    the file to map the key to. May
                                                    not be an absolute path. May not
                                                    contain the path element '..'.
                                                    May not start with the string
                                                    '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        type: object
                                      serviceAccountToken:
                                        description: information about the serviceAccountToken
                                          data to project
                                        properties:
                                          audience:
                                            description: Audience is the intended
                                              audience of the token. A recipient of
                                              a token must identify itself with an
                                              identifier specified in the audience
                                              of the token, and otherwise should reject
                                              the token. The audience defaults to
                                              the identifier of the apiserver.
                                            type: string
                                          expirationSeconds:
                                            description: ExpirationSeconds is the
                                              requested duration of validity of the
                                              service account token. As the token
                                              approaches expiration, the kubelet volume
                                              plugin will proactively rotate the service
                                              account token. The kubelet will start
                                              trying to rotate the token if the token
                                              is older than 80 percent of its time
                                              to live or if the token is older than
                                              24 hours.Defaults to 1 hour and must
                                              be at least 10 minutes.
                                            format: int64
                                            type: integer
                                          path:
                                            description: Path is the path relative
                                              to the mount point of the file to project
                                              the token into.
                                            type: string
                                        required:
                                        - path
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            quobyte:
                              description: Quobyte represents a Quobyte mount on the
                                host that shares a pod's lifetime
                              properties:
                                group:
                                  description: Group to map volume access to Default
                                    is no group
                                  type: string
                                readOnly:
                                  description: ReadOnly here will force the Quobyte
                                    volume to be mounted with read-only permissions.
                                    Defaults to false.
                                  type: boolean
                                registry:
                                  description: Registry represents a single or multiple
                                    Quobyte Registry services specified as a string
                                    as host:port pair (multiple entries are separated
                                    with commas) which acts as the central registry
                                    for volumes
                                  type: string
                                tenant:
                                  description: Tenant owning the given Quobyte volume
                                    in the Backend Used with dynamically provisioned
                                    Quobyte volumes, value is set by the plugin
                                  type: string
                                user:
                                  description: User to map volume access to Defaults
                                    to serivceaccount user
                                  type: string
                                volume:
                                  description: Volume is a string that references
                                    an already created Quobyte volume by name.
                                  type: string
                              required:
                              - registry
                              - volume
                              type: object
                            rbd:
                              description: 'RBD represents a Rados Block Device mount
                                on the host that shares a pod''s lifetime. More info:
                                https://examples.k8s.io/volumes/rbd/README.md'
                              properties:
                                fsType:
                                  description: 'Filesystem type of the volume that
                                    you want to mount. Tip: Ensure that the filesystem
                                    type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred
                                    to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                    TODO: how do we prevent errors in the filesystem
                                    from compromising the machine'
                                  type: string
                                image:
                                  description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  type: string
                                keyring:
                                  description: 'Keyring is the path to key ring for
                                    RBDUser. Default is /etc/ceph/keyring. More info:
                                    https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  type: string
                                monitors:
                                  description: 'A collection of Ceph monitors. More
                                    info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  items:
                                    type: string
                                  type: array
                                pool:
                                  description: 'The rados pool name. Default is rbd.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  type: string
                                readOnly:
                                  description: 'ReadOnly here will force the ReadOnly
                                    setting in VolumeMounts. Defaults to false. More
                                    info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  type: boolean
                                secretRef:
                                  description: 'SecretRef is name of the authentication
                                    secret for RBDUser. If provided overrides keyring.
                                    Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                user:
                                  description: 'The rados user name. Default is admin.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                  type: string
                              required:
                              - image
                              - monitors
                              type: object
                            scaleIO:
                              description: ScaleIO represents a ScaleIO persistent
                                volume attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Default is
                                    "xfs".
                                  type: string
                                gateway:
                                  description: The host address of the ScaleIO API
                                    Gateway.
                                  type: string
                                protectionDomain:
                                  description: The name of the ScaleIO Protection
                                    Domain for the configured storage.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write). ReadOnly
                                    here will force the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: SecretRef references to the secret
                                    for ScaleIO user and other sensitive information.
                                    If this is not provided, Login operation will
                                    fail.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                sslEnabled:
                                  description: Flag to enable/disable SSL communication
                                    with Gateway, default false
                                  type: boolean
                                storageMode:
                                  description: Indicates whether the storage for a
                                    volume should be ThickProvisioned or ThinProvisioned.
                                    Default is ThinProvisioned.
                                  type: string
                                storagePool:
                                  description: The ScaleIO Storage Pool associated
                                    with the protection domain.
                                  type: string
                                system:
                                  description: The name of the storage system as configured
                                    in ScaleIO.
                                  type: string
                                volumeName:
                                  description: The name of a volume already created
                                    in the ScaleIO system that is associated with
                                    this volume source.
                                  type: string
                              required:
                              - gateway
                              - secretRef
                              - system
                              type: object
                            secret:
                              description: 'Secret represents a secret that should
                                populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits used to set permissions
                                    on created files by default. Must be an octal
                                    value between 0000 and 0777 or a decimal value
                                    between 0 and 511. YAML accepts both octal and
                                    decimal values, JSON requires decimal values for
                                    mode bits. Defaults to 0644. Directories within
                                    the path are not affected by this setting. This
                                    might be in conflict with other options that affect
                                    the file mode, like fsGroup, and the result can
                                    be other mode bits set.'
                                  format: int32
                                  type: integer
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced Secret will
                                    be projected into the volume as a file whose name
                                    is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the Secret, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits used to
                                          set permissions on this file. Must be an
                                          octal value between 0000 and 0777 or a decimal
                                          value between 0 and 511. YAML accepts both
                                          octal and decimal values, JSON requires
                                          decimal values for mode bits. If not specified,
                                          the volume defaultMode will be used. This
                                          might be in conflict with other options
                                          that affect the file mode, like fsGroup,
                                          and the result can be other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                optional:
                                  description: Specify whether the Secret or its keys
                                    must be defined
                                  type: boolean
                                secretName:
                                  description: 'Name of the secret in the pod''s namespace
                                    to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  type: string
                              type: object
                            storageos:
                              description: StorageOS represents a StorageOS volume
                                attached and mounted on Kubernetes nodes.
                              properties:
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: Defaults to false (read/write). ReadOnly
                                    here will force the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: SecretRef specifies the secret to use
                                    for obtaining the StorageOS API credentials.  If
                                    not specified, default values will be attempted.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                volumeName:
                                  description: VolumeName is the human-readable name
                                    of the StorageOS volume.  Volume names are only
                                    unique within a namespace.
                                  type: string
                                volumeNamespace:
                                  description: VolumeNamespace specifies the scope
                                    of the volume within StorageOS.  If no namespace
                                    is specified then the Pod's namespace will be
                                    used.  This allows the Kubernetes name scoping
                                    to be mirrored within StorageOS for tighter integration.
                                    Set VolumeName to any name to override the default
                                    behaviour. Set to "default" if you are not using
                                    namespaces within StorageOS. Namespaces that do
                                    not pre-exist within StorageOS will be created.
                                  type: string
                              type: object
                            vsphereVolume:
                              description: VsphereVolume represents a vSphere volume
                                attached and mounted on kubelets host machine
                              properties:
                                fsType:
                                  description: Filesystem type to mount. Must be a
                                    filesystem type supported by the host operating
                                    system. Ex. "ext4", "xfs", "ntfs". Implicitly
                                    inferred to be "ext4" if unspecified.
                                  type: string
                                storagePolicyID:
                                  description: Storage Policy Based Management (SPBM)
                                    profile ID associated with the StoragePolicyName.
                                  type: string
                                storagePolicyName:
                                  description: Storage Policy Based Management (SPBM)
                                    profile name.
                                  type: string
                                volumePath:
                                  description: Path that identifies vSphere volume
                                    vmdk
                                  type: string
                              required:
                              - volumePath
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                    type: object
                  initContainers:
                    description: 'InitContainers defines init-containers to be deployed
                      in each Cassandra pod. K8ssandra-operator and cass-operator
                      will create their own init-containers, which can be referenced
                      here to control ordering or override specific settings such
                      as mounts or resources request/limits for example. Only the
                      name of the k8ssandra-operator/cass-operator init-containers
                      is required, not their full definition which will be created
                      by the operators. Example: initContainers: - name: server-config-init
                      - name: custom-init-container image: busybox - name: medusa-restore
                      Otherwise init-containers referenced here will be injected in
                      first position'
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME)
                            syntax: i.e. "$$(VAR_NAME)" will produce the string literal
                            "$(VAR_NAME)". Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot
                            be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. Double $$ are reduced to a single $, which
                            allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                            will produce the string literal "$(VAR_NAME)". Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The Pod''s termination
                                grace period countdown begins before the PreStop hook
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period (unless delayed by
                                finalizers). Other management of the container blocks
                                until the hook completes or until the termination
                                grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                            will be restarted if the probe fails. Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Exposing a port here gives the system additional information
                            about the network connections a container uses, but is
                            primarily informational. Not specifying a port here DOES
                            NOT prevent that port from being exposed. Any port which
                            is listening on the default "0.0.0.0" address inside a
                            container will be accessible from the network. Cannot
                            be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the
                            probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        securityContext:
                          description: 'SecurityContext defines the security options
                            the container should be run with. If set, the fields of
                            SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must only be set if type is "Localhost".
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. This
                                    field is alpha-level and will only be honored
                                    by components that enable the WindowsHostProcessContainers
                                    feature flag. Setting this field without the feature
                                    flag will result in errors when validating the
                                    Pod. All of a Pod's containers must have the same
                                    effective HostProcess value (it is not allowed
                                    to have a mix of HostProcess containers and non-HostProcess
                                    containers).  In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                            initialized. If specified, no other probes are executed
                            until this completes successfully. If this probe fails,
                            the Pod will be restarted, just as if the livenessProbe
                            failed. This can be used to provide different probe parameters
                            at the beginning of a Pod''s lifecycle, when it might
                            take a long time to load data or warm a cache, than during
                            steady-state operation. This cannot be updated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is an alpha field and requires enabling
                                GRPCContainerProbe feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  jmxInitContainerImage:
                    default:
                      name: busybox
                      tag: 1.34.1
                    description: The image to use in each Cassandra pod for the (short-lived)
                      init container that enables JMX remote authentication on Cassandra
                      pods. This is only useful when authentication is enabled in
                      the cluster. The default is "busybox:1.34.1".
                    properties:
                      name:
                        description: The image name to use.
                        type: string
                      pullPolicy:
                        description: The image pull policy to use. Defaults to "Always"
                          if the tag is "latest", otherwise to "IfNotPresent".
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      pullSecretRef:
                        description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      registry:
                        default: docker.io
                        description: The Docker registry to use. Defaults to "docker.io",
                          the official Docker Hub.
                        type: string
                      repository:
                        description: The Docker repository to use.
                        type: string
                      tag:
                        default: latest
                        description: The image tag to use. Defaults to "latest".
                        type: string
                    type: object
                  mgmtAPIHeap:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MgmtAPIHeap defines the amount of memory devoted
                      to the management api heap.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  networking:
                    description: Networking enables host networking and configures
                      a NodePort ports.
                    properties:
                      hostNetwork:
                        type: boolean
                      nodePort:
                        properties:
                          internode:
                            type: integer
                          internodeSSL:
                            type: integer
                          native:
                            type: integer
                          nativeSSL:
                            type: integer
                        type: object
                    type: object
                  racks:
                    description: Racks is a list of named racks. Note that racks are
                      used to create node affinity. //
                    items:
                      description: Rack ...
                      properties:
                        name:
                          description: The rack name
                          minLength: 2
                          type: string
                        nodeAffinityLabels:
                          additionalProperties:
                            type: string
                          description: NodeAffinityLabels to pin the rack, using node
                            affinity
                          type: object
                        zone:
                          description: Deprecated. Use nodeAffinityLabels instead.
                            Zone name to pin the rack, using node affinity
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  resources:
                    description: Resources is the cpu and memory resources for the
                      cassandra container.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serverEncryptionStores:
                    description: Internode encryption stores which are used by Cassandra
                      and Stargate.
                    properties:
                      keystoreSecretRef:
                        description: ref to the secret that contains the keystore
                          and its password the expected format of the secret is a
                          "keystore" entry and a "keystore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      truststoreSecretRef:
                        description: ref to the secret that contains the truststore
                          and its password the expected format of the secret is a
                          "truststore" entry and a "truststore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - keystoreSecretRef
                    - truststoreSecretRef
                    type: object
                  serverImage:
                    description: ServerImage is the image for the cassandra container.
                      Note that this should be a management-api image. If left empty
                      the operator will choose a default image based on ServerVersion.
                    type: string
                  serverVersion:
                    description: ServerVersion is the Cassandra version.
                    pattern: (3\.11\.\d+)|(4\.0\.\d+)
                    type: string
                  softPodAntiAffinity:
                    description: SoftPodAntiAffinity sets whether multiple Cassandra
                      instances can be scheduled on the same node. This should normally
                      be false to ensure cluster resilience but may be set true for
                      test/dev scenarios to minimise the number of nodes required.
                    type: boolean
                  storageConfig:
                    description: StorageConfig is the persistent storage requirements
                      for each Cassandra pod. This includes everything under /var/lib/cassandra,
                      namely the commit log and data directories.
                    properties:
                      additionalVolumes:
                        items:
                          description: AdditionalVolumes StorageConfig defines additional
                            storage configurations
                          properties:
                            mountPath:
                              description: Mount path into cassandra container
                              type: string
                            name:
                              description: Name of the pvc
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              type: string
                            pvcSpec:
                              description: Persistent volume claim spec
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. If the AnyVolumeDataSource feature
                                    gate is enabled, this field will always have the
                                    same contents as the DataSourceRef field.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                dataSourceRef:
                                  description: 'Specifies the object from which to
                                    populate the volume with data, if a non-empty
                                    volume is desired. This may be any local object
                                    from a non-empty API group (non core object) or
                                    a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    DataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, both fields (DataSource
                                    and DataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. There are two important differences
                                    between DataSource and DataSourceRef: * While
                                    DataSource only allows two specific types of objects,
                                    DataSourceRef allows any non-core object, as well
                                    as PersistentVolumeClaim objects. * While DataSource
                                    ignores disallowed values (dropping them), DataSourceRef
                                    preserves all values, and generates an error if
                                    a disallowed value is specified. (Alpha) Using
                                    this field requires the AnyVolumeDataSource feature
                                    gate to be enabled.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: 'Resources represents the minimum resources
                                    the volume should have. If RecoverVolumeExpansionFailure
                                    feature is enabled users are allowed to specify
                                    resource requirements that are lower than previous
                                    value but must still be higher than capacity recorded
                                    in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                selector:
                                  description: A label query over volumes to consider
                                    for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                storageClassName:
                                  description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  type: string
                                volumeMode:
                                  description: volumeMode defines what type of volume
                                    is required by the claim. Value of Filesystem
                                    is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: VolumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          required:
                          - mountPath
                          - name
                          - pvcSpec
                          type: object
                        type: array
                      cassandraDataVolumeClaimSpec:
                        description: PersistentVolumeClaimSpec describes the common
                          attributes of storage devices and allows a Source for provider-specific
                          attributes
                        properties:
                          accessModes:
                            description: 'AccessModes contains the desired access
                              modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                            items:
                              type: string
                            type: array
                          dataSource:
                            description: 'This field can be used to specify either:
                              * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim) If the provisioner
                              or an external controller can support the specified
                              data source, it will create a new volume based on the
                              contents of the specified data source. If the AnyVolumeDataSource
                              feature gate is enabled, this field will always have
                              the same contents as the DataSourceRef field.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          dataSourceRef:
                            description: 'Specifies the object from which to populate
                              the volume with data, if a non-empty volume is desired.
                              This may be any local object from a non-empty API group
                              (non core object) or a PersistentVolumeClaim object.
                              When this field is specified, volume binding will only
                              succeed if the type of the specified object matches
                              some installed volume populator or dynamic provisioner.
                              This field will replace the functionality of the DataSource
                              field and as such if both fields are non-empty, they
                              must have the same value. For backwards compatibility,
                              both fields (DataSource and DataSourceRef) will be set
                              to the same value automatically if one of them is empty
                              and the other is non-empty. There are two important
                              differences between DataSource and DataSourceRef: *
                              While DataSource only allows two specific types of objects,
                              DataSourceRef allows any non-core object, as well as
                              PersistentVolumeClaim objects. * While DataSource ignores
                              disallowed values (dropping them), DataSourceRef preserves
                              all values, and generates an error if a disallowed value
                              is specified. (Alpha) Using this field requires the
                              AnyVolumeDataSource feature gate to be enabled.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: 'Resources represents the minimum resources
                              the volume should have. If RecoverVolumeExpansionFailure
                              feature is enabled users are allowed to specify resource
                              requirements that are lower than previous value but
                              must still be higher than capacity recorded in the status
                              field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          selector:
                            description: A label query over volumes to consider for
                              binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          storageClassName:
                            description: 'Name of the StorageClass required by the
                              claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                            type: string
                          volumeMode:
                            description: volumeMode defines what type of volume is
                              required by the claim. Value of Filesystem is implied
                              when not included in claim spec.
                            type: string
                          volumeName:
                            description: VolumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                    type: object
                  superuserSecretRef:
                    description: The reference to the superuser secret to use for
                      Cassandra. If unspecified, a default secret will be generated
                      with a random password; the generated secret name will be "<cluster_name>-superuser"
                      where <cluster_name> is the K8ssandraCluster CRD name.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  telemetry:
                    description: Telemetry defines the desired state for telemetry
                      resources in this datacenter. If telemetry configurations are
                      defined, telemetry resources will be deployed to integrate with
                      a user-provided monitoring solution (at present, only support
                      for Prometheus is available).
                    properties:
                      mcac:
                        properties:
                          metricFilters:
                            description: 'MetricFilters allows passing filters to
                              MCAC in order to reduce the amount of extracted metrics.
                              Not setting this field will result in the default filters
                              being used. Setting it to an empty list will result
                              in all metrics being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                              - "deny:org.apache.cassandra.metrics.table" - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                              - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                              - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                            items:
                              type: string
                            type: array
                        type: object
                      prometheus:
                        properties:
                          commonLabels:
                            additionalProperties:
                              type: string
                            description: CommonLabels are applied to all serviceMonitors
                              created.
                            type: object
                          enabled:
                            description: Enable the creation of Prometheus serviceMonitors
                              for this resource (Cassandra or Stargate).
                            type: boolean
                        type: object
                    type: object
                  tolerations:
                    description: Tolerations applied to every Cassandra pod.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              externalDatacenters:
                description: During a migration the operator should alter keyspaces
                  replication settings including the following external DCs. This
                  avoids removing replicas from datacenters which are outside of the
                  operator scope (not referenced in the CR). Replication settings
                  changes will only apply to system_* keyspaces as well as reaper_db
                  and data_endpoint_auth (Stargate).
                items:
                  type: string
                type: array
              medusa:
                description: Medusa defines the desired deployment characteristics
                  for Medusa in this K8ssandraCluster. If this is non-nil, Medusa
                  will be deployed in every Cassandra pod in this K8ssandraCluster.
                properties:
                  cassandraUserSecretRef:
                    description: 'Defines the username and password that Medusa will
                      use to authenticate CQL connections to Cassandra clusters. These
                      credentials will be automatically turned into CQL roles by cass-operator
                      when bootstrapping the datacenter, then passed to the Medusa
                      instances, so that it can authenticate against nodes in the
                      datacenter using CQL. The secret must be in the same namespace
                      as Cassandra and must contain two keys: "username" and "password".'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  certificatesSecretRef:
                    description: 'Certificates for Medusa if client encryption is
                      enabled in Cassandra. The secret must be in the same namespace
                      as Cassandra and must contain three keys: "rootca.crt", "client.crt_signed"
                      and "client.key". See https://docs.datastax.com/en/developer/python-driver/latest/security/
                      for more information on the required files.'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  containerImage:
                    description: MedusaContainerImage is the image characteristics
                      to use for Medusa containers. Leave nil to use a default image.
                    properties:
                      name:
                        description: The image name to use.
                        type: string
                      pullPolicy:
                        description: The image pull policy to use. Defaults to "Always"
                          if the tag is "latest", otherwise to "IfNotPresent".
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      pullSecretRef:
                        description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      registry:
                        default: docker.io
                        description: The Docker registry to use. Defaults to "docker.io",
                          the official Docker Hub.
                        type: string
                      repository:
                        description: The Docker repository to use.
                        type: string
                      tag:
                        default: latest
                        description: The image tag to use. Defaults to "latest".
                        type: string
                    type: object
                  containerResources:
                    description: Medusa main container resources.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  initContainerResources:
                    description: medusa-restore init container resources.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext applied to the Medusa containers.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  storageProperties:
                    description: Provides all storage backend related properties for
                      backups.
                    properties:
                      apiProfile:
                        description: AWS Profile to use for authentication.
                        type: string
                      backupGracePeriodInDays:
                        description: Age after which orphan sstables can be deleted
                          from the storage backend. Protects from race conditions
                          between purge and ongoing backups. Defaults to 10 days.
                        type: integer
                      bucketName:
                        description: The name of the bucket to use for the backups.
                        type: string
                      concurrentTransfers:
                        default: 1
                        description: Number of concurrent uploads. Helps maximizing
                          the speed of uploads but puts more pressure on the network.
                          Defaults to 1.
                        type: integer
                      host:
                        description: Host to connect to for the storage backend.
                        type: string
                      maxBackupAge:
                        default: 0
                        description: Maximum backup age that the purge process should
                          observe.
                        type: integer
                      maxBackupCount:
                        default: 0
                        description: Maximum number of backups to keep (used by the
                          purge process). Default is unlimited.
                        type: integer
                      multiPartUploadThreshold:
                        default: 104857600
                        description: File size over which cloud specific cli tools
                          are used for transfer. Defaults to 100 MB.
                        type: integer
                      podStorage:
                        description: Pod storage settings for the local storage provider
                        properties:
                          accessModes:
                            description: Pod local storage access modes
                            items:
                              type: string
                            type: array
                          size:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 10Gi
                            description: Size of the pod's storage in bytes. Defaults
                              to 10 GB.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          storageClassName:
                            description: Storage class name to use for the pod's storage.
                            type: string
                        type: object
                      port:
                        description: Port to connect to for the storage backend.
                        type: integer
                      prefix:
                        description: Name of the top level folder in the backup bucket.
                          If empty, the cluster name will be used.
                        type: string
                      region:
                        description: Region of the storage bucket. Defaults to "default".
                        type: string
                      secure:
                        description: Whether to use SSL for the storage backend.
                        type: boolean
                      storageProvider:
                        description: The storage backend to use for the backups.
                        enum:
                        - local
                        - google_storage
                        - azure_blobs
                        - s3
                        - s3_compatible
                        - s3_rgw
                        - ibm_storage
                        type: string
                      storageSecretRef:
                        description: Kubernetes Secret that stores the key file for
                          the storage provider's API. If using 'local' storage, this
                          value is ignored.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      transferMaxBandwidth:
                        default: 50MB/s
                        description: Max upload bandwidth in MB/s. Defaults to 50
                          MB/s.
                        type: string
                    type: object
                type: object
              reaper:
                description: Reaper defines the desired deployment characteristics
                  for Reaper in this K8ssandraCluster. If this is non-nil, Reaper
                  will be deployed on every Cassandra datacenter in this K8ssandraCluster.
                properties:
                  ServiceAccountName:
                    default: default
                    type: string
                  affinity:
                    description: Affinity applied to the Reaper pods.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is beta-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is beta-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  autoScheduling:
                    description: Auto scheduling properties. When you enable the auto-schedule
                      feature, Reaper dynamically schedules repairs for all non-system
                      keyspaces in a cluster. A cluster's keyspaces are monitored
                      and any modifications (additions or removals) are detected.
                      When a new keyspace is created, a new repair schedule is created
                      automatically for that keyspace. Conversely, when a keyspace
                      is removed, the corresponding repair schedule is deleted.
                    properties:
                      enabled:
                        default: false
                        type: boolean
                      excludedClusters:
                        description: ExcludedClusters are the clusters that are to
                          be excluded from the repair schedule.
                        items:
                          type: string
                        type: array
                      excludedKeyspaces:
                        description: ExcludedKeyspaces are the keyspaces that are
                          to be excluded from the repair schedule.
                        items:
                          type: string
                        type: array
                      initialDelayPeriod:
                        default: PT15S
                        description: InitialDelay is the amount of delay time before
                          the schedule period starts. Must be a valid ISO-8601 duration
                          string. The default is "PT15S" (15 seconds).
                        pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                        type: string
                      percentUnrepairedThreshold:
                        default: 10
                        description: PercentUnrepairedThreshold is the percentage
                          of unrepaired data over which an incremental repair should
                          be started. Only relevant when using repair type INCREMENTAL.
                        maximum: 100
                        minimum: 0
                        type: integer
                      periodBetweenPolls:
                        default: PT10M
                        description: PeriodBetweenPolls is the interval time to wait
                          before checking whether to start a repair task. Must be
                          a valid ISO-8601 duration string. The default is "PT10M"
                          (10 minutes).
                        pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                        type: string
                      repairType:
                        default: AUTO
                        description: 'RepairType is the type of repair to create:
                          - REGULAR creates a regular repair (non-adaptive and non-incremental);
                          - ADAPTIVE creates an adaptive repair; adaptive repairs
                          are most suited for Cassandra 3. - INCREMENTAL creates an
                          incremental repair; incremental repairs should only be used
                          with Cassandra 4+. - AUTO chooses between ADAPTIVE and INCREMENTAL
                          depending on the Cassandra server version; ADAPTIVE for
                          Cassandra 3 and INCREMENTAL for Cassandra 4+.'
                        enum:
                        - REGULAR
                        - ADAPTIVE
                        - INCREMENTAL
                        - AUTO
                        type: string
                      scheduleSpreadPeriod:
                        default: PT6H
                        description: ScheduleSpreadPeriod is the time spacing between
                          each of the repair schedules that is to be carried out.
                          Must be a valid ISO-8601 duration string. The default is
                          "PT6H" (6 hours).
                        pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                        type: string
                      timeBeforeFirstSchedule:
                        default: PT5M
                        description: TimeBeforeFirstSchedule is the grace period before
                          the first repair in the schedule is started. Must be a valid
                          ISO-8601 duration string. The default is "PT5M" (5 minutes).
                        pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                        type: string
                    type: object
                  cassandraUserSecretRef:
                    description: 'Defines the username and password that Reaper will
                      use to authenticate CQL connections to Cassandra clusters. These
                      credentials will be automatically turned into CQL roles by cass-operator
                      when bootstrapping the datacenter, then passed to the Reaper
                      instance, so that it can authenticate against nodes in the datacenter
                      using CQL. If CQL authentication is not required, leave this
                      field empty. The secret must be in the same namespace as Reaper
                      itself and must contain two keys: "username" and "password".'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  containerImage:
                    default:
                      name: cassandra-reaper
                      repository: thelastpickle
                      tag: 3.2.0
                    description: The image to use for the Reaper pod main container.
                      The default is "thelastpickle/cassandra-reaper:3.2.0".
                    properties:
                      name:
                        description: The image name to use.
                        type: string
                      pullPolicy:
                        description: The image pull policy to use. Defaults to "Always"
                          if the tag is "latest", otherwise to "IfNotPresent".
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      pullSecretRef:
                        description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      registry:
                        default: docker.io
                        description: The Docker registry to use. Defaults to "docker.io",
                          the official Docker Hub.
                        type: string
                      repository:
                        description: The Docker repository to use.
                        type: string
                      tag:
                        default: latest
                        description: The image tag to use. Defaults to "latest".
                        type: string
                    type: object
                  deploymentMode:
                    default: PER_DC
                    enum:
                    - PER_DC
                    - SINGLE
                    type: string
                  heapSize:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 2Gi
                    description: HeapSize sets the JVM heap size to use for Reaper.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  initContainerImage:
                    default:
                      name: cassandra-reaper
                      repository: thelastpickle
                      tag: 3.2.0
                    description: The image to use for the Reaper pod init container
                      (that performs schema migrations). The default is "thelastpickle/cassandra-reaper:3.2.0".
                    properties:
                      name:
                        description: The image name to use.
                        type: string
                      pullPolicy:
                        description: The image pull policy to use. Defaults to "Always"
                          if the tag is "latest", otherwise to "IfNotPresent".
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      pullSecretRef:
                        description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      registry:
                        default: docker.io
                        description: The Docker registry to use. Defaults to "docker.io",
                          the official Docker Hub.
                        type: string
                      repository:
                        description: The Docker repository to use.
                        type: string
                      tag:
                        default: latest
                        description: The image tag to use. Defaults to "latest".
                        type: string
                    type: object
                  initContainerResources:
                    description: Init Container resources.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  initContainerSecurityContext:
                    description: InitContainerSecurityContext is the SecurityContext
                      applied to the Reaper init container, used to perform schema
                      migrations.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  jmxUserSecretRef:
                    description: 'Defines the username and password that Reaper will
                      use to authenticate JMX connections to Cassandra clusters. These
                      credentials will be automatically passed to each Cassandra node
                      in the datacenter, as well as to the Reaper instance, so that
                      the latter can authenticate against the former. If JMX authentication
                      is not required, leave this field empty. The secret must be
                      in the same namespace as Reaper itself and must contain two
                      keys: "username" and "password".'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  keyspace:
                    default: reaper_db
                    description: The keyspace to use to store Reaper's state. Will
                      default to "reaper_db" if unspecified. Will be created if it
                      does not exist, and if this Reaper resource is managed by K8ssandra.
                    type: string
                  livenessProbe:
                    description: LivenessProbe sets the Reaper liveness probe. Leave
                      nil to use defaults.
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  podSecurityContext:
                    description: PodSecurityContext contains a pod-level SecurityContext
                      to apply to Reaper pods.
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume. Note that this field cannot be
                          set when spec.os.name is windows."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used. Note that
                          this field cannot be set when spec.os.name is windows.'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container. Note that this field
                          cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                          Note that this field cannot be set when spec.os.name is
                          windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by the containers
                          in this pod. Note that this field cannot be set when spec.os.name
                          is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                          Note that this field cannot be set when spec.os.name is
                          windows.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch. Note that this field cannot
                          be set when spec.os.name is windows.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  readinessProbe:
                    description: ReadinessProbe sets the Reaper readiness probe. Leave
                      nil to use defaults.
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Main Container resources.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext applied to the Reaper main container.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  telemetry:
                    description: Telemetry defines the desired telemetry integrations
                      to deploy targeting the Reaper pods for all DCs in this cluster
                      (unless overriden by DC specific settings)
                    properties:
                      mcac:
                        properties:
                          metricFilters:
                            description: 'MetricFilters allows passing filters to
                              MCAC in order to reduce the amount of extracted metrics.
                              Not setting this field will result in the default filters
                              being used. Setting it to an empty list will result
                              in all metrics being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                              - "deny:org.apache.cassandra.metrics.table" - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                              - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                              - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                            items:
                              type: string
                            type: array
                        type: object
                      prometheus:
                        properties:
                          commonLabels:
                            additionalProperties:
                              type: string
                            description: CommonLabels are applied to all serviceMonitors
                              created.
                            type: object
                          enabled:
                            description: Enable the creation of Prometheus serviceMonitors
                              for this resource (Cassandra or Stargate).
                            type: boolean
                        type: object
                    type: object
                  tolerations:
                    description: Tolerations applied to the Reaper pods.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  uiUserSecretRef:
                    description: Defines the secret which contains the username and
                      password for the Reaper UI and REST API authentication.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                type: object
              stargate:
                description: Stargate defines the desired deployment characteristics
                  for Stargate in this K8ssandraCluster. If this is non-nil, Stargate
                  will be deployed on every Cassandra datacenter in this K8ssandraCluster.
                properties:
                  affinity:
                    description: Affinity is the affinity to apply to all the Stargate
                      pods. Leave nil to let the controller reuse the same affinity
                      rules used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is beta-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces. This
                                        field is beta-level and is only honored when
                                        PodAffinityNamespaceSelector feature is enabled.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  allowStargateOnDataNodes:
                    default: false
                    description: 'AllowStargateOnDataNodes allows Stargate pods to
                      be scheduled on a worker node already hosting data pods for
                      this datacenter. The default is false, which means that Stargate
                      pods will be scheduled on separate worker nodes. Note: if the
                      datacenter pods have HostNetwork:true, then the Stargate pods
                      will inherit of it, in which case it is possible that Stargate
                      nodes won''t be allowed to sit on data nodes even if this property
                      is set to true, because of port conflicts on the same IP address.'
                    type: boolean
                  authOptions:
                    description: Authentication options.
                    properties:
                      apiAuthMethod:
                        default: Table
                        description: 'The method to use for authenticating requests
                          to the Stargate APIs. Stargate currently has two authentication
                          / authorization methods: - Table: table-based; - JWT: JSON
                          web token (JWT)-based. The methods are mutually exclusive.
                          The default method is Table.'
                        enum:
                        - Table
                        - JWT
                        type: string
                      providerUrl:
                        description: Required when using JWT authentication method,
                          ignored otherwise.
                        type: string
                      tokenTtlSeconds:
                        description: The time-to-live in seconds of an API authentication
                          token. Valid only for the Table authentication method. By
                          default, the token persists for 30 minutes with a sliding
                          window. Each use of the token to authenticate resets the
                          30-minute window. A token created and used after 29 minutes
                          will authenticate a request, but if 31 minutes passes before
                          use, the token will no longer exist. Default is 1800 seconds
                          (30 minutes).
                        minimum: 1
                        type: integer
                    type: object
                  cassandraConfigMapRef:
                    description: CassandraConfigMapRef is a reference to a ConfigMap
                      that holds Cassandra configuration. The map should have a key
                      named cassandra_yaml.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  containerImage:
                    default:
                      repository: stargateio
                      tag: v1.0.45
                    description: ContainerImage is the image characteristics to use
                      for Stargate containers. Leave nil to use a default image.
                    properties:
                      name:
                        description: The image name to use.
                        type: string
                      pullPolicy:
                        description: The image pull policy to use. Defaults to "Always"
                          if the tag is "latest", otherwise to "IfNotPresent".
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      pullSecretRef:
                        description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      registry:
                        default: docker.io
                        description: The Docker registry to use. Defaults to "docker.io",
                          the official Docker Hub.
                        type: string
                      repository:
                        description: The Docker repository to use.
                        type: string
                      tag:
                        default: latest
                        description: The image tag to use. Defaults to "latest".
                        type: string
                    type: object
                  heapSize:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 256Mi
                    description: 'HeapSize sets the JVM heap size to use for Stargate.
                      If no Resources are specified, this value will also be used
                      to set a default memory request and limit for the Stargate pods:
                      these will be set to HeapSize x2 and x4, respectively.'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  livenessProbe:
                    description: LivenessProbe sets the Stargate liveness probe. Leave
                      nil to use defaults.
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector is an optional map of label keys and
                      values to restrict the scheduling of Stargate nodes to workers
                      with matching labels. Leave nil to let the controller reuse
                      the same node selectors used for data pods in this datacenter,
                      if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                    type: object
                  readinessProbe:
                    description: ReadinessProbe sets the Stargate readiness probe.
                      Leave nil to use defaults.
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resources is the Kubernetes resource requests and
                      limits to apply, per Stargate pod. Leave nil to use defaults.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccount:
                    default: default
                    description: ServiceAccount is the service account name to use
                      for Stargate pods.
                    type: string
                  size:
                    default: 1
                    description: Size is the number of Stargate instances to deploy
                      in each datacenter. They will be spread evenly across racks.
                    format: int32
                    minimum: 1
                    type: integer
                  telemetry:
                    description: Telemetry defines the desired telemetry integrations
                      to deploy targeting the Stargate pods for all DCs in this cluster
                      (unless overriden by DC specific settings)
                    properties:
                      mcac:
                        properties:
                          metricFilters:
                            description: 'MetricFilters allows passing filters to
                              MCAC in order to reduce the amount of extracted metrics.
                              Not setting this field will result in the default filters
                              being used. Setting it to an empty list will result
                              in all metrics being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                              - "deny:org.apache.cassandra.metrics.table" - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                              - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                              - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                            items:
                              type: string
                            type: array
                        type: object
                      prometheus:
                        properties:
                          commonLabels:
                            additionalProperties:
                              type: string
                            description: CommonLabels are applied to all serviceMonitors
                              created.
                            type: object
                          enabled:
                            description: Enable the creation of Prometheus serviceMonitors
                              for this resource (Cassandra or Stargate).
                            type: boolean
                        type: object
                    type: object
                  tolerations:
                    description: Tolerations are tolerations to apply to the Stargate
                      pods. Leave nil to let the controller reuse the same tolerations
                      used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                required:
                - size
                type: object
            type: object
          status:
            description: K8ssandraClusterStatus defines the observed state of K8ssandraCluster
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transited from one status to another.
                      format: date-time
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              datacenters:
                additionalProperties:
                  description: K8ssandraStatus defines the observed of a k8ssandra
                    instance
                  properties:
                    cassandra:
                      description: CassandraDatacenterStatus defines the observed
                        state of CassandraDatacenter
                      properties:
                        cassandraOperatorProgress:
                          description: Last known progress state of the Cassandra
                            Operator
                          type: string
                        conditions:
                          items:
                            properties:
                              lastTransitionTime:
                                format: date-time
                                type: string
                              message:
                                type: string
                              reason:
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        lastRollingRestart:
                          format: date-time
                          type: string
                        lastServerNodeStarted:
                          description: The timestamp when the operator last started
                            a Server node with the management API
                          format: date-time
                          type: string
                        nodeReplacements:
                          items:
                            type: string
                          type: array
                        nodeStatuses:
                          additionalProperties:
                            properties:
                              hostID:
                                type: string
                            type: object
                          type: object
                        observedGeneration:
                          format: int64
                          type: integer
                        quietPeriod:
                          format: date-time
                          type: string
                        superUserUpserted:
                          description: Deprecated. Use usersUpserted instead. The
                            timestamp at which CQL superuser credentials were last
                            upserted to the management API
                          format: date-time
                          type: string
                        trackedTasks:
                          description: TrackedTasks tracks the tasks for completion
                            that were created by the cass-operator
                          items:
                            description: 'ObjectReference contains enough information
                              to let you inspect or modify the referred object. ---
                              New uses of this type are discouraged because of difficulty
                              describing its usage when embedded in APIs. 1. Ignored
                              fields.  It includes many fields which are not generally
                              honored.  For instance, ResourceVersion and FieldPath
                              are both very rarely valid in actual usage. 2. Invalid
                              usage help.  It is impossible to add specific help for
                              individual usage.  In most embedded usages, there are
                              particular restrictions like, "must refer only to types
                              A and B" or "UID not honored" or "name must be restricted".
                              Those cannot be well described when embedded. 3. Inconsistent
                              validation.  Because the usages are different, the validation
                              rules are different by usage, which makes it hard for
                              users to predict what will happen. 4. The fields are
                              both imprecise and overly precise.  Kind is not a precise
                              mapping to a URL. This can produce ambiguity during
                              interpretation and require a REST mapping.  In most
                              cases, the dependency is on the group,resource tuple
                              and the version of the actual struct is irrelevant.
                              5. We cannot easily change it.  Because this type is
                              embedded in many locations, updates to this type will
                              affect numerous schemas.  Don''t make new APIs embed
                              an underspecified API type they do not control. Instead
                              of using this type, create a locally provided and used
                              type that is well-focused on your reference. For example,
                              ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                              .'
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                          type: array
                        usersUpserted:
                          description: The timestamp at which managed cassandra users'
                            credentials were last upserted to the management API
                          format: date-time
                          type: string
                      type: object
                    decommissionProgress:
                      type: string
                    reaper:
                      description: ReaperStatus defines the observed state of Reaper
                      properties:
                        conditions:
                          items:
                            properties:
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transited from one status to another.
                                format: date-time
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        progress:
                          description: Progress is the progress of this Reaper object.
                          enum:
                          - Pending
                          - Deploying
                          - Configuring
                          - Running
                          type: string
                      type: object
                    stargate:
                      description: StargateStatus defines the observed state of a
                        Stargate resource.
                      properties:
                        availableReplicas:
                          description: Total number of available pods targeted by
                            the Stargate deployment. Will be zero if the deployment
                            has not been created yet.
                          format: int32
                          type: integer
                        conditions:
                          items:
                            properties:
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transited from one status to another.
                                format: date-time
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        deploymentRefs:
                          description: DeploymentRefs is the names of the Deployment
                            objects that were created for this Stargate object.
                          items:
                            type: string
                          type: array
                        progress:
                          description: Progress is the progress of this Stargate object.
                          enum:
                          - Pending
                          - Deploying
                          - Running
                          type: string
                        readyReplicas:
                          description: ReadyReplicas is the total number of ready
                            pods targeted by the Stargate deployment. Will be zero
                            if the deployment has not been created yet.
                          format: int32
                          type: integer
                        readyReplicasRatio:
                          description: ReadyReplicasRatio is a "X/Y" string representing
                            the ratio between ReadyReplicas and Replicas in the Stargate
                            deployment.
                          pattern: \d+/\d+
                          type: string
                        replicas:
                          description: Total number of non-terminated pods targeted
                            by the Stargate deployment (their labels match the selector).
                            Will be zero if the deployment has not been created yet.
                          format: int32
                          type: integer
                        serviceRef:
                          description: ServiceRef is the name of the Service object
                            that was created for this Stargate object.
                          type: string
                        updatedReplicas:
                          description: UpdatedReplicas is the total number of non-terminated
                            pods targeted by the Stargate deployment that have the
                            desired template spec. Will be zero if the deployment
                            has not been created yet.
                          format: int32
                          type: integer
                      required:
                      - availableReplicas
                      - readyReplicas
                      - replicas
                      - updatedReplicas
                      type: object
                  type: object
                description: "Datacenters maps the CassandraDatacenter name to a K8ssandraStatus.
                  The naming is a bit confusing but the mapping makes sense because
                  we have a CassandraDatacenter and then define other components like
                  Stargate and Reaper relative to it. I wanted to inline the field
                  but when I do it won't serialize. \n TODO Figure out how to inline
                  this field"
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: medusabackupjobs.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: MedusaBackupJob
    listKind: MedusaBackupJobList
    plural: medusabackupjobs
    singular: medusabackupjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MedusaBackupJob is the Schema for the medusabackupjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MedusaBackupJobSpec defines the desired state of MedusaBackupJob
            properties:
              backupType:
                default: differential
                description: 'The type of the backup: "full" or "differential"'
                enum:
                - differential
                - full
                type: string
              cassandraDatacenter:
                description: The name of the CassandraDatacenter to back up
                minLength: 1
                type: string
            required:
            - cassandraDatacenter
            type: object
          status:
            description: MedusaBackupJobStatus defines the observed state of MedusaBackupJob
            properties:
              failed:
                items:
                  type: string
                type: array
              finishTime:
                format: date-time
                type: string
              finished:
                items:
                  type: string
                type: array
              inProgress:
                items:
                  type: string
                type: array
              startTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: medusabackups.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: MedusaBackup
    listKind: MedusaBackupList
    plural: medusabackups
    singular: medusabackup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MedusaBackup is the Schema for the medusabackups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MedusaBackupSpec defines the desired state of MedusaBackup
            properties:
              backupType:
                default: differential
                description: 'The type of the backup: "full" or "differential"'
                enum:
                - differential
                - full
                type: string
              cassandraDatacenter:
                description: The name of the CassandraDatacenter to back up
                type: string
            required:
            - cassandraDatacenter
            type: object
          status:
            description: MedusaBackupStatus defines the observed state of MedusaBackup
            properties:
              finishTime:
                format: date-time
                type: string
              startTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: medusabackupschedules.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: MedusaBackupSchedule
    listKind: MedusaBackupScheduleList
    plural: medusabackupschedules
    singular: medusabackupschedule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Datacenter which the task targets
      jsonPath: .spec.backupSpec.cassandraDatacenter
      name: Datacenter
      type: string
    - description: Next scheduled execution time
      jsonPath: .status.nextSchedule
      name: ScheduledExecution
      type: date
    - description: Previous execution time
      jsonPath: .status.lastExecution
      name: LastExecution
      type: date
    - description: Type of backup
      jsonPath: .spec.backupSpec.backupType
      name: BackupType
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MedusaBackupSchedule is the Schema for the medusabackupschedules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MedusaBackupScheduleSpec defines the desired state of MedusaBackupSchedule
            properties:
              backupSpec:
                description: BackupSpec defines the CassandraBackup to be created
                  for this job
                properties:
                  backupType:
                    default: differential
                    description: 'The type of the backup: "full" or "differential"'
                    enum:
                    - differential
                    - full
                    type: string
                  cassandraDatacenter:
                    description: The name of the CassandraDatacenter to back up
                    minLength: 1
                    type: string
                required:
                - cassandraDatacenter
                type: object
              cronSchedule:
                description: CronSchedule is a cronjob format schedule for backups.
                  Overrides any easier methods of defining the schedule
                minLength: 1
                type: string
              disabled:
                description: Disabled if set ensures this job is not scheduling anything
                type: boolean
            required:
            - backupSpec
            - cronSchedule
            type: object
          status:
            description: MedusaBackupScheduleStatus defines the observed state of
              MedusaBackupSchedule
            properties:
              lastExecution:
                description: LastExecution tells when the backup was last time taken.
                  If empty, the backup has never been taken
                format: date-time
                type: string
              nextSchedule:
                description: NextSchedule indicates when the next backup is going
                  to be done
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: medusarestorejobs.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: MedusaRestoreJob
    listKind: MedusaRestoreJobList
    plural: medusarestorejobs
    singular: medusarestorejob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MedusaRestoreJob is the Schema for the medusarestorejobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MedusaRestoreJobSpec defines the desired state of MedusaRestoreJob
            properties:
              backup:
                description: The name of the CassandraBackup to restore.
                type: string
              cassandraDatacenter:
                description: Name of the Cassandra datacenter to perform the restore
                  on.
                type: string
            required:
            - backup
            - cassandraDatacenter
            type: object
          status:
            description: MedusaRestoreJobStatus defines the observed state of MedusaRestoreJob
            properties:
              datacenterStopped:
                format: date-time
                type: string
              failed:
                items:
                  type: string
                type: array
              finishTime:
                format: date-time
                type: string
              finished:
                items:
                  type: string
                type: array
              inProgress:
                items:
                  type: string
                type: array
              restoreKey:
                description: A unique key that identifies the restore operation.
                type: string
              restorePrepared:
                type: boolean
              startTime:
                format: date-time
                type: string
            required:
            - restoreKey
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: medusatasks.medusa.k8ssandra.io
spec:
  group: medusa.k8ssandra.io
  names:
    kind: MedusaTask
    listKind: MedusaTaskList
    plural: medusatasks
    singular: medusatask
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MedusaTask is the Schema for the MedusaTasks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MedusaTaskSpec defines the desired state of MedusaTask
            properties:
              backupName:
                description: Name of the backup. Will be necessary for operations
                  such as verify or status.
                type: string
              cassandraDatacenter:
                description: The name of the CassandraDatacenter to run the task on
                type: string
              operation:
                description: Requested operation to perform.
                enum:
                - sync
                - purge
                - prepare_restore
                type: string
              restoreKey:
                description: Restore key to use for the prepare_restore operation.
                type: string
            required:
            - cassandraDatacenter
            type: object
          status:
            description: MedusaTaskStatus defines the observed state of MedusaTask
            properties:
              failed:
                items:
                  type: string
                type: array
              finishTime:
                format: date-time
                type: string
              finished:
                items:
                  properties:
                    nbBackupsPurged:
                      description: Number of backups that were purged. Only populated
                        for purge tasks.
                      type: integer
                    nbObjectsPurged:
                      description: Number of objects/files that were purged. Only
                        populated for purge tasks.
                      type: integer
                    podName:
                      description: Name of the pod that ran the task. Always populated.
                      type: string
                    totalObjectsWithinGcGrace:
                      description: Number of objects that couldn't be deleted due
                        to Medusa GC grace. Only populated for purge tasks.
                      type: integer
                    totalPurgedSize:
                      description: Total size of purged files. Only populated for
                        purge tasks.
                      type: integer
                  type: object
                type: array
              inProgress:
                items:
                  type: string
                type: array
              startTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: reapers.reaper.k8ssandra.io
spec:
  group: reaper.k8ssandra.io
  names:
    kind: Reaper
    listKind: ReaperList
    plural: reapers
    singular: reaper
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.datacenterRef.name
      name: DC
      type: string
    - jsonPath: .status.progress
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Reaper is the Schema for the reapers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReaperSpec defines the desired state of Reaper
            properties:
              ServiceAccountName:
                default: default
                type: string
              affinity:
                description: Affinity applied to the Reaper pods.
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to a pod label update), the system may or may
                          not try to eventually evict the pod from its node. When
                          there are multiple elements, the lists of nodes corresponding
                          to each podAffinityTerm are intersected, i.e. all terms
                          must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                                This field is beta-level and is only honored when
                                PodAffinityNamespaceSelector feature is enabled.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the anti-affinity expressions specified
                          by this field, but it may choose a node that violates one
                          or more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the anti-affinity requirements specified by
                          this field are not met at scheduling time, the pod will
                          not be scheduled onto the node. If the anti-affinity requirements
                          specified by this field cease to be met at some point during
                          pod execution (e.g. due to a pod label update), the system
                          may or may not try to eventually evict the pod from its
                          node. When there are multiple elements, the lists of nodes
                          corresponding to each podAffinityTerm are intersected, i.e.
                          all terms must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                                This field is beta-level and is only honored when
                                PodAffinityNamespaceSelector feature is enabled.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              autoScheduling:
                description: Auto scheduling properties. When you enable the auto-schedule
                  feature, Reaper dynamically schedules repairs for all non-system
                  keyspaces in a cluster. A cluster's keyspaces are monitored and
                  any modifications (additions or removals) are detected. When a new
                  keyspace is created, a new repair schedule is created automatically
                  for that keyspace. Conversely, when a keyspace is removed, the corresponding
                  repair schedule is deleted.
                properties:
                  enabled:
                    default: false
                    type: boolean
                  excludedClusters:
                    description: ExcludedClusters are the clusters that are to be
                      excluded from the repair schedule.
                    items:
                      type: string
                    type: array
                  excludedKeyspaces:
                    description: ExcludedKeyspaces are the keyspaces that are to be
                      excluded from the repair schedule.
                    items:
                      type: string
                    type: array
                  initialDelayPeriod:
                    default: PT15S
                    description: InitialDelay is the amount of delay time before the
                      schedule period starts. Must be a valid ISO-8601 duration string.
                      The default is "PT15S" (15 seconds).
                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                    type: string
                  percentUnrepairedThreshold:
                    default: 10
                    description: PercentUnrepairedThreshold is the percentage of unrepaired
                      data over which an incremental repair should be started. Only
                      relevant when using repair type INCREMENTAL.
                    maximum: 100
                    minimum: 0
                    type: integer
                  periodBetweenPolls:
                    default: PT10M
                    description: PeriodBetweenPolls is the interval time to wait before
                      checking whether to start a repair task. Must be a valid ISO-8601
                      duration string. The default is "PT10M" (10 minutes).
                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                    type: string
                  repairType:
                    default: AUTO
                    description: 'RepairType is the type of repair to create: - REGULAR
                      creates a regular repair (non-adaptive and non-incremental);
                      - ADAPTIVE creates an adaptive repair; adaptive repairs are
                      most suited for Cassandra 3. - INCREMENTAL creates an incremental
                      repair; incremental repairs should only be used with Cassandra
                      4+. - AUTO chooses between ADAPTIVE and INCREMENTAL depending
                      on the Cassandra server version; ADAPTIVE for Cassandra 3 and
                      INCREMENTAL for Cassandra 4+.'
                    enum:
                    - REGULAR
                    - ADAPTIVE
                    - INCREMENTAL
                    - AUTO
                    type: string
                  scheduleSpreadPeriod:
                    default: PT6H
                    description: ScheduleSpreadPeriod is the time spacing between
                      each of the repair schedules that is to be carried out. Must
                      be a valid ISO-8601 duration string. The default is "PT6H" (6
                      hours).
                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                    type: string
                  timeBeforeFirstSchedule:
                    default: PT5M
                    description: TimeBeforeFirstSchedule is the grace period before
                      the first repair in the schedule is started. Must be a valid
                      ISO-8601 duration string. The default is "PT5M" (5 minutes).
                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                    type: string
                type: object
              cassandraUserSecretRef:
                description: 'Defines the username and password that Reaper will use
                  to authenticate CQL connections to Cassandra clusters. These credentials
                  will be automatically turned into CQL roles by cass-operator when
                  bootstrapping the datacenter, then passed to the Reaper instance,
                  so that it can authenticate against nodes in the datacenter using
                  CQL. If CQL authentication is not required, leave this field empty.
                  The secret must be in the same namespace as Reaper itself and must
                  contain two keys: "username" and "password".'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              clientEncryptionStores:
                description: Client encryption stores which are used by Cassandra
                  and Reaper.
                properties:
                  keystoreSecretRef:
                    description: ref to the secret that contains the keystore and
                      its password the expected format of the secret is a "keystore"
                      entry and a "keystore-password" entry
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  truststoreSecretRef:
                    description: ref to the secret that contains the truststore and
                      its password the expected format of the secret is a "truststore"
                      entry and a "truststore-password" entry
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                required:
                - keystoreSecretRef
                - truststoreSecretRef
                type: object
              containerImage:
                default:
                  name: cassandra-reaper
                  repository: thelastpickle
                  tag: 3.2.0
                description: The image to use for the Reaper pod main container. The
                  default is "thelastpickle/cassandra-reaper:3.2.0".
                properties:
                  name:
                    description: The image name to use.
                    type: string
                  pullPolicy:
                    description: The image pull policy to use. Defaults to "Always"
                      if the tag is "latest", otherwise to "IfNotPresent".
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  pullSecretRef:
                    description: 'The secret to use when pulling the image from private
                      repositories. If specified, this secret will be passed to individual
                      puller implementations for them to use. For example, in the
                      case of Docker, only DockerConfig type secrets are honored.
                      More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registry:
                    default: docker.io
                    description: The Docker registry to use. Defaults to "docker.io",
                      the official Docker Hub.
                    type: string
                  repository:
                    description: The Docker repository to use.
                    type: string
                  tag:
                    default: latest
                    description: The image tag to use. Defaults to "latest".
                    type: string
                type: object
              datacenterAvailability:
                default: ALL
                description: DatacenterAvailability indicates to Reaper its deployment
                  in relation to the target datacenter's network. For single-DC clusters,
                  the default (ALL) is fine. For multi-DC clusters, it is recommended
                  to use EACH, provided that there is one Reaper instance managing
                  each DC in the cluster; otherwise, if one single Reaper instance
                  is going to manage more than one DC in the cluster, use ALL. See
                  https://cassandra-reaper.io/docs/usage/multi_dc/.
                enum:
                - LOCAL
                - ALL
                - EACH
                type: string
              datacenterRef:
                description: DatacenterRef is the reference of a CassandraDatacenter
                  resource that this Reaper instance should manage. It will also be
                  used as the backend for persisting Reaper's state. Reaper must be
                  able to access the JMX port (7199 by default) and the CQL port (9042
                  by default) on this DC.
                properties:
                  name:
                    description: The datacenter name.
                    type: string
                  namespace:
                    description: The datacenter namespace. If empty, the datacenter
                      will be assumed to reside in the same namespace as the Reaper
                      instance.
                    type: string
                required:
                - name
                type: object
              heapSize:
                anyOf:
                - type: integer
                - type: string
                default: 2Gi
                description: HeapSize sets the JVM heap size to use for Reaper.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              initContainerImage:
                default:
                  name: cassandra-reaper
                  repository: thelastpickle
                  tag: 3.2.0
                description: The image to use for the Reaper pod init container (that
                  performs schema migrations). The default is "thelastpickle/cassandra-reaper:3.2.0".
                properties:
                  name:
                    description: The image name to use.
                    type: string
                  pullPolicy:
                    description: The image pull policy to use. Defaults to "Always"
                      if the tag is "latest", otherwise to "IfNotPresent".
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  pullSecretRef:
                    description: 'The secret to use when pulling the image from private
                      repositories. If specified, this secret will be passed to individual
                      puller implementations for them to use. For example, in the
                      case of Docker, only DockerConfig type secrets are honored.
                      More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registry:
                    default: docker.io
                    description: The Docker registry to use. Defaults to "docker.io",
                      the official Docker Hub.
                    type: string
                  repository:
                    description: The Docker repository to use.
                    type: string
                  tag:
                    default: latest
                    description: The image tag to use. Defaults to "latest".
                    type: string
                type: object
              initContainerResources:
                description: Init Container resources.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              initContainerSecurityContext:
                description: InitContainerSecurityContext is the SecurityContext applied
                  to the Reaper init container, used to perform schema migrations.
                properties:
                  allowPrivilegeEscalation:
                    description: 'AllowPrivilegeEscalation controls whether a process
                      can gain more privileges than its parent process. This bool
                      directly controls if the no_new_privs flag will be set on the
                      container process. AllowPrivilegeEscalation is true always when
                      the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
                      Note that this field cannot be set when spec.os.name is windows.'
                    type: boolean
                  capabilities:
                    description: The capabilities to add/drop when running containers.
                      Defaults to the default set of capabilities granted by the container
                      runtime. Note that this field cannot be set when spec.os.name
                      is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: Run container in privileged mode. Processes in privileged
                      containers are essentially equivalent to root on the host. Defaults
                      to false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  procMount:
                    description: procMount denotes the type of proc mount to use for
                      the containers. The default is DefaultProcMount which uses the
                      container runtime defaults for readonly paths and masked paths.
                      This requires the ProcMountType feature flag to be enabled.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: Whether this container has a read-only root filesystem.
                      Default is false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  runAsGroup:
                    description: The GID to run the entrypoint of the container process.
                      Uses runtime default if unset. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: Indicates that the container must run as a non-root
                      user. If true, the Kubelet will validate the image at runtime
                      to ensure that it does not run as UID 0 (root) and fail to start
                      the container if it does. If unset or false, no such validation
                      will be performed. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in PodSecurityContext.  If set in both SecurityContext
                      and PodSecurityContext, the value specified in SecurityContext
                      takes precedence. Note that this field cannot be set when spec.os.name
                      is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: The SELinux context to be applied to the container.
                      If unspecified, the container runtime will allocate a random
                      SELinux context for each container.  May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: The seccomp options to use by this container. If
                      seccomp options are provided at both the pod & container level,
                      the container options override the pod options. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: localhostProfile indicates a profile defined
                          in a file on the node should be used. The profile must be
                          preconfigured on the node to work. Must be a descending
                          path, relative to the kubelet's configured seccomp profile
                          location. Must only be set if type is "Localhost".
                        type: string
                      type:
                        description: "type indicates which kind of seccomp profile
                          will be applied. Valid options are: \n Localhost - a profile
                          defined in a file on the node should be used. RuntimeDefault
                          - the container runtime default profile should be used.
                          Unconfined - no profile should be applied."
                        type: string
                    required:
                    - type
                    type: object
                  windowsOptions:
                    description: The Windows specific settings applied to all containers.
                      If unspecified, the options from the PodSecurityContext will
                      be used. If set in both SecurityContext and PodSecurityContext,
                      the value specified in SecurityContext takes precedence. Note
                      that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: GMSACredentialSpec is where the GMSA admission
                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                          inlines the contents of the GMSA credential spec named by
                          the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: HostProcess determines if a container should
                          be run as a 'Host Process' container. This field is alpha-level
                          and will only be honored by components that enable the WindowsHostProcessContainers
                          feature flag. Setting this field without the feature flag
                          will result in errors when validating the Pod. All of a
                          Pod's containers must have the same effective HostProcess
                          value (it is not allowed to have a mix of HostProcess containers
                          and non-HostProcess containers).  In addition, if HostProcess
                          is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: The UserName in Windows to run the entrypoint
                          of the container process. Defaults to the user specified
                          in image metadata if unspecified. May also be set in PodSecurityContext.
                          If set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              jmxUserSecretRef:
                description: 'Defines the username and password that Reaper will use
                  to authenticate JMX connections to Cassandra clusters. These credentials
                  will be automatically passed to each Cassandra node in the datacenter,
                  as well as to the Reaper instance, so that the latter can authenticate
                  against the former. If JMX authentication is not required, leave
                  this field empty. The secret must be in the same namespace as Reaper
                  itself and must contain two keys: "username" and "password".'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              keyspace:
                default: reaper_db
                description: The keyspace to use to store Reaper's state. Will default
                  to "reaper_db" if unspecified. Will be created if it does not exist,
                  and if this Reaper resource is managed by K8ssandra.
                type: string
              livenessProbe:
                description: LivenessProbe sets the Reaper liveness probe. Leave nil
                  to use defaults.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port. This
                      is an alpha field and requires enabling GRPCContainerProbe feature
                      gate.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: "Service is the name of the service to place
                          in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                          \n If this is not specified, the default behavior is defined
                          by gRPC."
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              podSecurityContext:
                description: PodSecurityContext contains a pod-level SecurityContext
                  to apply to Reaper pods.
                properties:
                  fsGroup:
                    description: "A special supplemental group that applies to all
                      containers in a pod. Some volume types allow the Kubelet to
                      change the ownership of that volume to be owned by the pod:
                      \n 1. The owning GID will be the FSGroup 2. The setgid bit is
                      set (new files created in the volume will be owned by FSGroup)
                      3. The permission bits are OR'd with rw-rw---- \n If unset,
                      the Kubelet will not modify the ownership and permissions of
                      any volume. Note that this field cannot be set when spec.os.name
                      is windows."
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: 'fsGroupChangePolicy defines behavior of changing
                      ownership and permission of the volume before being exposed
                      inside Pod. This field will only apply to volume types which
                      support fsGroup based ownership(and permissions). It will have
                      no effect on ephemeral volume types such as: secret, configmaps
                      and emptydir. Valid values are "OnRootMismatch" and "Always".
                      If not specified, "Always" is used. Note that this field cannot
                      be set when spec.os.name is windows.'
                    type: string
                  runAsGroup:
                    description: The GID to run the entrypoint of the container process.
                      Uses runtime default if unset. May also be set in SecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: Indicates that the container must run as a non-root
                      user. If true, the Kubelet will validate the image at runtime
                      to ensure that it does not run as UID 0 (root) and fail to start
                      the container if it does. If unset or false, no such validation
                      will be performed. May also be set in SecurityContext.  If set
                      in both SecurityContext and PodSecurityContext, the value specified
                      in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in SecurityContext.  If set in both SecurityContext
                      and PodSecurityContext, the value specified in SecurityContext
                      takes precedence for that container. Note that this field cannot
                      be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: The SELinux context to be applied to all containers.
                      If unspecified, the container runtime will allocate a random
                      SELinux context for each container.  May also be set in SecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: The seccomp options to use by the containers in this
                      pod. Note that this field cannot be set when spec.os.name is
                      windows.
                    properties:
                      localhostProfile:
                        description: localhostProfile indicates a profile defined
                          in a file on the node should be used. The profile must be
                          preconfigured on the node to work. Must be a descending
                          path, relative to the kubelet's configured seccomp profile
                          location. Must only be set if type is "Localhost".
                        type: string
                      type:
                        description: "type indicates which kind of seccomp profile
                          will be applied. Valid options are: \n Localhost - a profile
                          defined in a file on the node should be used. RuntimeDefault
                          - the container runtime default profile should be used.
                          Unconfined - no profile should be applied."
                        type: string
                    required:
                    - type
                    type: object
                  supplementalGroups:
                    description: A list of groups applied to the first process run
                      in each container, in addition to the container's primary GID.  If
                      unspecified, no groups will be added to any container. Note
                      that this field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                  sysctls:
                    description: Sysctls hold a list of namespaced sysctls used for
                      the pod. Pods with unsupported sysctls (by the container runtime)
                      might fail to launch. Note that this field cannot be set when
                      spec.os.name is windows.
                    items:
                      description: Sysctl defines a kernel parameter to be set
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  windowsOptions:
                    description: The Windows specific settings applied to all containers.
                      If unspecified, the options within a container's SecurityContext
                      will be used. If set in both SecurityContext and PodSecurityContext,
                      the value specified in SecurityContext takes precedence. Note
                      that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: GMSACredentialSpec is where the GMSA admission
                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                          inlines the contents of the GMSA credential spec named by
                          the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: HostProcess determines if a container should
                          be run as a 'Host Process' container. This field is alpha-level
                          and will only be honored by components that enable the WindowsHostProcessContainers
                          feature flag. Setting this field without the feature flag
                          will result in errors when validating the Pod. All of a
                          Pod's containers must have the same effective HostProcess
                          value (it is not allowed to have a mix of HostProcess containers
                          and non-HostProcess containers).  In addition, if HostProcess
                          is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: The UserName in Windows to run the entrypoint
                          of the container process. Defaults to the user specified
                          in image metadata if unspecified. May also be set in PodSecurityContext.
                          If set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              readinessProbe:
                description: ReadinessProbe sets the Reaper readiness probe. Leave
                  nil to use defaults.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port. This
                      is an alpha field and requires enabling GRPCContainerProbe feature
                      gate.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: "Service is the name of the service to place
                          in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                          \n If this is not specified, the default behavior is defined
                          by gRPC."
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              resources:
                description: Main Container resources.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              securityContext:
                description: SecurityContext applied to the Reaper main container.
                properties:
                  allowPrivilegeEscalation:
                    description: 'AllowPrivilegeEscalation controls whether a process
                      can gain more privileges than its parent process. This bool
                      directly controls if the no_new_privs flag will be set on the
                      container process. AllowPrivilegeEscalation is true always when
                      the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
                      Note that this field cannot be set when spec.os.name is windows.'
                    type: boolean
                  capabilities:
                    description: The capabilities to add/drop when running containers.
                      Defaults to the default set of capabilities granted by the container
                      runtime. Note that this field cannot be set when spec.os.name
                      is windows.
                    properties:
                      add:
                        description: Added capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                      drop:
                        description: Removed capabilities
                        items:
                          description: Capability represent POSIX capabilities type
                          type: string
                        type: array
                    type: object
                  privileged:
                    description: Run container in privileged mode. Processes in privileged
                      containers are essentially equivalent to root on the host. Defaults
                      to false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  procMount:
                    description: procMount denotes the type of proc mount to use for
                      the containers. The default is DefaultProcMount which uses the
                      container runtime defaults for readonly paths and masked paths.
                      This requires the ProcMountType feature flag to be enabled.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  readOnlyRootFilesystem:
                    description: Whether this container has a read-only root filesystem.
                      Default is false. Note that this field cannot be set when spec.os.name
                      is windows.
                    type: boolean
                  runAsGroup:
                    description: The GID to run the entrypoint of the container process.
                      Uses runtime default if unset. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: Indicates that the container must run as a non-root
                      user. If true, the Kubelet will validate the image at runtime
                      to ensure that it does not run as UID 0 (root) and fail to start
                      the container if it does. If unset or false, no such validation
                      will be performed. May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in PodSecurityContext.  If set in both SecurityContext
                      and PodSecurityContext, the value specified in SecurityContext
                      takes precedence. Note that this field cannot be set when spec.os.name
                      is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: The SELinux context to be applied to the container.
                      If unspecified, the container runtime will allocate a random
                      SELinux context for each container.  May also be set in PodSecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: The seccomp options to use by this container. If
                      seccomp options are provided at both the pod & container level,
                      the container options override the pod options. Note that this
                      field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: localhostProfile indicates a profile defined
                          in a file on the node should be used. The profile must be
                          preconfigured on the node to work. Must be a descending
                          path, relative to the kubelet's configured seccomp profile
                          location. Must only be set if type is "Localhost".
                        type: string
                      type:
                        description: "type indicates which kind of seccomp profile
                          will be applied. Valid options are: \n Localhost - a profile
                          defined in a file on the node should be used. RuntimeDefault
                          - the container runtime default profile should be used.
                          Unconfined - no profile should be applied."
                        type: string
                    required:
                    - type
                    type: object
                  windowsOptions:
                    description: The Windows specific settings applied to all containers.
                      If unspecified, the options from the PodSecurityContext will
                      be used. If set in both SecurityContext and PodSecurityContext,
                      the value specified in SecurityContext takes precedence. Note
                      that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: GMSACredentialSpec is where the GMSA admission
                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                          inlines the contents of the GMSA credential spec named by
                          the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: HostProcess determines if a container should
                          be run as a 'Host Process' container. This field is alpha-level
                          and will only be honored by components that enable the WindowsHostProcessContainers
                          feature flag. Setting this field without the feature flag
                          will result in errors when validating the Pod. All of a
                          Pod's containers must have the same effective HostProcess
                          value (it is not allowed to have a mix of HostProcess containers
                          and non-HostProcess containers).  In addition, if HostProcess
                          is true then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: The UserName in Windows to run the entrypoint
                          of the container process. Defaults to the user specified
                          in image metadata if unspecified. May also be set in PodSecurityContext.
                          If set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              skipSchemaMigration:
                default: false
                description: Whether to skip schema migration. Schema migration is
                  done in an init container on every Reaper deployment and can slow
                  down Reaper's startup time. Besides, schema migration requires reading
                  data at QUORUM. It can be skipped if you know that the schema is
                  already up-to-date, or if you know upfront that QUORUM cannot be
                  achieved (for example, because a DC is down).
                type: boolean
              telemetry:
                description: Telemetry defines the desired telemetry integrations
                  to deploy targeting the Reaper pods for all DCs in this cluster
                  (unless overriden by DC specific settings)
                properties:
                  mcac:
                    properties:
                      metricFilters:
                        description: 'MetricFilters allows passing filters to MCAC
                          in order to reduce the amount of extracted metrics. Not
                          setting this field will result in the default filters being
                          used. Setting it to an empty list will result in all metrics
                          being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                          - "deny:org.apache.cassandra.metrics.table" - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                          - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                          - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                        items:
                          type: string
                        type: array
                    type: object
                  prometheus:
                    properties:
                      commonLabels:
                        additionalProperties:
                          type: string
                        description: CommonLabels are applied to all serviceMonitors
                          created.
                        type: object
                      enabled:
                        description: Enable the creation of Prometheus serviceMonitors
                          for this resource (Cassandra or Stargate).
                        type: boolean
                    type: object
                type: object
              tolerations:
                description: Tolerations applied to the Reaper pods.
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              uiUserSecretRef:
                description: Defines the secret which contains the username and password
                  for the Reaper UI and REST API authentication.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            required:
            - datacenterRef
            type: object
          status:
            description: ReaperStatus defines the observed state of Reaper
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transited from one status to another.
                      format: date-time
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              progress:
                description: Progress is the progress of this Reaper object.
                enum:
                - Pending
                - Deploying
                - Configuring
                - Running
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: replicatedsecrets.replication.k8ssandra.io
spec:
  group: replication.k8ssandra.io
  names:
    kind: ReplicatedSecret
    listKind: ReplicatedSecretList
    plural: replicatedsecrets
    singular: replicatedsecret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReplicatedSecret is the Schema for the replicatedsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReplicatedSecretSpec defines the desired state of ReplicatedSecret
            properties:
              replicationTargets:
                description: TargetContexts indicates the target clusters to which
                  the secrets are replicated to. If empty, no clusters are targeted
                items:
                  properties:
                    k8sContextName:
                      description: K8sContextName defines the target cluster name
                        as set in the ClientConfig. If left empty, current cluster
                        is assumed
                      type: string
                    namespace:
                      description: TODO Implement at some point Namespace to replicate
                        the data to in the target cluster. If left empty, current
                        namespace is used.
                      type: string
                  type: object
                type: array
              selector:
                description: Selector defines which secrets are replicated. If left
                  empty, all the secrets are replicated
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
          status:
            description: ReplicatedSecretStatus defines the observed state of ReplicatedSecret
            properties:
              conditions:
                items:
                  properties:
                    cluster:
                      description: Cluster
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transited from one status to another.
                      format: date-time
                      type: string
                    status:
                      description: Status of the replication to target cluster
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - cluster
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: stargates.stargate.k8ssandra.io
spec:
  group: stargate.k8ssandra.io
  names:
    kind: Stargate
    listKind: StargateList
    plural: stargates
    singular: stargate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.datacenterRef.name
      name: DC
      type: string
    - jsonPath: .status.progress
      name: Status
      type: string
    - jsonPath: .status.readyReplicasRatio
      name: Ready
      type: string
    - jsonPath: .status.updatedReplicas
      name: Up-to-date
      type: integer
    - jsonPath: .status.availableReplicas
      name: Available
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Stargate is the Schema for the stargates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of this Stargate resource.
            properties:
              affinity:
                description: Affinity is the affinity to apply to all the Stargate
                  pods. Leave nil to let the controller reuse the same affinity rules
                  used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to a pod label update), the system may or may
                          not try to eventually evict the pod from its node. When
                          there are multiple elements, the lists of nodes corresponding
                          to each podAffinityTerm are intersected, i.e. all terms
                          must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                                This field is beta-level and is only honored when
                                PodAffinityNamespaceSelector feature is enabled.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the anti-affinity expressions specified
                          by this field, but it may choose a node that violates one
                          or more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces. This field is beta-level
                                    and is only honored when PodAffinityNamespaceSelector
                                    feature is enabled.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the anti-affinity requirements specified by
                          this field are not met at scheduling time, the pod will
                          not be scheduled onto the node. If the anti-affinity requirements
                          specified by this field cease to be met at some point during
                          pod execution (e.g. due to a pod label update), the system
                          may or may not try to eventually evict the pod from its
                          node. When there are multiple elements, the lists of nodes
                          corresponding to each podAffinityTerm are intersected, i.e.
                          all terms must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                                This field is beta-level and is only honored when
                                PodAffinityNamespaceSelector feature is enabled.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              allowStargateOnDataNodes:
                default: false
                description: 'AllowStargateOnDataNodes allows Stargate pods to be
                  scheduled on a worker node already hosting data pods for this datacenter.
                  The default is false, which means that Stargate pods will be scheduled
                  on separate worker nodes. Note: if the datacenter pods have HostNetwork:true,
                  then the Stargate pods will inherit of it, in which case it is possible
                  that Stargate nodes won''t be allowed to sit on data nodes even
                  if this property is set to true, because of port conflicts on the
                  same IP address.'
                type: boolean
              auth:
                default: true
                description: Whether to enable authentication for Stargate. The default
                  is true; it is highly recommended to always leave authentication
                  turned on, not only on Stargate nodes, but also on data nodes as
                  well. Note that Stargate REST APIs are currently only accessible
                  if authentication is enabled, and if the authenticator in use in
                  the whole cluster is PasswordAuthenticator. The usage of any other
                  authenticator will cause the REST API to become inaccessible, see
                  https://github.com/stargate/stargate/issues/792 for more. Stargate
                  CQL API however remains accessible even if authentication is disabled
                  in the cluster, or when a custom authenticator is being used.
                type: boolean
              authOptions:
                description: Authentication options.
                properties:
                  apiAuthMethod:
                    default: Table
                    description: 'The method to use for authenticating requests to
                      the Stargate APIs. Stargate currently has two authentication
                      / authorization methods: - Table: table-based; - JWT: JSON web
                      token (JWT)-based. The methods are mutually exclusive. The default
                      method is Table.'
                    enum:
                    - Table
                    - JWT
                    type: string
                  providerUrl:
                    description: Required when using JWT authentication method, ignored
                      otherwise.
                    type: string
                  tokenTtlSeconds:
                    description: The time-to-live in seconds of an API authentication
                      token. Valid only for the Table authentication method. By default,
                      the token persists for 30 minutes with a sliding window. Each
                      use of the token to authenticate resets the 30-minute window.
                      A token created and used after 29 minutes will authenticate
                      a request, but if 31 minutes passes before use, the token will
                      no longer exist. Default is 1800 seconds (30 minutes).
                    minimum: 1
                    type: integer
                type: object
              cassandraConfigMapRef:
                description: CassandraConfigMapRef is a reference to a ConfigMap that
                  holds Cassandra configuration. The map should have a key named cassandra_yaml.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              cassandraEncryption:
                description: CassandraEncryption groups together encryption stores
                  that are passed to the Stargate pods, so that they can be mounted
                  as volumes.
                properties:
                  clientEncryptionStores:
                    description: Client encryption stores which are used by Cassandra
                      and Reaper.
                    properties:
                      keystoreSecretRef:
                        description: ref to the secret that contains the keystore
                          and its password the expected format of the secret is a
                          "keystore" entry and a "keystore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      truststoreSecretRef:
                        description: ref to the secret that contains the truststore
                          and its password the expected format of the secret is a
                          "truststore" entry and a "truststore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - keystoreSecretRef
                    - truststoreSecretRef
                    type: object
                  serverEncryptionStores:
                    description: Internode encryption stores which are used by Cassandra
                      and Stargate.
                    properties:
                      keystoreSecretRef:
                        description: ref to the secret that contains the keystore
                          and its password the expected format of the secret is a
                          "keystore" entry and a "keystore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      truststoreSecretRef:
                        description: ref to the secret that contains the truststore
                          and its password the expected format of the secret is a
                          "truststore" entry and a "truststore-password" entry
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - keystoreSecretRef
                    - truststoreSecretRef
                    type: object
                type: object
              containerImage:
                default:
                  repository: stargateio
                  tag: v1.0.45
                description: ContainerImage is the image characteristics to use for
                  Stargate containers. Leave nil to use a default image.
                properties:
                  name:
                    description: The image name to use.
                    type: string
                  pullPolicy:
                    description: The image pull policy to use. Defaults to "Always"
                      if the tag is "latest", otherwise to "IfNotPresent".
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  pullSecretRef:
                    description: 'The secret to use when pulling the image from private
                      repositories. If specified, this secret will be passed to individual
                      puller implementations for them to use. For example, in the
                      case of Docker, only DockerConfig type secrets are honored.
                      More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  registry:
                    default: docker.io
                    description: The Docker registry to use. Defaults to "docker.io",
                      the official Docker Hub.
                    type: string
                  repository:
                    description: The Docker repository to use.
                    type: string
                  tag:
                    default: latest
                    description: The image tag to use. Defaults to "latest".
                    type: string
                type: object
              datacenterRef:
                description: DatacenterRef is the namespace-local reference of a CassandraDatacenter
                  resource where Stargate should be deployed.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              heapSize:
                anyOf:
                - type: integer
                - type: string
                default: 256Mi
                description: 'HeapSize sets the JVM heap size to use for Stargate.
                  If no Resources are specified, this value will also be used to set
                  a default memory request and limit for the Stargate pods: these
                  will be set to HeapSize x2 and x4, respectively.'
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              livenessProbe:
                description: LivenessProbe sets the Stargate liveness probe. Leave
                  nil to use defaults.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port. This
                      is an alpha field and requires enabling GRPCContainerProbe feature
                      gate.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: "Service is the name of the service to place
                          in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                          \n If this is not specified, the default behavior is defined
                          by gRPC."
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector is an optional map of label keys and values
                  to restrict the scheduling of Stargate nodes to workers with matching
                  labels. Leave nil to let the controller reuse the same node selectors
                  used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                type: object
              racks:
                description: Racks allow customizing Stargate characteristics for
                  specific racks in the datacenter.
                items:
                  description: StargateRackTemplate defines custom rules for Stargate
                    pods in a given rack. These rules will be merged with rules defined
                    at datacenter level in a StargateDatacenterTemplate; rack-level
                    rules have precedence over datacenter-level ones.
                  properties:
                    affinity:
                      description: Affinity is the affinity to apply to all the Stargate
                        pods. Leave nil to let the controller reuse the same affinity
                        rules used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                      properties:
                        nodeAffinity:
                          description: Describes node affinity scheduling rules for
                            the pod.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e. it's a
                                  no-op). A null preferred scheduling term matches
                                  no objects (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated
                                      with the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If
                                                the operator is Exists or DoesNotExist,
                                                the values array must be empty. If
                                                the operator is Gt or Lt, the values
                                                array must have a single element,
                                                which will be interpreted as an integer.
                                                This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If
                                                the operator is Exists or DoesNotExist,
                                                the values array must be empty. If
                                                the operator is Gt or Lt, the values
                                                array must have a single element,
                                                which will be interpreted as an integer.
                                                This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range
                                      1-100.
                                    format: int32
                                    type: integer
                                required:
                                - preference
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified
                                by this field are not met at scheduling time, the
                                pod will not be scheduled onto the node. If the affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to an
                                update), the system may or may not try to eventually
                                evict the pod from its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: A null or empty node selector term
                                      matches no objects. The requirements of them
                                      are ANDed. The TopologySelectorTerm type implements
                                      a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If
                                                the operator is Exists or DoesNotExist,
                                                the values array must be empty. If
                                                the operator is Gt or Lt, the values
                                                array must have a single element,
                                                which will be interpreted as an integer.
                                                This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If
                                                the operator is Exists or DoesNotExist,
                                                the values array must be empty. If
                                                the operator is Gt or Lt, the values
                                                array must have a single element,
                                                which will be interpreted as an integer.
                                                This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              required:
                              - nodeSelectorTerms
                              type: object
                          type: object
                        podAffinity:
                          description: Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc. as some
                            other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the
                                corresponding podAffinityTerm; the node(s) with the
                                highest sum are the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of
                                          namespaces that the term applies to. The
                                          term is applied to the union of the namespaces
                                          selected by this field and the ones listed
                                          in the namespaces field. null selector and
                                          null or empty namespaces list means "this
                                          pod's namespace". An empty selector ({})
                                          matches all namespaces. This field is beta-level
                                          and is only honored when PodAffinityNamespaceSelector
                                          feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static
                                          list of namespace names that the term applies
                                          to. The term is applied to the union of
                                          the namespaces listed in this field and
                                          the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector
                                          means "this pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located
                                          (affinity) or not co-located (anti-affinity)
                                          with the pods matching the labelSelector
                                          in the specified namespaces, where co-located
                                          is defined as running on a node whose value
                                          of the label with key topologyKey matches
                                          that of any node on which any of the selected
                                          pods is running. Empty topologyKey is not
                                          allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range
                                      1-100.
                                    format: int32
                                    type: integer
                                required:
                                - podAffinityTerm
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified
                                by this field are not met at scheduling time, the
                                pod will not be scheduled onto the node. If the affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a
                                pod label update), the system may or may not try to
                                eventually evict the pod from its node. When there
                                are multiple elements, the lists of nodes corresponding
                                to each podAffinityTerm are intersected, i.e. all
                                terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces
                                      field. null selector and null or empty namespaces
                                      list means "this pod's namespace". An empty
                                      selector ({}) matches all namespaces. This field
                                      is beta-level and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces
                                      list and null namespaceSelector means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          description: Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node, zone, etc.
                            as some other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the anti-affinity expressions
                                specified by this field, but it may choose a node
                                that violates one or more of the expressions. The
                                node that is most preferred is the one with the greatest
                                sum of weights, i.e. for each node that meets all
                                of the scheduling requirements (resource request,
                                requiredDuringScheduling anti-affinity expressions,
                                etc.), compute a sum by iterating through the elements
                                of this field and adding "weight" to the sum if the
                                node has pods which matches the corresponding podAffinityTerm;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of
                                          namespaces that the term applies to. The
                                          term is applied to the union of the namespaces
                                          selected by this field and the ones listed
                                          in the namespaces field. null selector and
                                          null or empty namespaces list means "this
                                          pod's namespace". An empty selector ({})
                                          matches all namespaces. This field is beta-level
                                          and is only honored when PodAffinityNamespaceSelector
                                          feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static
                                          list of namespace names that the term applies
                                          to. The term is applied to the union of
                                          the namespaces listed in this field and
                                          the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector
                                          means "this pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located
                                          (affinity) or not co-located (anti-affinity)
                                          with the pods matching the labelSelector
                                          in the specified namespaces, where co-located
                                          is defined as running on a node whose value
                                          of the label with key topologyKey matches
                                          that of any node on which any of the selected
                                          pods is running. Empty topologyKey is not
                                          allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range
                                      1-100.
                                    format: int32
                                    type: integer
                                required:
                                - podAffinityTerm
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the anti-affinity requirements specified
                                by this field are not met at scheduling time, the
                                pod will not be scheduled onto the node. If the anti-affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a
                                pod label update), the system may or may not try to
                                eventually evict the pod from its node. When there
                                are multiple elements, the lists of nodes corresponding
                                to each podAffinityTerm are intersected, i.e. all
                                terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or
                                  not co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any
                                  node on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces
                                      field. null selector and null or empty namespaces
                                      list means "this pod's namespace". An empty
                                      selector ({}) matches all namespaces. This field
                                      is beta-level and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces
                                      list and null namespaceSelector means "this
                                      pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              type: array
                          type: object
                      type: object
                    allowStargateOnDataNodes:
                      default: false
                      description: 'AllowStargateOnDataNodes allows Stargate pods
                        to be scheduled on a worker node already hosting data pods
                        for this datacenter. The default is false, which means that
                        Stargate pods will be scheduled on separate worker nodes.
                        Note: if the datacenter pods have HostNetwork:true, then the
                        Stargate pods will inherit of it, in which case it is possible
                        that Stargate nodes won''t be allowed to sit on data nodes
                        even if this property is set to true, because of port conflicts
                        on the same IP address.'
                      type: boolean
                    authOptions:
                      description: Authentication options.
                      properties:
                        apiAuthMethod:
                          default: Table
                          description: 'The method to use for authenticating requests
                            to the Stargate APIs. Stargate currently has two authentication
                            / authorization methods: - Table: table-based; - JWT:
                            JSON web token (JWT)-based. The methods are mutually exclusive.
                            The default method is Table.'
                          enum:
                          - Table
                          - JWT
                          type: string
                        providerUrl:
                          description: Required when using JWT authentication method,
                            ignored otherwise.
                          type: string
                        tokenTtlSeconds:
                          description: The time-to-live in seconds of an API authentication
                            token. Valid only for the Table authentication method.
                            By default, the token persists for 30 minutes with a sliding
                            window. Each use of the token to authenticate resets the
                            30-minute window. A token created and used after 29 minutes
                            will authenticate a request, but if 31 minutes passes
                            before use, the token will no longer exist. Default is
                            1800 seconds (30 minutes).
                          minimum: 1
                          type: integer
                      type: object
                    cassandraConfigMapRef:
                      description: CassandraConfigMapRef is a reference to a ConfigMap
                        that holds Cassandra configuration. The map should have a
                        key named cassandra_yaml.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    containerImage:
                      default:
                        repository: stargateio
                        tag: v1.0.45
                      description: ContainerImage is the image characteristics to
                        use for Stargate containers. Leave nil to use a default image.
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                          - Always
                          - IfNotPresent
                          - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                            private repositories. If specified, this secret will be
                            passed to individual puller implementations for them to
                            use. For example, in the case of Docker, only DockerConfig
                            type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    heapSize:
                      anyOf:
                      - type: integer
                      - type: string
                      default: 256Mi
                      description: 'HeapSize sets the JVM heap size to use for Stargate.
                        If no Resources are specified, this value will also be used
                        to set a default memory request and limit for the Stargate
                        pods: these will be set to HeapSize x2 and x4, respectively.'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    livenessProbe:
                      description: LivenessProbe sets the Stargate liveness probe.
                        Leave nil to use defaults.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                            This is an alpha field and requires enabling GRPCContainerProbe
                            feature gate.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: "Service is the name of the service to
                                place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                \n If this is not specified, the default behavior
                                is defined by gRPC."
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs
                            to terminate gracefully upon probe failure. The grace
                            period is the duration in seconds after the processes
                            running in the pod are sent a termination signal and the
                            time when the processes are forcibly halted with a kill
                            signal. Set this value longer than the expected cleanup
                            time for your process. If this value is nil, the pod's
                            terminationGracePeriodSeconds will be used. Otherwise,
                            this value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates
                            stop immediately via the kill signal (no opportunity to
                            shut down). This is a beta field and requires enabling
                            ProbeTerminationGracePeriod feature gate. Minimum value
                            is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: Name is the rack name. It must correspond to an
                        existing rack name in the CassandraDatacenter resource where
                        Stargate is being deployed, otherwise it will be ignored.
                      minLength: 2
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector is an optional map of label keys and
                        values to restrict the scheduling of Stargate nodes to workers
                        with matching labels. Leave nil to let the controller reuse
                        the same node selectors used for data pods in this datacenter,
                        if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                      type: object
                    readinessProbe:
                      description: ReadinessProbe sets the Stargate readiness probe.
                        Leave nil to use defaults.
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                            This is an alpha field and requires enabling GRPCContainerProbe
                            feature gate.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: "Service is the name of the service to
                                place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                \n If this is not specified, the default behavior
                                is defined by gRPC."
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs
                            to terminate gracefully upon probe failure. The grace
                            period is the duration in seconds after the processes
                            running in the pod are sent a termination signal and the
                            time when the processes are forcibly halted with a kill
                            signal. Set this value longer than the expected cleanup
                            time for your process. If this value is nil, the pod's
                            terminationGracePeriodSeconds will be used. Otherwise,
                            this value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates
                            stop immediately via the kill signal (no opportunity to
                            shut down). This is a beta field and requires enabling
                            ProbeTerminationGracePeriod feature gate. Minimum value
                            is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resources is the Kubernetes resource requests and
                        limits to apply, per Stargate pod. Leave nil to use defaults.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    serviceAccount:
                      default: default
                      description: ServiceAccount is the service account name to use
                        for Stargate pods.
                      type: string
                    telemetry:
                      description: Telemetry defines the desired telemetry integrations
                        to deploy targeting the Stargate pods for all DCs in this
                        cluster (unless overriden by DC specific settings)
                      properties:
                        mcac:
                          properties:
                            metricFilters:
                              description: 'MetricFilters allows passing filters to
                                MCAC in order to reduce the amount of extracted metrics.
                                Not setting this field will result in the default
                                filters being used. Setting it to an empty list will
                                result in all metrics being extracted. Examples: -
                                "deny:org.apache.cassandra.metrics.Table" - "deny:org.apache.cassandra.metrics.table"
                                - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                                - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                                - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                              items:
                                type: string
                              type: array
                          type: object
                        prometheus:
                          properties:
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels are applied to all serviceMonitors
                                created.
                              type: object
                            enabled:
                              description: Enable the creation of Prometheus serviceMonitors
                                for this resource (Cassandra or Stargate).
                              type: boolean
                          type: object
                      type: object
                    tolerations:
                      description: Tolerations are tolerations to apply to the Stargate
                        pods. Leave nil to let the controller reuse the same tolerations
                        used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe sets the Stargate readiness probe. Leave
                  nil to use defaults.
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port. This
                      is an alpha field and requires enabling GRPCContainerProbe feature
                      gate.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: "Service is the name of the service to place
                          in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                          \n If this is not specified, the default behavior is defined
                          by gRPC."
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              resources:
                description: Resources is the Kubernetes resource requests and limits
                  to apply, per Stargate pod. Leave nil to use defaults.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceAccount:
                default: default
                description: ServiceAccount is the service account name to use for
                  Stargate pods.
                type: string
              size:
                default: 1
                description: Size is the number of Stargate instances to deploy in
                  each datacenter. They will be spread evenly across racks.
                format: int32
                minimum: 1
                type: integer
              telemetry:
                description: Telemetry defines the desired telemetry integrations
                  to deploy targeting the Stargate pods for all DCs in this cluster
                  (unless overriden by DC specific settings)
                properties:
                  mcac:
                    properties:
                      metricFilters:
                        description: 'MetricFilters allows passing filters to MCAC
                          in order to reduce the amount of extracted metrics. Not
                          setting this field will result in the default filters being
                          used. Setting it to an empty list will result in all metrics
                          being extracted. Examples: - "deny:org.apache.cassandra.metrics.Table"
                          - "deny:org.apache.cassandra.metrics.table" - "allow:org.apache.cassandra.metrics.table.live_ss_table_count"
                          - "allow:org.apache.cassandra.metrics.Table.LiveSSTableCount"
                          - "allow:org.apache.cassandra.metrics.table.live_disk_space_used"'
                        items:
                          type: string
                        type: array
                    type: object
                  prometheus:
                    properties:
                      commonLabels:
                        additionalProperties:
                          type: string
                        description: CommonLabels are applied to all serviceMonitors
                          created.
                        type: object
                      enabled:
                        description: Enable the creation of Prometheus serviceMonitors
                          for this resource (Cassandra or Stargate).
                        type: boolean
                    type: object
                type: object
              tolerations:
                description: Tolerations are tolerations to apply to the Stargate
                  pods. Leave nil to let the controller reuse the same tolerations
                  used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            required:
            - datacenterRef
            - size
            type: object
          status:
            description: Most recently observed status of this Stargate resource.
            properties:
              availableReplicas:
                description: Total number of available pods targeted by the Stargate
                  deployment. Will be zero if the deployment has not been created
                  yet.
                format: int32
                type: integer
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transited from one status to another.
                      format: date-time
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deploymentRefs:
                description: DeploymentRefs is the names of the Deployment objects
                  that were created for this Stargate object.
                items:
                  type: string
                type: array
              progress:
                description: Progress is the progress of this Stargate object.
                enum:
                - Pending
                - Deploying
                - Running
                type: string
              readyReplicas:
                description: ReadyReplicas is the total number of ready pods targeted
                  by the Stargate deployment. Will be zero if the deployment has not
                  been created yet.
                format: int32
                type: integer
              readyReplicasRatio:
                description: ReadyReplicasRatio is a "X/Y" string representing the
                  ratio between ReadyReplicas and Replicas in the Stargate deployment.
                pattern: \d+/\d+
                type: string
              replicas:
                description: Total number of non-terminated pods targeted by the Stargate
                  deployment (their labels match the selector). Will be zero if the
                  deployment has not been created yet.
                format: int32
                type: integer
              serviceRef:
                description: ServiceRef is the name of the Service object that was
                  created for this Stargate object.
                type: string
              updatedReplicas:
                description: UpdatedReplicas is the total number of non-terminated
                  pods targeted by the Stargate deployment that have the desired template
                  spec. Will be zero if the deployment has not been created yet.
                format: int32
                type: integer
            required:
            - availableReplicas
            - readyReplicas
            - replicas
            - updatedReplicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
