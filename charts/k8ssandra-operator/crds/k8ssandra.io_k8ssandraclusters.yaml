---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: k8ssandraclusters.k8ssandra.io
spec:
  group: k8ssandra.io
  names:
    kind: K8ssandraCluster
    listKind: K8ssandraClusterList
    plural: k8ssandraclusters
    shortNames:
      - k8c
      - k8cs
    singular: k8ssandracluster
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: K8ssandraCluster is the Schema for the k8ssandraclusters API.
            The K8ssandraCluster CRD name is also the name of the Cassandra cluster
            (which corresponds to cluster_name in cassandra.yaml).
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: K8ssandraClusterSpec defines the desired state of K8ssandraCluster
              properties:
                auth:
                  default: true
                  description: Whether to enable authentication in this cluster. The
                    default is true; it is highly recommended to always leave authentication
                    turned on. When enabled, authentication will be enforced not only
                    on Cassandra nodes, but also on Reaper, Medusa and Stargate nodes,
                    if any.
                  type: boolean
                cassandra:
                  description: Cassandra is a specification of the Cassandra cluster.
                    This includes everything from the number of datacenters, the k8s
                    cluster where each DC should be deployed, node affinity (via racks),
                    individual C* node settings, JVM settings, and more.
                  properties:
                    cassandraTelemetry:
                      description: CassandraTelemetry defines the desired state for
                        telemetry resources in this K8ssandraCluster. If telemetry configurations
                        are defined, telemetry resources will be deployed to integrate
                        with a user-provided monitoring solution (at present, only support
                        for Prometheus is available).
                      properties:
                        prometheus:
                          properties:
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels are applied to all serviceMonitors
                                created.
                              type: object
                            enabled:
                              description: Enable the creation of Prometheus serviceMonitors
                                for this resource (Cassandra or Stargate).
                              type: boolean
                          type: object
                      type: object
                    config:
                      description: CassandraConfig is configuration settings that are
                        applied to cassandra.yaml and jvm-options for 3.11.x or jvm-server-options
                        for 4.x.
                      properties:
                        cassandraYaml:
                          description: 'CassandraYaml defines the contents of the cassandra.yaml
                          file. For more info see: https://cassandra.apache.org/doc/latest/cassandra/configuration/cass_yaml_file.html'
                          properties:
                            allocate_tokens_for_keyspace:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            allocate_tokens_for_local_replication_factor:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            audit_logging_options:
                              description: 'Exists in: 4.0, trunk'
                              properties:
                                archive_command:
                                  type: string
                                block:
                                  type: boolean
                                enabled:
                                  type: boolean
                                excluded_categories:
                                  type: string
                                excluded_keyspaces:
                                  type: string
                                excluded_users:
                                  type: string
                                included_categories:
                                  type: string
                                included_keyspaces:
                                  type: string
                                included_users:
                                  type: string
                                logger:
                                  properties:
                                    class_name:
                                      type: string
                                    parameters:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - class_name
                                  type: object
                                max_archive_retries:
                                  type: integer
                                max_log_size:
                                  type: integer
                                max_queue_weight:
                                  type: integer
                                roll_cycle:
                                  type: string
                              required:
                                - enabled
                              type: object
                            auth_read_consistency_level:
                              description: Exists in trunk
                              enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - SERIAL
                                - LOCAL_SERIAL
                                - LOCAL_ONE
                                - NODE_LOCAL
                              type: string
                            auth_write_consistency_level:
                              description: Exists in trunk
                              enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - SERIAL
                                - LOCAL_SERIAL
                                - LOCAL_ONE
                                - NODE_LOCAL
                              type: string
                            authenticator:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            authorizer:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            auto_hints_cleanup_enabled:
                              description: Exists in trunk
                              type: boolean
                            auto_optimise_full_repair_streams:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            auto_optimise_inc_repair_streams:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            auto_optimise_preview_repair_streams:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            auto_snapshot:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            autocompaction_on_startup_enabled:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            automatic_sstable_upgrade:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            available_processors:
                              description: Exists in trunk
                              type: integer
                            back_pressure_enabled:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            back_pressure_strategy:
                              description: Exists in 3.11, 4.0, trunk
                              properties:
                                class_name:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                              required:
                                - class_name
                              type: object
                            batch_size_fail_threshold_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            batch_size_warn_threshold_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            batchlog_replay_throttle_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            block_for_peers_in_remote_dcs:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            block_for_peers_timeout_in_secs:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            buffer_pool_use_heap_if_exhausted:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            cas_contention_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            cdc_enabled:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            cdc_free_space_check_interval_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            cdc_raw_directory:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            cdc_total_space_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            check_for_duplicate_rows_during_compaction:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            check_for_duplicate_rows_during_reads:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            client_error_reporting_exclusions:
                              description: Exists in trunk
                              properties:
                                subnets:
                                  items:
                                    properties:
                                      subnet:
                                        type: string
                                    required:
                                      - subnet
                                    type: object
                                  type: array
                              required:
                                - subnets
                              type: object
                            column_index_cache_size_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            column_index_size_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            commitlog_compression:
                              description: Exists in 3.11, 4.0, trunk
                              properties:
                                class_name:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                              required:
                                - class_name
                              type: object
                            commitlog_max_compression_buffers_in_pool:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            commitlog_periodic_queue_size:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            commitlog_segment_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            commitlog_sync:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - periodic
                                - batch
                                - group
                              type: string
                            commitlog_sync_batch_window_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            commitlog_sync_group_window_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            commitlog_sync_period_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            commitlog_total_space_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            compaction_large_partition_warning_threshold_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            compaction_throughput_mb_per_sec:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            compaction_tombstone_warning_threshold:
                              description: Exists in trunk
                              type: integer
                            concurrent_compactors:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            concurrent_counter_writes:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            concurrent_materialized_view_builders:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            concurrent_materialized_view_writes:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            concurrent_reads:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            concurrent_replicates:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            concurrent_validations:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            concurrent_writes:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            consecutive_message_errors_threshold:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            corrupted_tombstone_strategy:
                              description: 'Exists in: 4.0, trunk'
                              enum:
                                - disabled
                                - warn
                                - exception
                              type: string
                            counter_cache_keys_to_save:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            counter_cache_save_period:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            counter_cache_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            counter_write_request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            credentials_cache_max_entries:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            credentials_update_interval_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            credentials_validity_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            cross_node_timeout:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            default_keyspace_rf:
                              description: Exists in trunk
                              type: integer
                            denylist_consistency_level:
                              description: Exists in trunk
                              enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - SERIAL
                                - LOCAL_SERIAL
                                - LOCAL_ONE
                                - NODE_LOCAL
                              type: string
                            denylist_initial_load_retry_seconds:
                              description: Exists in trunk
                              type: integer
                            denylist_max_keys_per_table:
                              description: Exists in trunk
                              type: integer
                            denylist_max_keys_total:
                              description: Exists in trunk
                              type: integer
                            denylist_refresh_seconds:
                              description: Exists in trunk
                              type: integer
                            diagnostic_events_enabled:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            disk_access_mode:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - auto
                                - mmap
                                - mmap_index_only
                                - standard
                              type: string
                            disk_optimization_estimate_percentile:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            disk_optimization_page_cross_chance:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            disk_optimization_strategy:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - ssd
                                - spinning
                              type: string
                            dynamic_snitch:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            dynamic_snitch_badness_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            dynamic_snitch_reset_interval_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            dynamic_snitch_update_interval_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            enable_denylist_range_reads:
                              description: Exists in trunk
                              type: boolean
                            enable_denylist_reads:
                              description: Exists in trunk
                              type: boolean
                            enable_denylist_writes:
                              description: Exists in trunk
                              type: boolean
                            enable_drop_compact_storage:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            enable_materialized_views:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            enable_partition_denylist:
                              description: Exists in trunk
                              type: boolean
                            enable_sasi_indexes:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            enable_scripted_user_defined_functions:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            enable_transient_replication:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            enable_user_defined_functions:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            enable_user_defined_functions_threads:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            endpoint_snitch:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            failure_detector:
                              description: Exists in trunk
                              type: string
                            file_cache_enabled:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            file_cache_round_up:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            file_cache_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            flush_compression:
                              description: 'Exists in: 4.0, trunk'
                              enum:
                                - none
                                - fast
                                - table
                              type: string
                            full_query_logging_options:
                              description: 'Exists in: 4.0, trunk'
                              properties:
                                archive_command:
                                  type: string
                                block:
                                  type: boolean
                                log_dir:
                                  type: string
                                max_archive_retries:
                                  type: integer
                                max_log_size:
                                  type: integer
                                max_queue_weight:
                                  type: integer
                                roll_cycle:
                                  type: string
                              type: object
                            gc_log_threshold_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            gc_warn_threshold_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            hint_window_persistent_enabled:
                              description: Exists in trunk
                              type: boolean
                            hinted_handoff_disabled_datacenters:
                              description: Exists in 3.11, 4.0, trunk
                              items:
                                type: string
                              type: array
                            hinted_handoff_enabled:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            hinted_handoff_throttle_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            hints_compression:
                              description: Exists in 3.11, 4.0, trunk
                              properties:
                                class_name:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                              required:
                                - class_name
                              type: object
                            hints_flush_period_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            ideal_consistency_level:
                              description: 'Exists in: 4.0, trunk'
                              enum:
                                - ANY
                                - ONE
                                - TWO
                                - THREE
                                - QUORUM
                                - ALL
                                - LOCAL_QUORUM
                                - EACH_QUORUM
                                - SERIAL
                                - LOCAL_SERIAL
                                - LOCAL_ONE
                                - NODE_LOCAL
                              type: string
                            index_interval:
                              description: Exists in 3.11
                              type: integer
                            index_summary_capacity_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            index_summary_resize_interval_in_minutes:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            initial_range_tombstone_list_allocation_size:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            inter_dc_stream_throughput_outbound_megabits_per_sec:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            inter_dc_tcp_nodelay:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            internode_application_receive_queue_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_application_receive_queue_reserve_endpoint_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_application_receive_queue_reserve_global_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_application_send_queue_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_application_send_queue_reserve_endpoint_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_application_send_queue_reserve_global_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_authenticator:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            internode_compression:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - all
                                - none
                                - dc
                              type: string
                            internode_error_reporting_exclusions:
                              description: Exists in trunk
                              properties:
                                subnets:
                                  items:
                                    properties:
                                      subnet:
                                        type: string
                                    required:
                                      - subnet
                                    type: object
                                  type: array
                              required:
                                - subnets
                              type: object
                            internode_max_message_size_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_recv_buff_size_in_bytes:
                              description: Exists in 3.11
                              type: integer
                            internode_send_buff_size_in_bytes:
                              description: Exists in 3.11
                              type: integer
                            internode_socket_receive_buffer_size_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_socket_send_buffer_size_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_streaming_tcp_user_timeout_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_tcp_connect_timeout_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            internode_tcp_user_timeout_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            key_cache_keys_to_save:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            key_cache_migrate_during_compaction:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            key_cache_save_period:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            key_cache_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            keyspace_count_warn_threshold:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            max_concurrent_automatic_sstable_upgrades:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            max_hint_window_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            max_hints_delivery_threads:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            max_hints_file_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            max_mutation_size_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            max_streaming_retries:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            max_value_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            memtable_allocation_type:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - unslabbed_heap_buffers
                                - unslabbed_heap_buffers_logged
                                - heap_buffers
                                - offheap_buffers
                                - offheap_objects
                              type: string
                            memtable_cleanup_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            memtable_flush_writers:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            memtable_heap_space_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            memtable_offheap_space_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            min_free_space_per_drive_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            minimum_keyspace_rf:
                              description: Exists in trunk
                              type: integer
                            native_transport_allow_older_protocols:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            native_transport_flush_in_batches_legacy:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            native_transport_idle_timeout_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            native_transport_max_concurrent_connections:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_concurrent_connections_per_ip:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_concurrent_requests_in_bytes:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_concurrent_requests_in_bytes_per_ip:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_frame_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_negotiable_protocol_version:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_max_requests_per_second:
                              description: Exists in trunk
                              type: integer
                            native_transport_max_threads:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            native_transport_rate_limiting_enabled:
                              description: Exists in trunk
                              type: boolean
                            native_transport_receive_queue_capacity_in_bytes:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            network_authorizer:
                              description: 'Exists in: 4.0, trunk'
                              type: string
                            networking_cache_size_in_mb:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            num_tokens:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            otc_backlog_expiration_interval_ms:
                              description: Exists in 3.11
                              type: integer
                            otc_coalescing_enough_coalesced_messages:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            otc_coalescing_strategy:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            otc_coalescing_window_us:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            paxos_cache_size_in_mb:
                              description: Exists in trunk
                              type: integer
                            periodic_commitlog_sync_lag_block_in_ms:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            permissions_cache_max_entries:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            permissions_update_interval_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            permissions_validity_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            phi_convict_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            prepared_statements_cache_size_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            range_request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            range_tombstone_list_growth_factor:
                              description: 'Exists in: 4.0, trunk'
                              type: string
                            read_request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            reject_repair_compaction_threshold:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            repair_command_pool_full_strategy:
                              description: 'Exists in: 4.0, trunk'
                              enum:
                                - queue
                                - reject
                              type: string
                            repair_command_pool_size:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            repair_session_max_tree_depth:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            repair_session_space_in_mb:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            repaired_data_tracking_for_partition_reads_enabled:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            repaired_data_tracking_for_range_reads_enabled:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            replica_filtering_protection:
                              description: Exists in 3.11, 4.0, trunk
                              properties:
                                cached_rows_fail_threshold:
                                  type: integer
                                cached_rows_warn_threshold:
                                  type: integer
                              type: object
                            report_unconfirmed_repaired_data_mismatches:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            request_scheduler:
                              description: Exists in 3.11
                              type: string
                            request_scheduler_id:
                              description: Exists in 3.11
                              enum:
                                - keyspace
                              type: string
                            request_scheduler_options:
                              description: Exists in 3.11
                              properties:
                                default_weight:
                                  type: integer
                                throttle_limit:
                                  type: integer
                                weights:
                                  additionalProperties:
                                    type: integer
                                  type: object
                              type: object
                            request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            role_manager:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            roles_cache_max_entries:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            roles_update_interval_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            roles_validity_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            row_cache_class_name:
                              description: Exists in 3.11, 4.0, trunk
                              type: string
                            row_cache_keys_to_save:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            row_cache_save_period:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            row_cache_size_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            slow_query_log_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            snapshot_before_compaction:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            snapshot_links_per_second:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            snapshot_on_duplicate_row_detection:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            snapshot_on_repaired_data_mismatch:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            sstable_preemptive_open_interval_in_mb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            stream_entire_sstables:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            stream_throughput_outbound_megabits_per_sec:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            streaming_connections_per_host:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            streaming_keep_alive_period_in_secs:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            streaming_socket_timeout_in_ms:
                              description: Exists in 3.11
                              type: integer
                            table_count_warn_threshold:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            thrift_framed_transport_size_in_mb:
                              description: Exists in 3.11
                              type: integer
                            thrift_max_message_length_in_mb:
                              description: Exists in 3.11
                              type: integer
                            thrift_prepared_statements_cache_size_mb:
                              description: Exists in 3.11
                              type: integer
                            tombstone_failure_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            tombstone_warn_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            tracetype_query_ttl:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            tracetype_repair_ttl:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            track_warnings:
                              description: Exists in trunk
                              properties:
                                coordinator_read_size:
                                  type: integer
                                enabled:
                                  type: boolean
                                local_read_size:
                                  type: integer
                                row_index_size:
                                  type: integer
                              required:
                                - enabled
                              type: object
                            traverse_auth_from_root:
                              description: Exists in trunk
                              type: boolean
                            trickle_fsync:
                              description: Exists in 3.11, 4.0, trunk
                              type: boolean
                            trickle_fsync_interval_in_kb:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            truncate_request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            unlogged_batch_across_partitions_warn_threshold:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            use_deterministic_table_id:
                              description: Exists in trunk
                              type: boolean
                            use_offheap_merkle_trees:
                              description: 'Exists in: 4.0, trunk'
                              type: boolean
                            user_defined_function_fail_timeout:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            user_defined_function_warn_timeout:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            user_function_timeout_policy:
                              description: Exists in 3.11, 4.0, trunk
                              enum:
                                - ignore
                                - die
                                - die_immediate
                              type: string
                            validation_preview_purge_head_start_in_sec:
                              description: 'Exists in: 4.0, trunk'
                              type: integer
                            windows_timer_interval:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                            write_request_timeout_in_ms:
                              description: Exists in 3.11, 4.0, trunk
                              type: integer
                          type: object
                        jvmOptions:
                          properties:
                            additionalOptions:
                              items:
                                type: string
                              type: array
                            heapNewGenSize:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            heapSize:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                      type: object
                    datacenters:
                      description: Datacenters a list of the DCs in the cluster.
                      items:
                        properties:
                          cassandraTelemetry:
                            description: Telemetry defines the desired state for telemetry
                              resources in this datacenter. If telemetry configurations
                              are defined, telemetry resources will be deployed to integrate
                              with a user-provided monitoring solution (at present,
                              only support for Prometheus is available).
                            properties:
                              prometheus:
                                properties:
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    description: CommonLabels are applied to all serviceMonitors
                                      created.
                                    type: object
                                  enabled:
                                    description: Enable the creation of Prometheus serviceMonitors
                                      for this resource (Cassandra or Stargate).
                                    type: boolean
                                type: object
                            type: object
                          jmxInitContainerImage:
                            default:
                              name: busybox
                              tag: 1.34.1
                            description: The image to use in each Cassandra pod for
                              the (short-lived) init container that enables JMX remote
                              authentication on Cassandra pods. This is only useful
                              when authentication is enabled in the cluster. The default
                              is "busybox:1.34.1".
                            properties:
                              name:
                                description: The image name to use.
                                type: string
                              pullPolicy:
                                description: The image pull policy to use. Defaults
                                  to "Always" if the tag is "latest", otherwise to "IfNotPresent".
                                enum:
                                  - Always
                                  - IfNotPresent
                                  - Never
                                type: string
                              pullSecretRef:
                                description: 'The secret to use when pulling the image
                                from private repositories. If specified, this secret
                                will be passed to individual puller implementations
                                for them to use. For example, in the case of Docker,
                                only DockerConfig type secrets are honored. More info:
                                https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              registry:
                                default: docker.io
                                description: The Docker registry to use. Defaults to
                                  "docker.io", the official Docker Hub.
                                type: string
                              repository:
                                description: The Docker repository to use.
                                type: string
                              tag:
                                default: latest
                                description: The image tag to use. Defaults to "latest".
                                type: string
                            type: object
                          k8sContext:
                            type: string
                          metadata:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                              - name
                            type: object
                          mgmtAPIHeap:
                            anyOf:
                              - type: integer
                              - type: string
                            description: MgmtAPIHeap defines the amount of memory devoted
                              to the management api heap.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          networking:
                            description: Networking enables host networking and configures
                              a NodePort ports.
                            properties:
                              hostNetwork:
                                type: boolean
                              nodePort:
                                properties:
                                  internode:
                                    type: integer
                                  internodeSSL:
                                    type: integer
                                  native:
                                    type: integer
                                  nativeSSL:
                                    type: integer
                                type: object
                            type: object
                          racks:
                            items:
                              description: Rack ...
                              properties:
                                name:
                                  description: The rack name
                                  minLength: 2
                                  type: string
                                nodeAffinityLabels:
                                  additionalProperties:
                                    type: string
                                  description: NodeAffinityLabels to pin the rack, using
                                    node affinity
                                  type: object
                                zone:
                                  description: Deprecated. Use nodeAffinityLabels instead.
                                    Zone name to pin the rack, using node affinity
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          reaper:
                            description: Reaper defines the desired deployment characteristics
                              for Reaper in this datacenter. Leave nil to skip deploying
                              Reaper in this datacenter.
                            properties:
                              ServiceAccountName:
                                default: default
                                type: string
                              affinity:
                                description: Affinity applied to the Reaper pods.
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity expressions
                                          specified by this field, but it may choose
                                          a node that violates one or more of the expressions.
                                          The node that is most preferred is the one
                                          with the greatest sum of weights, i.e. for
                                          each node that meets all of the scheduling
                                          requirements (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if the
                                          node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the most
                                          preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit weight
                                            0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            weight:
                                              description: Weight associated with matching
                                                the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - preference
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements specified
                                          by this field are not met at scheduling time,
                                          the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by
                                          this field cease to be met at some point during
                                          pod execution (e.g. due to an update), the
                                          system may or may not try to eventually evict
                                          the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node selector
                                              terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                        required:
                                          - nodeSelectorTerms
                                        type: object
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling rules
                                      (e.g. co-locate this pod in the same node, zone,
                                      etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity expressions
                                          specified by this field, but it may choose
                                          a node that violates one or more of the expressions.
                                          The node that is most preferred is the one
                                          with the greatest sum of weights, i.e. for
                                          each node that meets all of the scheduling
                                          requirements (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if the
                                          node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over a
                                                    set of resources, in this case pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over the
                                                    set of namespaces that the term
                                                    applies to. The term is applied
                                                    to the union of the namespaces selected
                                                    by this field and the ones listed
                                                    in the namespaces field. null selector
                                                    and null or empty namespaces list
                                                    means "this pod's namespace". An
                                                    empty selector ({}) matches all
                                                    namespaces. This field is beta-level
                                                    and is only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The term
                                                    is applied to the union of the namespaces
                                                    listed in this field and the ones
                                                    selected by namespaceSelector. null
                                                    or empty namespaces list and null
                                                    namespaceSelector means "this pod's
                                                    namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with the pods matching the labelSelector
                                                    in the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                                - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with matching
                                                the corresponding podAffinityTerm, in
                                                the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements specified
                                          by this field are not met at scheduling time,
                                          the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by
                                          this field cease to be met at some point during
                                          pod execution (e.g. due to a pod label update),
                                          the system may or may not try to eventually
                                          evict the pod from its node. When there are
                                          multiple elements, the lists of nodes corresponding
                                          to each podAffinityTerm are intersected, i.e.
                                          all terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not co-located
                                            (anti-affinity) with, where co-located is
                                            defined as running on a node whose value
                                            of the label with key <topologyKey> matches
                                            that of any node on which a pod of the set
                                            of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the set
                                                of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this field
                                                and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                                This field is beta-level and is only
                                                honored when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a static
                                                list of namespace names that the term
                                                applies to. The term is applied to the
                                                union of the namespaces listed in this
                                                field and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null
                                                namespaceSelector means "this pod's
                                                namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where co-located
                                                is defined as running on a node whose
                                                value of the label with key topologyKey
                                                matches that of any node on which any
                                                of the selected pods is running. Empty
                                                topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the anti-affinity
                                          expressions specified by this field, but it
                                          may choose a node that violates one or more
                                          of the expressions. The node that is most
                                          preferred is the one with the greatest sum
                                          of weights, i.e. for each node that meets
                                          all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity
                                          expressions, etc.), compute a sum by iterating
                                          through the elements of this field and adding
                                          "weight" to the sum if the node has pods which
                                          matches the corresponding podAffinityTerm;
                                          the node(s) with the highest sum are the most
                                          preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over a
                                                    set of resources, in this case pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over the
                                                    set of namespaces that the term
                                                    applies to. The term is applied
                                                    to the union of the namespaces selected
                                                    by this field and the ones listed
                                                    in the namespaces field. null selector
                                                    and null or empty namespaces list
                                                    means "this pod's namespace". An
                                                    empty selector ({}) matches all
                                                    namespaces. This field is beta-level
                                                    and is only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The term
                                                    is applied to the union of the namespaces
                                                    listed in this field and the ones
                                                    selected by namespaceSelector. null
                                                    or empty namespaces list and null
                                                    namespaceSelector means "this pod's
                                                    namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with the pods matching the labelSelector
                                                    in the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                                - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with matching
                                                the corresponding podAffinityTerm, in
                                                the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto the
                                          node. If the anti-affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod label
                                          update), the system may or may not try to
                                          eventually evict the pod from its node. When
                                          there are multiple elements, the lists of
                                          nodes corresponding to each podAffinityTerm
                                          are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not co-located
                                            (anti-affinity) with, where co-located is
                                            defined as running on a node whose value
                                            of the label with key <topologyKey> matches
                                            that of any node on which a pod of the set
                                            of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the set
                                                of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this field
                                                and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                                This field is beta-level and is only
                                                honored when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a static
                                                list of namespace names that the term
                                                applies to. The term is applied to the
                                                union of the namespaces listed in this
                                                field and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null
                                                namespaceSelector means "this pod's
                                                namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where co-located
                                                is defined as running on a node whose
                                                value of the label with key topologyKey
                                                matches that of any node on which any
                                                of the selected pods is running. Empty
                                                topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              autoScheduling:
                                description: Auto scheduling properties. When you enable
                                  the auto-schedule feature, Reaper dynamically schedules
                                  repairs for all non-system keyspaces in a cluster.
                                  A cluster's keyspaces are monitored and any modifications
                                  (additions or removals) are detected. When a new keyspace
                                  is created, a new repair schedule is created automatically
                                  for that keyspace. Conversely, when a keyspace is
                                  removed, the corresponding repair schedule is deleted.
                                properties:
                                  enabled:
                                    default: false
                                    type: boolean
                                  excludedClusters:
                                    description: ExcludedClusters are the clusters that
                                      are to be excluded from the repair schedule.
                                    items:
                                      type: string
                                    type: array
                                  excludedKeyspaces:
                                    description: ExcludedKeyspaces are the keyspaces
                                      that are to be excluded from the repair schedule.
                                    items:
                                      type: string
                                    type: array
                                  initialDelayPeriod:
                                    default: PT15S
                                    description: InitialDelay is the amount of delay
                                      time before the schedule period starts. Must be
                                      a valid ISO-8601 duration string. The default
                                      is "PT15S" (15 seconds).
                                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                                    type: string
                                  percentUnrepairedThreshold:
                                    default: 10
                                    description: PercentUnrepairedThreshold is the percentage
                                      of unrepaired data over which an incremental repair
                                      should be started. Only relevant when using repair
                                      type INCREMENTAL.
                                    maximum: 100
                                    minimum: 0
                                    type: integer
                                  periodBetweenPolls:
                                    default: PT10M
                                    description: PeriodBetweenPolls is the interval
                                      time to wait before checking whether to start
                                      a repair task. Must be a valid ISO-8601 duration
                                      string. The default is "PT10M" (10 minutes).
                                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                                    type: string
                                  repairType:
                                    default: AUTO
                                    description: 'RepairType is the type of repair to
                                    create: - REGULAR creates a regular repair (non-adaptive
                                    and non-incremental); - ADAPTIVE creates an adaptive
                                    repair; adaptive repairs are most suited for Cassandra
                                    3. - INCREMENTAL creates an incremental repair;
                                    incremental repairs should only be used with Cassandra
                                    4+. - AUTO chooses between ADAPTIVE and INCREMENTAL
                                    depending on the Cassandra server version; ADAPTIVE
                                    for Cassandra 3 and INCREMENTAL for Cassandra
                                    4+.'
                                    enum:
                                      - REGULAR
                                      - ADAPTIVE
                                      - INCREMENTAL
                                      - AUTO
                                    type: string
                                  scheduleSpreadPeriod:
                                    default: PT6H
                                    description: ScheduleSpreadPeriod is the time spacing
                                      between each of the repair schedules that is to
                                      be carried out. Must be a valid ISO-8601 duration
                                      string. The default is "PT6H" (6 hours).
                                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                                    type: string
                                  timeBeforeFirstSchedule:
                                    default: PT5M
                                    description: TimeBeforeFirstSchedule is the grace
                                      period before the first repair in the schedule
                                      is started. Must be a valid ISO-8601 duration
                                      string. The default is "PT5M" (5 minutes).
                                    pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                                    type: string
                                type: object
                              containerImage:
                                default:
                                  name: cassandra-reaper
                                  repository: thelastpickle
                                  tag: 3.1.0
                                description: The image to use for the Reaper pod main
                                  container. The default is "thelastpickle/cassandra-reaper:3.1.0".
                                properties:
                                  name:
                                    description: The image name to use.
                                    type: string
                                  pullPolicy:
                                    description: The image pull policy to use. Defaults
                                      to "Always" if the tag is "latest", otherwise
                                      to "IfNotPresent".
                                    enum:
                                      - Always
                                      - IfNotPresent
                                      - Never
                                    type: string
                                  pullSecretRef:
                                    description: 'The secret to use when pulling the
                                    image from private repositories. If specified,
                                    this secret will be passed to individual puller
                                    implementations for them to use. For example,
                                    in the case of Docker, only DockerConfig type
                                    secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                        type: string
                                    type: object
                                  registry:
                                    default: docker.io
                                    description: The Docker registry to use. Defaults
                                      to "docker.io", the official Docker Hub.
                                    type: string
                                  repository:
                                    description: The Docker repository to use.
                                    type: string
                                  tag:
                                    default: latest
                                    description: The image tag to use. Defaults to "latest".
                                    type: string
                                type: object
                              initContainerImage:
                                default:
                                  name: cassandra-reaper
                                  repository: thelastpickle
                                  tag: 3.1.0
                                description: The image to use for the Reaper pod init
                                  container (that performs schema migrations). The default
                                  is "thelastpickle/cassandra-reaper:3.1.0".
                                properties:
                                  name:
                                    description: The image name to use.
                                    type: string
                                  pullPolicy:
                                    description: The image pull policy to use. Defaults
                                      to "Always" if the tag is "latest", otherwise
                                      to "IfNotPresent".
                                    enum:
                                      - Always
                                      - IfNotPresent
                                      - Never
                                    type: string
                                  pullSecretRef:
                                    description: 'The secret to use when pulling the
                                    image from private repositories. If specified,
                                    this secret will be passed to individual puller
                                    implementations for them to use. For example,
                                    in the case of Docker, only DockerConfig type
                                    secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                        type: string
                                    type: object
                                  registry:
                                    default: docker.io
                                    description: The Docker registry to use. Defaults
                                      to "docker.io", the official Docker Hub.
                                    type: string
                                  repository:
                                    description: The Docker repository to use.
                                    type: string
                                  tag:
                                    default: latest
                                    description: The image tag to use. Defaults to "latest".
                                    type: string
                                type: object
                              initContainerSecurityContext:
                                description: InitContainerSecurityContext is the SecurityContext
                                  applied to the Reaper init container, used to perform
                                  schema migrations.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                    whether a process can gain more privileges than
                                    its parent process. This bool directly controls
                                    if the no_new_privs flag will be set on the container
                                    process. AllowPrivilegeEscalation is true always
                                    when the container is: 1) run as Privileged 2)
                                    has CAP_SYS_ADMIN'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when running
                                      containers. Defaults to the default set of capabilities
                                      granted by the container runtime.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode. Processes
                                      in privileged containers are essentially equivalent
                                      to root on the host. Defaults to false.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default is
                                      DefaultProcMount which uses the container runtime
                                      defaults for readonly paths and masked paths.
                                      This requires the ProcMountType feature flag to
                                      be enabled.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the
                                      container process. Uses runtime default if unset.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must run
                                      as a non-root user. If true, the Kubelet will
                                      validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start
                                      the container if it does. If unset or false, no
                                      such validation will be performed. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the
                                      container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to
                                      the container. If unspecified, the container runtime
                                      will allocate a random SELinux context for each
                                      container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    properties:
                                      level:
                                        description: Level is SELinux level label that
                                          applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that
                                          applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that
                                          applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that
                                          applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile
                                          defined in a file on the node should be used.
                                          The profile must be preconfigured on the node
                                          to work. Must be a descending path, relative
                                          to the kubelet's configured seccomp profile
                                          location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                        type: string
                                    required:
                                      - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name
                                          of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only be
                                          honored by components that enable the WindowsHostProcessContainers
                                          feature flag. Setting this field without the
                                          feature flag will result in errors when validating
                                          the Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it is
                                          not allowed to have a mix of HostProcess containers
                                          and non-HostProcess containers).  In addition,
                                          if HostProcess is true then HostNetwork must
                                          also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process. Defaults
                                          to the user specified in image metadata if
                                          unspecified. May also be set in PodSecurityContext.
                                          If set in both SecurityContext and PodSecurityContext,
                                          the value specified in SecurityContext takes
                                          precedence.
                                        type: string
                                    type: object
                                type: object
                              livenessProbe:
                                description: LivenessProbe sets the Reaper liveness
                                  probe. Leave nil to use defaults.
                                properties:
                                  exec:
                                    description: One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Name or number of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    required:
                                      - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform the
                                      probe. Default to 10 seconds. Minimum value is
                                      1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number or name of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the pod
                                      needs to terminate gracefully upon probe failure.
                                      The grace period is the duration in seconds after
                                      the processes running in the pod are sent a termination
                                      signal and the time when the processes are forcibly
                                      halted with a kill signal. Set this value longer
                                      than the expected cleanup time for your process.
                                      If this value is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature gate.
                                      Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              podSecurityContext:
                                description: PodSecurityContext contains a pod-level
                                  SecurityContext to apply to Reaper pods.
                                properties:
                                  fsGroup:
                                    description: "A special supplemental group that
                                    applies to all containers in a pod. Some volume
                                    types allow the Kubelet to change the ownership
                                    of that volume to be owned by the pod: \n 1. The
                                    owning GID will be the FSGroup 2. The setgid bit
                                    is set (new files created in the volume will be
                                    owned by FSGroup) 3. The permission bits are OR'd
                                    with rw-rw---- \n If unset, the Kubelet will not
                                    modify the ownership and permissions of any volume."
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: 'fsGroupChangePolicy defines behavior
                                    of changing ownership and permission of the volume
                                    before being exposed inside Pod. This field will
                                    only apply to volume types which support fsGroup
                                    based ownership(and permissions). It will have
                                    no effect on ephemeral volume types such as: secret,
                                    configmaps and emptydir. Valid values are "OnRootMismatch"
                                    and "Always". If not specified, "Always" is used.'
                                    type: string
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the
                                      container process. Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the
                                      value specified in SecurityContext takes precedence
                                      for that container.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must run
                                      as a non-root user. If true, the Kubelet will
                                      validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start
                                      the container if it does. If unset or false, no
                                      such validation will be performed. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the
                                      container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence for that container.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to
                                      all containers. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence
                                      for that container.
                                    properties:
                                      level:
                                        description: Level is SELinux level label that
                                          applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that
                                          applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that
                                          applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that
                                          applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by the containers
                                      in this pod.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile
                                          defined in a file on the node should be used.
                                          The profile must be preconfigured on the node
                                          to work. Must be a descending path, relative
                                          to the kubelet's configured seccomp profile
                                          location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                        type: string
                                    required:
                                      - type
                                    type: object
                                  supplementalGroups:
                                    description: A list of groups applied to the first
                                      process run in each container, in addition to
                                      the container's primary GID.  If unspecified,
                                      no groups will be added to any container.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: Sysctls hold a list of namespaced sysctls
                                      used for the pod. Pods with unsupported sysctls
                                      (by the container runtime) might fail to launch.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name
                                          of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only be
                                          honored by components that enable the WindowsHostProcessContainers
                                          feature flag. Setting this field without the
                                          feature flag will result in errors when validating
                                          the Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it is
                                          not allowed to have a mix of HostProcess containers
                                          and non-HostProcess containers).  In addition,
                                          if HostProcess is true then HostNetwork must
                                          also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process. Defaults
                                          to the user specified in image metadata if
                                          unspecified. May also be set in PodSecurityContext.
                                          If set in both SecurityContext and PodSecurityContext,
                                          the value specified in SecurityContext takes
                                          precedence.
                                        type: string
                                    type: object
                                type: object
                              readinessProbe:
                                description: ReadinessProbe sets the Reaper readiness
                                  probe. Leave nil to use defaults.
                                properties:
                                  exec:
                                    description: One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Name or number of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    required:
                                      - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform the
                                      probe. Default to 10 seconds. Minimum value is
                                      1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number or name of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the pod
                                      needs to terminate gracefully upon probe failure.
                                      The grace period is the duration in seconds after
                                      the processes running in the pod are sent a termination
                                      signal and the time when the processes are forcibly
                                      halted with a kill signal. Set this value longer
                                      than the expected cleanup time for your process.
                                      If this value is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature gate.
                                      Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              securityContext:
                                description: SecurityContext applied to the Reaper main
                                  container.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                    whether a process can gain more privileges than
                                    its parent process. This bool directly controls
                                    if the no_new_privs flag will be set on the container
                                    process. AllowPrivilegeEscalation is true always
                                    when the container is: 1) run as Privileged 2)
                                    has CAP_SYS_ADMIN'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when running
                                      containers. Defaults to the default set of capabilities
                                      granted by the container runtime.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode. Processes
                                      in privileged containers are essentially equivalent
                                      to root on the host. Defaults to false.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default is
                                      DefaultProcMount which uses the container runtime
                                      defaults for readonly paths and masked paths.
                                      This requires the ProcMountType feature flag to
                                      be enabled.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the
                                      container process. Uses runtime default if unset.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must run
                                      as a non-root user. If true, the Kubelet will
                                      validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start
                                      the container if it does. If unset or false, no
                                      such validation will be performed. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the
                                      container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to
                                      the container. If unspecified, the container runtime
                                      will allocate a random SELinux context for each
                                      container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    properties:
                                      level:
                                        description: Level is SELinux level label that
                                          applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that
                                          applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that
                                          applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that
                                          applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile
                                          defined in a file on the node should be used.
                                          The profile must be preconfigured on the node
                                          to work. Must be a descending path, relative
                                          to the kubelet's configured seccomp profile
                                          location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp
                                        profile will be applied. Valid options are:
                                        \n Localhost - a profile defined in a file
                                        on the node should be used. RuntimeDefault
                                        - the container runtime default profile should
                                        be used. Unconfined - no profile should be
                                        applied."
                                        type: string
                                    required:
                                      - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes precedence.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name
                                          of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only be
                                          honored by components that enable the WindowsHostProcessContainers
                                          feature flag. Setting this field without the
                                          feature flag will result in errors when validating
                                          the Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it is
                                          not allowed to have a mix of HostProcess containers
                                          and non-HostProcess containers).  In addition,
                                          if HostProcess is true then HostNetwork must
                                          also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process. Defaults
                                          to the user specified in image metadata if
                                          unspecified. May also be set in PodSecurityContext.
                                          If set in both SecurityContext and PodSecurityContext,
                                          the value specified in SecurityContext takes
                                          precedence.
                                        type: string
                                    type: object
                                type: object
                              tolerations:
                                description: Tolerations applied to the Reaper pods.
                                items:
                                  description: The pod this Toleration is attached to
                                    tolerates any taint that matches the triple <key,value,effect>
                                    using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values and
                                        all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is
                                        ignored) tolerates the taint. By default, it
                                        is not set, which means tolerate the taint forever
                                        (do not evict). Zero and negative values will
                                        be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the value
                                        should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          resources:
                            description: Resources is the cpu and memory resources for
                              the cassandra container.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          serverImage:
                            type: string
                          serverVersion:
                            description: ServerVersion is the Cassandra version.
                            pattern: (3\.11\.\d+)|(4\.0\.\d+)
                            type: string
                          size:
                            description: Size is the number Cassandra pods to deploy
                              in this datacenter. This number does not include Stargate
                              instances.
                            format: int32
                            minimum: 1
                            type: integer
                          stargate:
                            description: Stargate defines the desired deployment characteristics
                              for Stargate in this datacenter. Leave nil to skip deploying
                              Stargate in this datacenter.
                            properties:
                              affinity:
                                description: Affinity is the affinity to apply to all
                                  the Stargate pods. Leave nil to let the controller
                                  reuse the same affinity rules used for data pods in
                                  this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity expressions
                                          specified by this field, but it may choose
                                          a node that violates one or more of the expressions.
                                          The node that is most preferred is the one
                                          with the greatest sum of weights, i.e. for
                                          each node that meets all of the scheduling
                                          requirements (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if the
                                          node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the most
                                          preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit weight
                                            0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            weight:
                                              description: Weight associated with matching
                                                the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - preference
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements specified
                                          by this field are not met at scheduling time,
                                          the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by
                                          this field cease to be met at some point during
                                          pod execution (e.g. due to an update), the
                                          system may or may not try to eventually evict
                                          the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node selector
                                              terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key that
                                                          the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: Represents a key's
                                                          relationship to a set of values.
                                                          Valid operators are In, NotIn,
                                                          Exists, DoesNotExist. Gt,
                                                          and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator is
                                                          In or NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be empty.
                                                          If the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which will
                                                          be interpreted as an integer.
                                                          This array is replaced during
                                                          a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                        required:
                                          - nodeSelectorTerms
                                        type: object
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling rules
                                      (e.g. co-locate this pod in the same node, zone,
                                      etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity expressions
                                          specified by this field, but it may choose
                                          a node that violates one or more of the expressions.
                                          The node that is most preferred is the one
                                          with the greatest sum of weights, i.e. for
                                          each node that meets all of the scheduling
                                          requirements (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if the
                                          node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over a
                                                    set of resources, in this case pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over the
                                                    set of namespaces that the term
                                                    applies to. The term is applied
                                                    to the union of the namespaces selected
                                                    by this field and the ones listed
                                                    in the namespaces field. null selector
                                                    and null or empty namespaces list
                                                    means "this pod's namespace". An
                                                    empty selector ({}) matches all
                                                    namespaces. This field is beta-level
                                                    and is only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The term
                                                    is applied to the union of the namespaces
                                                    listed in this field and the ones
                                                    selected by namespaceSelector. null
                                                    or empty namespaces list and null
                                                    namespaceSelector means "this pod's
                                                    namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with the pods matching the labelSelector
                                                    in the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                                - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with matching
                                                the corresponding podAffinityTerm, in
                                                the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements specified
                                          by this field are not met at scheduling time,
                                          the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by
                                          this field cease to be met at some point during
                                          pod execution (e.g. due to a pod label update),
                                          the system may or may not try to eventually
                                          evict the pod from its node. When there are
                                          multiple elements, the lists of nodes corresponding
                                          to each podAffinityTerm are intersected, i.e.
                                          all terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not co-located
                                            (anti-affinity) with, where co-located is
                                            defined as running on a node whose value
                                            of the label with key <topologyKey> matches
                                            that of any node on which a pod of the set
                                            of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the set
                                                of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this field
                                                and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                                This field is beta-level and is only
                                                honored when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a static
                                                list of namespace names that the term
                                                applies to. The term is applied to the
                                                union of the namespaces listed in this
                                                field and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null
                                                namespaceSelector means "this pod's
                                                namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where co-located
                                                is defined as running on a node whose
                                                value of the label with key topologyKey
                                                matches that of any node on which any
                                                of the selected pods is running. Empty
                                                topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to schedule
                                          pods to nodes that satisfy the anti-affinity
                                          expressions specified by this field, but it
                                          may choose a node that violates one or more
                                          of the expressions. The node that is most
                                          preferred is the one with the greatest sum
                                          of weights, i.e. for each node that meets
                                          all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity
                                          expressions, etc.), compute a sum by iterating
                                          through the elements of this field and adding
                                          "weight" to the sum if the node has pods which
                                          matches the corresponding podAffinityTerm;
                                          the node(s) with the highest sum are the most
                                          preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over a
                                                    set of resources, in this case pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaceSelector:
                                                  description: A label query over the
                                                    set of namespaces that the term
                                                    applies to. The term is applied
                                                    to the union of the namespaces selected
                                                    by this field and the ones listed
                                                    in the namespaces field. null selector
                                                    and null or empty namespaces list
                                                    means "this pod's namespace". An
                                                    empty selector ({}) matches all
                                                    namespaces. This field is beta-level
                                                    and is only honored when PodAffinityNamespaceSelector
                                                    feature is enabled.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a key,
                                                          and an operator that relates
                                                          the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator represents
                                                              a key's relationship to
                                                              a set of values. Valid
                                                              operators are In, NotIn,
                                                              Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is an
                                                              array of string values.
                                                              If the operator is In
                                                              or NotIn, the values array
                                                              must be non-empty. If
                                                              the operator is Exists
                                                              or DoesNotExist, the values
                                                              array must be empty. This
                                                              array is replaced during
                                                              a strategic merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                          - key
                                                          - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is a
                                                        map of {key,value} pairs. A
                                                        single {key,value} in the matchLabels
                                                        map is equivalent to an element
                                                        of matchExpressions, whose key
                                                        field is "key", the operator
                                                        is "In", and the values array
                                                        contains only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The term
                                                    is applied to the union of the namespaces
                                                    listed in this field and the ones
                                                    selected by namespaceSelector. null
                                                    or empty namespaces list and null
                                                    namespaceSelector means "this pod's
                                                    namespace"
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with the pods matching the labelSelector
                                                    in the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                                - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with matching
                                                the corresponding podAffinityTerm, in
                                                the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto the
                                          node. If the anti-affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod label
                                          update), the system may or may not try to
                                          eventually evict the pod from its node. When
                                          there are multiple elements, the lists of
                                          nodes corresponding to each podAffinityTerm
                                          are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not co-located
                                            (anti-affinity) with, where co-located is
                                            defined as running on a node whose value
                                            of the label with key <topologyKey> matches
                                            that of any node on which a pod of the set
                                            of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the set
                                                of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this field
                                                and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                                This field is beta-level and is only
                                                honored when PodAffinityNamespaceSelector
                                                feature is enabled.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a
                                                    list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector requirement
                                                      is a selector that contains values,
                                                      a key, and an operator that relates
                                                      the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an array
                                                          of string values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty. If
                                                          the operator is Exists or
                                                          DoesNotExist, the values array
                                                          must be empty. This array
                                                          is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single {key,value}
                                                    in the matchLabels map is equivalent
                                                    to an element of matchExpressions,
                                                    whose key field is "key", the operator
                                                    is "In", and the values array contains
                                                    only "value". The requirements are
                                                    ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a static
                                                list of namespace names that the term
                                                applies to. The term is applied to the
                                                union of the namespaces listed in this
                                                field and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null
                                                namespaceSelector means "this pod's
                                                namespace"
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where co-located
                                                is defined as running on a node whose
                                                value of the label with key topologyKey
                                                matches that of any node on which any
                                                of the selected pods is running. Empty
                                                topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              allowStargateOnDataNodes:
                                default: false
                                description: 'AllowStargateOnDataNodes allows Stargate
                                pods to be scheduled on a worker node already hosting
                                data pods for this datacenter. The default is false,
                                which means that Stargate pods will be scheduled on
                                separate worker nodes. Note: if the datacenter pods
                                have HostNetwork:true, then the Stargate pods will
                                inherit of it, in which case it is possible that Stargate
                                nodes won''t be allowed to sit on data nodes even
                                if this property is set to true, because of port conflicts
                                on the same IP address.'
                                type: boolean
                              cassandraConfigMapRef:
                                description: CassandraConfigMapRef is a reference to
                                  a ConfigMap that holds Cassandra configuration. The
                                  map should have a key named cassandra_yaml.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              containerImage:
                                default:
                                  repository: stargateio
                                  tag: v1.0.45
                                description: ContainerImage is the image characteristics
                                  to use for Stargate containers. Leave nil to use a
                                  default image.
                                properties:
                                  name:
                                    description: The image name to use.
                                    type: string
                                  pullPolicy:
                                    description: The image pull policy to use. Defaults
                                      to "Always" if the tag is "latest", otherwise
                                      to "IfNotPresent".
                                    enum:
                                      - Always
                                      - IfNotPresent
                                      - Never
                                    type: string
                                  pullSecretRef:
                                    description: 'The secret to use when pulling the
                                    image from private repositories. If specified,
                                    this secret will be passed to individual puller
                                    implementations for them to use. For example,
                                    in the case of Docker, only DockerConfig type
                                    secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                        type: string
                                    type: object
                                  registry:
                                    default: docker.io
                                    description: The Docker registry to use. Defaults
                                      to "docker.io", the official Docker Hub.
                                    type: string
                                  repository:
                                    description: The Docker repository to use.
                                    type: string
                                  tag:
                                    default: latest
                                    description: The image tag to use. Defaults to "latest".
                                    type: string
                                type: object
                              heapSize:
                                anyOf:
                                  - type: integer
                                  - type: string
                                default: 256Mi
                                description: 'HeapSize sets the JVM heap size to use
                                for Stargate. If no Resources are specified, this
                                value will also be used to set a default memory request
                                and limit for the Stargate pods: these will be set
                                to HeapSize x2 and x4, respectively.'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              livenessProbe:
                                description: LivenessProbe sets the Stargate liveness
                                  probe. Leave nil to use defaults.
                                properties:
                                  exec:
                                    description: One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Name or number of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    required:
                                      - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform the
                                      probe. Default to 10 seconds. Minimum value is
                                      1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number or name of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the pod
                                      needs to terminate gracefully upon probe failure.
                                      The grace period is the duration in seconds after
                                      the processes running in the pod are sent a termination
                                      signal and the time when the processes are forcibly
                                      halted with a kill signal. Set this value longer
                                      than the expected cleanup time for your process.
                                      If this value is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature gate.
                                      Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: NodeSelector is an optional map of label
                                  keys and values to restrict the scheduling of Stargate
                                  nodes to workers with matching labels. Leave nil to
                                  let the controller reuse the same node selectors used
                                  for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                                type: object
                              racks:
                                description: Racks allow customizing Stargate characteristics
                                  for specific racks in the datacenter.
                                items:
                                  description: StargateRackTemplate defines custom rules
                                    for Stargate pods in a given rack. These rules will
                                    be merged with rules defined at datacenter level
                                    in a StargateDatacenterTemplate; rack-level rules
                                    have precedence over datacenter-level ones.
                                  properties:
                                    affinity:
                                      description: Affinity is the affinity to apply
                                        to all the Stargate pods. Leave nil to let the
                                        controller reuse the same affinity rules used
                                        for data pods in this datacenter, if any. See
                                        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified by
                                                this field, but it may choose a node
                                                that violates one or more of the expressions.
                                                The node that is most preferred is the
                                                one with the greatest sum of weights,
                                                i.e. for each node that meets all of
                                                the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity
                                                expressions, etc.), compute a sum by
                                                iterating through the elements of this
                                                field and adding "weight" to the sum
                                                if the node matches the corresponding
                                                matchExpressions; the node(s) with the
                                                highest sum are the most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A null
                                                  preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by node's
                                                          labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists, DoesNotExist.
                                                                Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values. If
                                                                the operator is In or
                                                                NotIn, the values array
                                                                must be non-empty. If
                                                                the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a single
                                                                element, which will
                                                                be interpreted as an
                                                                integer. This array
                                                                is replaced during a
                                                                strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by node's
                                                          fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists, DoesNotExist.
                                                                Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values. If
                                                                the operator is In or
                                                                NotIn, the values array
                                                                must be non-empty. If
                                                                the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a single
                                                                element, which will
                                                                be interpreted as an
                                                                integer. This array
                                                                is replaced during a
                                                                strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated with
                                                      matching the corresponding nodeSelectorTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - preference
                                                  - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the affinity
                                                requirements specified by this field
                                                cease to be met at some point during
                                                pod execution (e.g. due to an update),
                                                the system may or may not try to eventually
                                                evict the pod from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of node
                                                    selector terms. The terms are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are ANDed.
                                                      The TopologySelectorTerm type
                                                      implements a subset of the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by node's
                                                          labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists, DoesNotExist.
                                                                Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values. If
                                                                the operator is In or
                                                                NotIn, the values array
                                                                must be non-empty. If
                                                                the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a single
                                                                element, which will
                                                                be interpreted as an
                                                                integer. This array
                                                                is replaced during a
                                                                strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by node's
                                                          fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists, DoesNotExist.
                                                                Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values. If
                                                                the operator is In or
                                                                NotIn, the values array
                                                                must be non-empty. If
                                                                the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a single
                                                                element, which will
                                                                be interpreted as an
                                                                integer. This array
                                                                is replaced during a
                                                                strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                                - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the same
                                            node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified by
                                                this field, but it may choose a node
                                                that violates one or more of the expressions.
                                                The node that is most preferred is the
                                                one with the greatest sum of weights,
                                                i.e. for each node that meets all of
                                                the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity
                                                expressions, etc.), compute a sum by
                                                iterating through the elements of this
                                                field and adding "weight" to the sum
                                                if the node has pods which matches the
                                                corresponding podAffinityTerm; the node(s)
                                                with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the
                                                  matched WeightedPodAffinityTerm fields
                                                  are added per-node to find the most
                                                  preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query over
                                                          a set of resources, in this
                                                          case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label selector
                                                                requirement is a selector
                                                                that contains values,
                                                                a key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key is
                                                                    the label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn, Exists
                                                                    and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of string
                                                                    values. If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty. This
                                                                    array is replaced
                                                                    during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an element
                                                              of matchExpressions, whose
                                                              key field is "key", the
                                                              operator is "In", and
                                                              the values array contains
                                                              only "value". The requirements
                                                              are ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query over
                                                          the set of namespaces that
                                                          the term applies to. The term
                                                          is applied to the union of
                                                          the namespaces selected by
                                                          this field and the ones listed
                                                          in the namespaces field. null
                                                          selector and null or empty
                                                          namespaces list means "this
                                                          pod's namespace". An empty
                                                          selector ({}) matches all
                                                          namespaces. This field is
                                                          beta-level and is only honored
                                                          when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label selector
                                                                requirement is a selector
                                                                that contains values,
                                                                a key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key is
                                                                    the label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn, Exists
                                                                    and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of string
                                                                    values. If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty. This
                                                                    array is replaced
                                                                    during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an element
                                                              of matchExpressions, whose
                                                              key field is "key", the
                                                              operator is "In", and
                                                              the values array contains
                                                              only "value". The requirements
                                                              are ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied to
                                                          the union of the namespaces
                                                          listed in this field and the
                                                          ones selected by namespaceSelector.
                                                          null or empty namespaces list
                                                          and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity) or
                                                          not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on a
                                                          node whose value of the label
                                                          with key topologyKey matches
                                                          that of any node on which
                                                          any of the selected pods is
                                                          running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated with
                                                      matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the affinity
                                                requirements specified by this field
                                                cease to be met at some point during
                                                pod execution (e.g. due to a pod label
                                                update), the system may or may not try
                                                to eventually evict the pod from its
                                                node. When there are multiple elements,
                                                the lists of nodes corresponding to
                                                each podAffinityTerm are intersected,
                                                i.e. all terms must be satisfied.
                                              items:
                                                description: Defines a set of pods (namely
                                                  those matching the labelSelector relative
                                                  to the given namespace(s)) that this
                                                  pod should be co-located (affinity)
                                                  or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value of
                                                  the label with key <topologyKey> matches
                                                  that of any node on which a pod of
                                                  the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this case
                                                      pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the
                                                                label key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is
                                                                an array of string values.
                                                                If the operator is In
                                                                or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. This array is
                                                                replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in the
                                                          matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is applied
                                                      to the union of the namespaces
                                                      selected by this field and the
                                                      ones listed in the namespaces
                                                      field. null selector and null
                                                      or empty namespaces list means
                                                      "this pod's namespace". An empty
                                                      selector ({}) matches all namespaces.
                                                      This field is beta-level and is
                                                      only honored when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the
                                                                label key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is
                                                                an array of string values.
                                                                If the operator is In
                                                                or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. This array is
                                                                replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in the
                                                          matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union of
                                                      the namespaces listed in this
                                                      field and the ones selected by
                                                      namespaceSelector. null or empty
                                                      namespaces list and null namespaceSelector
                                                      means "this pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not co-located
                                                      (anti-affinity) with the pods
                                                      matching the labelSelector in
                                                      the specified namespaces, where
                                                      co-located is defined as running
                                                      on a node whose value of the label
                                                      with key topologyKey matches that
                                                      of any node on which any of the
                                                      selected pods is running. Empty
                                                      topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity scheduling
                                            rules (e.g. avoid putting this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a node
                                                that violates one or more of the expressions.
                                                The node that is most preferred is the
                                                one with the greatest sum of weights,
                                                i.e. for each node that meets all of
                                                the scheduling requirements (resource
                                                request, requiredDuringScheduling anti-affinity
                                                expressions, etc.), compute a sum by
                                                iterating through the elements of this
                                                field and adding "weight" to the sum
                                                if the node has pods which matches the
                                                corresponding podAffinityTerm; the node(s)
                                                with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the
                                                  matched WeightedPodAffinityTerm fields
                                                  are added per-node to find the most
                                                  preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query over
                                                          a set of resources, in this
                                                          case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label selector
                                                                requirement is a selector
                                                                that contains values,
                                                                a key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key is
                                                                    the label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn, Exists
                                                                    and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of string
                                                                    values. If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty. This
                                                                    array is replaced
                                                                    during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an element
                                                              of matchExpressions, whose
                                                              key field is "key", the
                                                              operator is "In", and
                                                              the values array contains
                                                              only "value". The requirements
                                                              are ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query over
                                                          the set of namespaces that
                                                          the term applies to. The term
                                                          is applied to the union of
                                                          the namespaces selected by
                                                          this field and the ones listed
                                                          in the namespaces field. null
                                                          selector and null or empty
                                                          namespaces list means "this
                                                          pod's namespace". An empty
                                                          selector ({}) matches all
                                                          namespaces. This field is
                                                          beta-level and is only honored
                                                          when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label selector
                                                                requirement is a selector
                                                                that contains values,
                                                                a key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key is
                                                                    the label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn, Exists
                                                                    and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of string
                                                                    values. If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty. This
                                                                    array is replaced
                                                                    during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an element
                                                              of matchExpressions, whose
                                                              key field is "key", the
                                                              operator is "In", and
                                                              the values array contains
                                                              only "value". The requirements
                                                              are ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied to
                                                          the union of the namespaces
                                                          listed in this field and the
                                                          ones selected by namespaceSelector.
                                                          null or empty namespaces list
                                                          and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity) or
                                                          not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on a
                                                          node whose value of the label
                                                          with key topologyKey matches
                                                          that of any node on which
                                                          any of the selected pods is
                                                          running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated with
                                                      matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the anti-affinity
                                                requirements specified by this field
                                                cease to be met at some point during
                                                pod execution (e.g. due to a pod label
                                                update), the system may or may not try
                                                to eventually evict the pod from its
                                                node. When there are multiple elements,
                                                the lists of nodes corresponding to
                                                each podAffinityTerm are intersected,
                                                i.e. all terms must be satisfied.
                                              items:
                                                description: Defines a set of pods (namely
                                                  those matching the labelSelector relative
                                                  to the given namespace(s)) that this
                                                  pod should be co-located (affinity)
                                                  or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value of
                                                  the label with key <topologyKey> matches
                                                  that of any node on which a pod of
                                                  the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this case
                                                      pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the
                                                                label key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is
                                                                an array of string values.
                                                                If the operator is In
                                                                or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. This array is
                                                                replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in the
                                                          matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is applied
                                                      to the union of the namespaces
                                                      selected by this field and the
                                                      ones listed in the namespaces
                                                      field. null selector and null
                                                      or empty namespaces list means
                                                      "this pod's namespace". An empty
                                                      selector ({}) matches all namespaces.
                                                      This field is beta-level and is
                                                      only honored when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values, a
                                                            key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the
                                                                label key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is
                                                                an array of string values.
                                                                If the operator is In
                                                                or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is Exists
                                                                or DoesNotExist, the
                                                                values array must be
                                                                empty. This array is
                                                                replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in the
                                                          matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union of
                                                      the namespaces listed in this
                                                      field and the ones selected by
                                                      namespaceSelector. null or empty
                                                      namespaces list and null namespaceSelector
                                                      means "this pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not co-located
                                                      (anti-affinity) with the pods
                                                      matching the labelSelector in
                                                      the specified namespaces, where
                                                      co-located is defined as running
                                                      on a node whose value of the label
                                                      with key topologyKey matches that
                                                      of any node on which any of the
                                                      selected pods is running. Empty
                                                      topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    allowStargateOnDataNodes:
                                      default: false
                                      description: 'AllowStargateOnDataNodes allows
                                      Stargate pods to be scheduled on a worker node
                                      already hosting data pods for this datacenter.
                                      The default is false, which means that Stargate
                                      pods will be scheduled on separate worker nodes.
                                      Note: if the datacenter pods have HostNetwork:true,
                                      then the Stargate pods will inherit of it, in
                                      which case it is possible that Stargate nodes
                                      won''t be allowed to sit on data nodes even
                                      if this property is set to true, because of
                                      port conflicts on the same IP address.'
                                      type: boolean
                                    cassandraConfigMapRef:
                                      description: CassandraConfigMapRef is a reference
                                        to a ConfigMap that holds Cassandra configuration.
                                        The map should have a key named cassandra_yaml.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                          type: string
                                      type: object
                                    containerImage:
                                      default:
                                        repository: stargateio
                                        tag: v1.0.45
                                      description: ContainerImage is the image characteristics
                                        to use for Stargate containers. Leave nil to
                                        use a default image.
                                      properties:
                                        name:
                                          description: The image name to use.
                                          type: string
                                        pullPolicy:
                                          description: The image pull policy to use.
                                            Defaults to "Always" if the tag is "latest",
                                            otherwise to "IfNotPresent".
                                          enum:
                                            - Always
                                            - IfNotPresent
                                            - Never
                                          type: string
                                        pullSecretRef:
                                          description: 'The secret to use when pulling
                                          the image from private repositories. If
                                          specified, this secret will be passed to
                                          individual puller implementations for them
                                          to use. For example, in the case of Docker,
                                          only DockerConfig type secrets are honored.
                                          More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                          properties:
                                            name:
                                              description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                              type: string
                                          type: object
                                        registry:
                                          default: docker.io
                                          description: The Docker registry to use. Defaults
                                            to "docker.io", the official Docker Hub.
                                          type: string
                                        repository:
                                          description: The Docker repository to use.
                                          type: string
                                        tag:
                                          default: latest
                                          description: The image tag to use. Defaults
                                            to "latest".
                                          type: string
                                      type: object
                                    heapSize:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      default: 256Mi
                                      description: 'HeapSize sets the JVM heap size
                                      to use for Stargate. If no Resources are specified,
                                      this value will also be used to set a default
                                      memory request and limit for the Stargate pods:
                                      these will be set to HeapSize x2 and x4, respectively.'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    livenessProbe:
                                      description: LivenessProbe sets the Stargate liveness
                                        probe. Leave nil to use defaults.
                                      properties:
                                        exec:
                                          description: One and only one of the following
                                            should be specified. Exec specifies the
                                            action to take.
                                          properties:
                                            command:
                                              description: Command is the command line
                                                to execute inside the container, the
                                                working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to explicitly
                                                call out to that shell. Exit status
                                                of 0 is treated as live/healthy and
                                                non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http request
                                            to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a
                                                  custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Name or number of the port
                                                to access on the container. Number must
                                                be in the range 1 to 65535. Name must
                                                be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                          container has started before liveness probes
                                          are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum value
                                            is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: 'TCPSocket specifies an action
                                          involving a TCP port. TCP hooks not yet
                                          supported TODO: implement a realistic TCP
                                          lifecycle hook'
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Number or name of the port
                                                to access on the container. Number must
                                                be in the range 1 to 65535. Name must
                                                be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully upon
                                            probe failure. The grace period is the duration
                                            in seconds after the processes running in
                                            the pod are sent a termination signal and
                                            the time when the processes are forcibly
                                            halted with a kill signal. Set this value
                                            longer than the expected cleanup time for
                                            your process. If this value is nil, the
                                            pod's terminationGracePeriodSeconds will
                                            be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                          the probe times out. Defaults to 1 second.
                                          Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name is the rack name. It must correspond
                                        to an existing rack name in the CassandraDatacenter
                                        resource where Stargate is being deployed, otherwise
                                        it will be ignored.
                                      minLength: 2
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: NodeSelector is an optional map of
                                        label keys and values to restrict the scheduling
                                        of Stargate nodes to workers with matching labels.
                                        Leave nil to let the controller reuse the same
                                        node selectors used for data pods in this datacenter,
                                        if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                                      type: object
                                    readinessProbe:
                                      description: ReadinessProbe sets the Stargate
                                        readiness probe. Leave nil to use defaults.
                                      properties:
                                        exec:
                                          description: One and only one of the following
                                            should be specified. Exec specifies the
                                            action to take.
                                          properties:
                                            command:
                                              description: Command is the command line
                                                to execute inside the container, the
                                                working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to explicitly
                                                call out to that shell. Exit status
                                                of 0 is treated as live/healthy and
                                                non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http request
                                            to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a
                                                  custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Name or number of the port
                                                to access on the container. Number must
                                                be in the range 1 to 65535. Name must
                                                be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                          container has started before liveness probes
                                          are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe. Default to 10 seconds. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum value
                                            is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: 'TCPSocket specifies an action
                                          involving a TCP port. TCP hooks not yet
                                          supported TODO: implement a realistic TCP
                                          lifecycle hook'
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect
                                              to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Number or name of the port
                                                to access on the container. Number must
                                                be in the range 1 to 65535. Name must
                                                be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully upon
                                            probe failure. The grace period is the duration
                                            in seconds after the processes running in
                                            the pod are sent a termination signal and
                                            the time when the processes are forcibly
                                            halted with a kill signal. Set this value
                                            longer than the expected cleanup time for
                                            your process. If this value is nil, the
                                            pod's terminationGracePeriodSeconds will
                                            be used. Otherwise, this value overrides
                                            the value provided by the pod spec. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling
                                            ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds
                                            is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                          the probe times out. Defaults to 1 second.
                                          Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: Resources is the Kubernetes resource
                                        requests and limits to apply, per Stargate pod.
                                        Leave nil to use defaults.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    serviceAccount:
                                      default: default
                                      description: ServiceAccount is the service account
                                        name to use for Stargate pods.
                                      type: string
                                    telemetry:
                                      description: Telemetry defines the desired telemetry
                                        integrations to deploy targeting the Stargate
                                        pods for all DCs in this cluster (unless overriden
                                        by DC specific settings)
                                      properties:
                                        prometheus:
                                          properties:
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              description: CommonLabels are applied
                                                to all serviceMonitors created.
                                              type: object
                                            enabled:
                                              description: Enable the creation of Prometheus
                                                serviceMonitors for this resource (Cassandra
                                                or Stargate).
                                              type: boolean
                                          type: object
                                      type: object
                                    tolerations:
                                      description: Tolerations are tolerations to apply
                                        to the Stargate pods. Leave nil to let the controller
                                        reuse the same tolerations used for data pods
                                        in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the triple
                                          <key,value,effect> using the matching operator
                                          <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that the
                                              toleration applies to. Empty means match
                                              all taint keys. If the key is empty, operator
                                              must be Exists; this combination means
                                              to match all values and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for value,
                                              so that a pod can tolerate all taints
                                              of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the taint.
                                              By default, it is not set, which means
                                              tolerate the taint forever (do not evict).
                                              Zero and negative values will be treated
                                              as 0 (evict immediately) by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value the
                                              toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  required:
                                    - name
                                  type: object
                                type: array
                              readinessProbe:
                                description: ReadinessProbe sets the Stargate readiness
                                  probe. Leave nil to use defaults.
                                properties:
                                  exec:
                                    description: One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description: Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Name or number of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    required:
                                      - port
                                    type: object
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description: How often (in seconds) to perform the
                                      probe. Default to 10 seconds. Minimum value is
                                      1.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description: Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number or name of the port to access
                                          on the container. Number must be in the range
                                          1 to 65535. Name must be an IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                      - port
                                    type: object
                                  terminationGracePeriodSeconds:
                                    description: Optional duration in seconds the pod
                                      needs to terminate gracefully upon probe failure.
                                      The grace period is the duration in seconds after
                                      the processes running in the pod are sent a termination
                                      signal and the time when the processes are forcibly
                                      halted with a kill signal. Set this value longer
                                      than the expected cleanup time for your process.
                                      If this value is nil, the pod's terminationGracePeriodSeconds
                                      will be used. Otherwise, this value overrides
                                      the value provided by the pod spec. Value must
                                      be non-negative integer. The value zero indicates
                                      stop immediately via the kill signal (no opportunity
                                      to shut down). This is a beta field and requires
                                      enabling ProbeTerminationGracePeriod feature gate.
                                      Minimum value is 1. spec.terminationGracePeriodSeconds
                                      is used if unset.
                                    format: int64
                                    type: integer
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    format: int32
                                    type: integer
                                type: object
                              resources:
                                description: Resources is the Kubernetes resource requests
                                  and limits to apply, per Stargate pod. Leave nil to
                                  use defaults.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              serviceAccount:
                                default: default
                                description: ServiceAccount is the service account name
                                  to use for Stargate pods.
                                type: string
                              size:
                                default: 1
                                description: Size is the number of Stargate instances
                                  to deploy in each datacenter. They will be spread
                                  evenly across racks.
                                format: int32
                                minimum: 1
                                type: integer
                              telemetry:
                                description: Telemetry defines the desired telemetry
                                  integrations to deploy targeting the Stargate pods
                                  for all DCs in this cluster (unless overriden by DC
                                  specific settings)
                                properties:
                                  prometheus:
                                    properties:
                                      commonLabels:
                                        additionalProperties:
                                          type: string
                                        description: CommonLabels are applied to all
                                          serviceMonitors created.
                                        type: object
                                      enabled:
                                        description: Enable the creation of Prometheus
                                          serviceMonitors for this resource (Cassandra
                                          or Stargate).
                                        type: boolean
                                    type: object
                                type: object
                              tolerations:
                                description: Tolerations are tolerations to apply to
                                  the Stargate pods. Leave nil to let the controller
                                  reuse the same tolerations used for data pods in this
                                  datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                                items:
                                  description: The pod this Toleration is attached to
                                    tolerates any taint that matches the triple <key,value,effect>
                                    using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values and
                                        all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is
                                        ignored) tolerates the taint. By default, it
                                        is not set, which means tolerate the taint forever
                                        (do not evict). Zero and negative values will
                                        be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the value
                                        should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                            required:
                              - size
                            type: object
                          storageConfig:
                            description: StorageConfig is the persistent storage requirements
                              for each Cassandra pod. This includes everything under
                              /var/lib/cassandra, namely the commit log and data directories.
                            properties:
                              additionalVolumes:
                                items:
                                  description: StorageConfig defines additional storage
                                    configurations
                                  properties:
                                    mountPath:
                                      description: Mount path into cassandra container
                                      type: string
                                    name:
                                      description: Name of the pvc
                                      pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                      type: string
                                    pvcSpec:
                                      description: Persistent volume claim spec
                                      properties:
                                        accessModes:
                                          description: 'AccessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                          items:
                                            type: string
                                          type: array
                                        dataSource:
                                          description: 'This field can be used to specify
                                          either: * An existing VolumeSnapshot object
                                          (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                          properties:
                                            apiGroup:
                                              description: APIGroup is the group for
                                                the resource being referenced. If APIGroup
                                                is not specified, the specified Kind
                                                must be in the core API group. For any
                                                other third-party types, APIGroup is
                                                required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                            - kind
                                            - name
                                          type: object
                                        dataSourceRef:
                                          description: 'Specifies the object from which
                                          to populate the volume with data, if a non-empty
                                          volume is desired. This may be any local
                                          object from a non-empty API group (non core
                                          object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding
                                          will only succeed if the type of the specified
                                          object matches some installed volume populator
                                          or dynamic provisioner. This field will
                                          replace the functionality of the DataSource
                                          field and as such if both fields are non-empty,
                                          they must have the same value. For backwards
                                          compatibility, both fields (DataSource and
                                          DataSourceRef) will be set to the same value
                                          automatically if one of them is empty and
                                          the other is non-empty. There are two important
                                          differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Alpha)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                          properties:
                                            apiGroup:
                                              description: APIGroup is the group for
                                                the resource being referenced. If APIGroup
                                                is not specified, the specified Kind
                                                must be in the core API group. For any
                                                other third-party types, APIGroup is
                                                required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource
                                                being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource
                                                being referenced
                                              type: string
                                          required:
                                            - kind
                                            - name
                                          type: object
                                        resources:
                                          description: 'Resources represents the minimum
                                          resources the volume should have. More info:
                                          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                          properties:
                                            limits:
                                              additionalProperties:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                              type: object
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                              type: object
                                          type: object
                                        selector:
                                          description: A label query over volumes to
                                            consider for binding.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key
                                                      that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value}
                                                pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                        storageClassName:
                                          description: 'Name of the StorageClass required
                                          by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                          type: string
                                        volumeMode:
                                          description: volumeMode defines what type
                                            of volume is required by the claim. Value
                                            of Filesystem is implied when not included
                                            in claim spec.
                                          type: string
                                        volumeName:
                                          description: VolumeName is the binding reference
                                            to the PersistentVolume backing this claim.
                                          type: string
                                      type: object
                                  required:
                                    - mountPath
                                    - name
                                    - pvcSpec
                                  type: object
                                type: array
                              cassandraDataVolumeClaimSpec:
                                description: PersistentVolumeClaimSpec describes the
                                  common attributes of storage devices and allows a
                                  Source for provider-specific attributes
                                properties:
                                  accessModes:
                                    description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                    items:
                                      type: string
                                    type: array
                                  dataSource:
                                    description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. If the AnyVolumeDataSource feature
                                    gate is enabled, this field will always have the
                                    same contents as the DataSourceRef field.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  dataSourceRef:
                                    description: 'Specifies the object from which to
                                    populate the volume with data, if a non-empty
                                    volume is desired. This may be any local object
                                    from a non-empty API group (non core object) or
                                    a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    DataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, both fields (DataSource
                                    and DataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. There are two important differences
                                    between DataSource and DataSourceRef: * While
                                    DataSource only allows two specific types of objects,
                                    DataSourceRef   allows any non-core object, as
                                    well as PersistentVolumeClaim objects. * While
                                    DataSource ignores disallowed values (dropping
                                    them), DataSourceRef   preserves all values, and
                                    generates an error if a disallowed value is   specified.
                                    (Alpha) Using this field requires the AnyVolumeDataSource
                                    feature gate to be enabled.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  resources:
                                    description: 'Resources represents the minimum resources
                                    the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                    properties:
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                  selector:
                                    description: A label query over volumes to consider
                                      for binding.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  storageClassName:
                                    description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                    type: string
                                  volumeMode:
                                    description: volumeMode defines what type of volume
                                      is required by the claim. Value of Filesystem
                                      is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: VolumeName is the binding reference
                                      to the PersistentVolume backing this claim.
                                    type: string
                                type: object
                            type: object
                          systemLoggerResources:
                            description: SystemLoggerResources is the cpu and memory
                              resources for the server-system-logger container.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                        required:
                          - size
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    jmxInitContainerImage:
                      default:
                        name: busybox
                        tag: 1.34.1
                      description: The image to use in each Cassandra pod for the (short-lived)
                        init container that enables JMX remote authentication on Cassandra
                        pods. This is only useful when authentication is enabled in
                        the cluster. The default is "busybox:1.34.1".
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                            - Always
                            - IfNotPresent
                            - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    mgmtAPIHeap:
                      anyOf:
                        - type: integer
                        - type: string
                      description: MgmtAPIHeap defines the amount of memory devoted
                        to the management api heap.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    networking:
                      description: Networking enables host networking and configures
                        a NodePort ports.
                      properties:
                        hostNetwork:
                          type: boolean
                        nodePort:
                          properties:
                            internode:
                              type: integer
                            internodeSSL:
                              type: integer
                            native:
                              type: integer
                            nativeSSL:
                              type: integer
                          type: object
                      type: object
                    racks:
                      description: Racks is a list of named racks. Note that racks are
                        used to create node affinity. //
                      items:
                        description: Rack ...
                        properties:
                          name:
                            description: The rack name
                            minLength: 2
                            type: string
                          nodeAffinityLabels:
                            additionalProperties:
                              type: string
                            description: NodeAffinityLabels to pin the rack, using node
                              affinity
                            type: object
                          zone:
                            description: Deprecated. Use nodeAffinityLabels instead.
                              Zone name to pin the rack, using node affinity
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    resources:
                      description: Resources is the cpu and memory resources for the
                        cassandra container.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    serverImage:
                      description: ServerImage is the image for the cassandra container.
                        Note that this should be a management-api image. If left empty
                        the operator will choose a default image based on ServerVersion.
                      type: string
                    serverVersion:
                      description: ServerVersion is the Cassandra version.
                      pattern: (3\.11\.\d+)|(4\.0\.\d+)
                      type: string
                    storageConfig:
                      description: StorageConfig is the persistent storage requirements
                        for each Cassandra pod. This includes everything under /var/lib/cassandra,
                        namely the commit log and data directories.
                      properties:
                        additionalVolumes:
                          items:
                            description: StorageConfig defines additional storage configurations
                            properties:
                              mountPath:
                                description: Mount path into cassandra container
                                type: string
                              name:
                                description: Name of the pvc
                                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                                type: string
                              pvcSpec:
                                description: Persistent volume claim spec
                                properties:
                                  accessModes:
                                    description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                    items:
                                      type: string
                                    type: array
                                  dataSource:
                                    description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim) If the
                                    provisioner or an external controller can support
                                    the specified data source, it will create a new
                                    volume based on the contents of the specified
                                    data source. If the AnyVolumeDataSource feature
                                    gate is enabled, this field will always have the
                                    same contents as the DataSourceRef field.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  dataSourceRef:
                                    description: 'Specifies the object from which to
                                    populate the volume with data, if a non-empty
                                    volume is desired. This may be any local object
                                    from a non-empty API group (non core object) or
                                    a PersistentVolumeClaim object. When this field
                                    is specified, volume binding will only succeed
                                    if the type of the specified object matches some
                                    installed volume populator or dynamic provisioner.
                                    This field will replace the functionality of the
                                    DataSource field and as such if both fields are
                                    non-empty, they must have the same value. For
                                    backwards compatibility, both fields (DataSource
                                    and DataSourceRef) will be set to the same value
                                    automatically if one of them is empty and the
                                    other is non-empty. There are two important differences
                                    between DataSource and DataSourceRef: * While
                                    DataSource only allows two specific types of objects,
                                    DataSourceRef   allows any non-core object, as
                                    well as PersistentVolumeClaim objects. * While
                                    DataSource ignores disallowed values (dropping
                                    them), DataSourceRef   preserves all values, and
                                    generates an error if a disallowed value is   specified.
                                    (Alpha) Using this field requires the AnyVolumeDataSource
                                    feature gate to be enabled.'
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource
                                          being referenced. If APIGroup is not specified,
                                          the specified Kind must be in the core API
                                          group. For any other third-party types, APIGroup
                                          is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being
                                          referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being
                                          referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  resources:
                                    description: 'Resources represents the minimum resources
                                    the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                    properties:
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                  selector:
                                    description: A label query over volumes to consider
                                      for binding.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  storageClassName:
                                    description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                    type: string
                                  volumeMode:
                                    description: volumeMode defines what type of volume
                                      is required by the claim. Value of Filesystem
                                      is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: VolumeName is the binding reference
                                      to the PersistentVolume backing this claim.
                                    type: string
                                type: object
                            required:
                              - mountPath
                              - name
                              - pvcSpec
                            type: object
                          type: array
                        cassandraDataVolumeClaimSpec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for provider-specific
                            attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                              modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: 'This field can be used to specify either:
                              * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim) If the provisioner
                              or an external controller can support the specified
                              data source, it will create a new volume based on the
                              contents of the specified data source. If the AnyVolumeDataSource
                              feature gate is enabled, this field will always have
                              the same contents as the DataSourceRef field.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            dataSourceRef:
                              description: 'Specifies the object from which to populate
                              the volume with data, if a non-empty volume is desired.
                              This may be any local object from a non-empty API group
                              (non core object) or a PersistentVolumeClaim object.
                              When this field is specified, volume binding will only
                              succeed if the type of the specified object matches
                              some installed volume populator or dynamic provisioner.
                              This field will replace the functionality of the DataSource
                              field and as such if both fields are non-empty, they
                              must have the same value. For backwards compatibility,
                              both fields (DataSource and DataSourceRef) will be set
                              to the same value automatically if one of them is empty
                              and the other is non-empty. There are two important
                              differences between DataSource and DataSourceRef: *
                              While DataSource only allows two specific types of objects,
                              DataSourceRef   allows any non-core object, as well
                              as PersistentVolumeClaim objects. * While DataSource
                              ignores disallowed values (dropping them), DataSourceRef   preserves
                              all values, and generates an error if a disallowed value
                              is   specified. (Alpha) Using this field requires the
                              AnyVolumeDataSource feature gate to be enabled.'
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being referenced
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                              the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider for
                                binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector
                                    requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values.
                                          If the operator is In or NotIn, the values
                                          array must be non-empty. If the operator is
                                          Exists or DoesNotExist, the values array must
                                          be empty. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs.
                                    A single {key,value} in the matchLabels map is equivalent
                                    to an element of matchExpressions, whose key field
                                    is "key", the operator is "In", and the values array
                                    contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                              claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume is
                                required by the claim. Value of Filesystem is implied
                                when not included in claim spec.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to the
                                PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                    superuserSecretRef:
                      description: The reference to the superuser secret to use for
                        Cassandra. If unspecified, a default secret will be generated
                        with a random password; the generated secret name will be "<cluster_name>-superuser"
                        where <cluster_name> is the K8ssandraCluster CRD name.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    systemLoggerResources:
                      description: SystemLoggerResources is the cpu and memory resources
                        for the server-system-logger container.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                medusa:
                  description: Medusa defines the desired deployment characteristics
                    for Medusa in this K8ssandraCluster. If this is non-nil, Medusa
                    will be deployed in every Cassandra pod in this K8ssandraCluster.
                  properties:
                    cassandraUserSecretRef:
                      description: 'Defines the username and password that Medusa will
                      use to authenticate CQL connections to Cassandra clusters. These
                      credentials will be automatically turned into CQL roles by cass-operator
                      when bootstrapping the datacenter, then passed to the Medusa
                      instances, so that it can authenticate against nodes in the
                      datacenter using CQL. The secret must be in the same namespace
                      as Cassandra and must contain two keys: "username" and "password".'
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    containerImage:
                      description: MedusaContainerImage is the image characteristics
                        to use for Medusa containers. Leave nil to use a default image.
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                            - Always
                            - IfNotPresent
                            - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    securityContext:
                      description: SecurityContext applied to the Medusa containers.
                      properties:
                        allowPrivilegeEscalation:
                          description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN'
                          type: boolean
                        capabilities:
                          description: The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the
                            container runtime.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: Run container in privileged mode. Processes in
                            privileged containers are essentially equivalent to root
                            on the host. Defaults to false.
                          type: boolean
                        procMount:
                          description: procMount denotes the type of proc mount to use
                            for the containers. The default is DefaultProcMount which
                            uses the container runtime defaults for readonly paths and
                            masked paths. This requires the ProcMountType feature flag
                            to be enabled.
                          type: string
                        readOnlyRootFilesystem:
                          description: Whether this container has a read-only root filesystem.
                            Default is false.
                          type: boolean
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a non-root
                            user. If true, the Kubelet will validate the image at runtime
                            to ensure that it does not run as UID 0 (root) and fail
                            to start the container if it does. If unset or false, no
                            such validation will be performed. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata if
                            unspecified. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random
                            SELinux context for each container.  May also be set in
                            PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: The seccomp options to use by this container.
                            If seccomp options are provided at both the pod & container
                            level, the container options override the pod options.
                          properties:
                            localhostProfile:
                              description: localhostProfile indicates a profile defined
                                in a file on the node should be used. The profile must
                                be preconfigured on the node to work. Must be a descending
                                path, relative to the kubelet's configured seccomp profile
                                location. Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                              type: string
                          required:
                            - type
                          type: object
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options from the PodSecurityContext
                            will be used. If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: HostProcess determines if a container should
                                be run as a 'Host Process' container. This field is
                                alpha-level and will only be honored by components that
                                enable the WindowsHostProcessContainers feature flag.
                                Setting this field without the feature flag will result
                                in errors when validating the Pod. All of a Pod's containers
                                must have the same effective HostProcess value (it is
                                not allowed to have a mix of HostProcess containers
                                and non-HostProcess containers).  In addition, if HostProcess
                                is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set in
                                PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              type: string
                          type: object
                      type: object
                    storageProperties:
                      description: Provides all storage backend related properties for
                        backups.
                      properties:
                        apiProfile:
                          description: AWS Profile to use for authentication.
                          type: string
                        backupGracePeriodInDays:
                          description: Age after which orphan sstables can be deleted
                            from the storage backend. Protects from race conditions
                            between purge and ongoing backups. Defaults to 10 days.
                          type: integer
                        bucketName:
                          description: The name of the bucket to use for the backups.
                          type: string
                        concurrentTransfers:
                          default: 1
                          description: Number of concurrent uploads. Helps maximizing
                            the speed of uploads but puts more pressure on the network.
                            Defaults to 1.
                          type: integer
                        host:
                          description: Host to connect to for the storage backend.
                          type: string
                        maxBackupAge:
                          default: 0
                          description: Maximum backup age that the purge process should
                            observe.
                          type: integer
                        maxBackupCount:
                          default: 0
                          description: Maximum number of backups to keep (used by the
                            purge process). Default is unlimited.
                          type: integer
                        multiPartUploadThreshold:
                          default: 104857600
                          description: File size over which cloud specific cli tools
                            are used for transfer. Defaults to 100 MB.
                          type: integer
                        podStorage:
                          description: Pod storage settings for the local storage provider
                          properties:
                            accessModes:
                              description: Pod local storage access modes
                              items:
                                type: string
                              type: array
                            size:
                              anyOf:
                                - type: integer
                                - type: string
                              default: 10Gi
                              description: Size of the pod's storage in bytes. Defaults
                                to 10 GB.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            storageClassName:
                              description: Storage class name to use for the pod's storage.
                              type: string
                          type: object
                        port:
                          description: Port to connect to for the storage backend.
                          type: integer
                        prefix:
                          description: Name of the top level folder in the backup bucket.
                            If empty, the cluster name will be used.
                          type: string
                        region:
                          description: Region of the storage bucket. Defaults to "default".
                          type: string
                        secure:
                          description: Whether to use SSL for the storage backend.
                          type: boolean
                        storageProvider:
                          description: The storage backend to use for the backups.
                          enum:
                            - local
                            - google_storage
                            - azure_blobs
                            - s3
                            - s3_compatible
                            - s3_rgw
                            - ibm_storage
                          type: string
                        storageSecretRef:
                          description: Kubernetes Secret that stores the key file for
                            the storage provider's API. If using 'local' storage, this
                            value is ignored.
                          type: string
                        transferMaxBandwidth:
                          default: 50MB/s
                          description: Max upload bandwidth in MB/s. Defaults to 50
                            MB/s.
                          type: string
                      type: object
                  type: object
                reaper:
                  description: Reaper defines the desired deployment characteristics
                    for Reaper in this K8ssandraCluster. If this is non-nil, Reaper
                    will be deployed on every Cassandra datacenter in this K8ssandraCluster.
                  properties:
                    ServiceAccountName:
                      default: default
                      type: string
                    affinity:
                      description: Affinity applied to the Reaper pods.
                      properties:
                        nodeAffinity:
                          description: Describes node affinity scheduling rules for
                            the pod.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e. it's a no-op).
                                  A null preferred scheduling term matches no objects
                                  (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated with
                                      the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - preference
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to an update), the system
                                may or may not try to eventually evict the pod from
                                its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: A null or empty node selector term
                                      matches no objects. The requirements of them are
                                      ANDed. The TopologySelectorTerm type implements
                                      a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              required:
                                - nodeSelectorTerms
                              type: object
                          type: object
                        podAffinity:
                          description: Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc. as some
                            other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is beta-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to a pod label update),
                                the system may or may not try to eventually evict the
                                pod from its node. When there are multiple elements,
                                the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is beta-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          description: Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node, zone, etc.
                            as some other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the anti-affinity expressions
                                specified by this field, but it may choose a node that
                                violates one or more of the expressions. The node that
                                is most preferred is the one with the greatest sum of
                                weights, i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                anti-affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is beta-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the anti-affinity requirements specified
                                by this field are not met at scheduling time, the pod
                                will not be scheduled onto the node. If the anti-affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a pod
                                label update), the system may or may not try to eventually
                                evict the pod from its node. When there are multiple
                                elements, the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is beta-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                      type: object
                    autoScheduling:
                      description: Auto scheduling properties. When you enable the auto-schedule
                        feature, Reaper dynamically schedules repairs for all non-system
                        keyspaces in a cluster. A cluster's keyspaces are monitored
                        and any modifications (additions or removals) are detected.
                        When a new keyspace is created, a new repair schedule is created
                        automatically for that keyspace. Conversely, when a keyspace
                        is removed, the corresponding repair schedule is deleted.
                      properties:
                        enabled:
                          default: false
                          type: boolean
                        excludedClusters:
                          description: ExcludedClusters are the clusters that are to
                            be excluded from the repair schedule.
                          items:
                            type: string
                          type: array
                        excludedKeyspaces:
                          description: ExcludedKeyspaces are the keyspaces that are
                            to be excluded from the repair schedule.
                          items:
                            type: string
                          type: array
                        initialDelayPeriod:
                          default: PT15S
                          description: InitialDelay is the amount of delay time before
                            the schedule period starts. Must be a valid ISO-8601 duration
                            string. The default is "PT15S" (15 seconds).
                          pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                          type: string
                        percentUnrepairedThreshold:
                          default: 10
                          description: PercentUnrepairedThreshold is the percentage
                            of unrepaired data over which an incremental repair should
                            be started. Only relevant when using repair type INCREMENTAL.
                          maximum: 100
                          minimum: 0
                          type: integer
                        periodBetweenPolls:
                          default: PT10M
                          description: PeriodBetweenPolls is the interval time to wait
                            before checking whether to start a repair task. Must be
                            a valid ISO-8601 duration string. The default is "PT10M"
                            (10 minutes).
                          pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                          type: string
                        repairType:
                          default: AUTO
                          description: 'RepairType is the type of repair to create:
                          - REGULAR creates a regular repair (non-adaptive and non-incremental);
                          - ADAPTIVE creates an adaptive repair; adaptive repairs
                          are most suited for Cassandra 3. - INCREMENTAL creates an
                          incremental repair; incremental repairs should only be used
                          with Cassandra 4+. - AUTO chooses between ADAPTIVE and INCREMENTAL
                          depending on the Cassandra server version; ADAPTIVE for
                          Cassandra 3 and INCREMENTAL for Cassandra 4+.'
                          enum:
                            - REGULAR
                            - ADAPTIVE
                            - INCREMENTAL
                            - AUTO
                          type: string
                        scheduleSpreadPeriod:
                          default: PT6H
                          description: ScheduleSpreadPeriod is the time spacing between
                            each of the repair schedules that is to be carried out.
                            Must be a valid ISO-8601 duration string. The default is
                            "PT6H" (6 hours).
                          pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                          type: string
                        timeBeforeFirstSchedule:
                          default: PT5M
                          description: TimeBeforeFirstSchedule is the grace period before
                            the first repair in the schedule is started. Must be a valid
                            ISO-8601 duration string. The default is "PT5M" (5 minutes).
                          pattern: ([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?
                          type: string
                      type: object
                    cassandraUserSecretRef:
                      description: 'Defines the username and password that Reaper will
                      use to authenticate CQL connections to Cassandra clusters. These
                      credentials will be automatically turned into CQL roles by cass-operator
                      when bootstrapping the datacenter, then passed to the Reaper
                      instance, so that it can authenticate against nodes in the datacenter
                      using CQL. If CQL authentication is not required, leave this
                      field empty. The secret must be in the same namespace as Reaper
                      itself and must contain two keys: "username" and "password".'
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    containerImage:
                      default:
                        name: cassandra-reaper
                        repository: thelastpickle
                        tag: 3.1.0
                      description: The image to use for the Reaper pod main container.
                        The default is "thelastpickle/cassandra-reaper:3.1.0".
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                            - Always
                            - IfNotPresent
                            - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    initContainerImage:
                      default:
                        name: cassandra-reaper
                        repository: thelastpickle
                        tag: 3.1.0
                      description: The image to use for the Reaper pod init container
                        (that performs schema migrations). The default is "thelastpickle/cassandra-reaper:3.1.0".
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                            - Always
                            - IfNotPresent
                            - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    initContainerSecurityContext:
                      description: InitContainerSecurityContext is the SecurityContext
                        applied to the Reaper init container, used to perform schema
                        migrations.
                      properties:
                        allowPrivilegeEscalation:
                          description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN'
                          type: boolean
                        capabilities:
                          description: The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the
                            container runtime.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: Run container in privileged mode. Processes in
                            privileged containers are essentially equivalent to root
                            on the host. Defaults to false.
                          type: boolean
                        procMount:
                          description: procMount denotes the type of proc mount to use
                            for the containers. The default is DefaultProcMount which
                            uses the container runtime defaults for readonly paths and
                            masked paths. This requires the ProcMountType feature flag
                            to be enabled.
                          type: string
                        readOnlyRootFilesystem:
                          description: Whether this container has a read-only root filesystem.
                            Default is false.
                          type: boolean
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a non-root
                            user. If true, the Kubelet will validate the image at runtime
                            to ensure that it does not run as UID 0 (root) and fail
                            to start the container if it does. If unset or false, no
                            such validation will be performed. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata if
                            unspecified. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random
                            SELinux context for each container.  May also be set in
                            PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: The seccomp options to use by this container.
                            If seccomp options are provided at both the pod & container
                            level, the container options override the pod options.
                          properties:
                            localhostProfile:
                              description: localhostProfile indicates a profile defined
                                in a file on the node should be used. The profile must
                                be preconfigured on the node to work. Must be a descending
                                path, relative to the kubelet's configured seccomp profile
                                location. Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                              type: string
                          required:
                            - type
                          type: object
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options from the PodSecurityContext
                            will be used. If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: HostProcess determines if a container should
                                be run as a 'Host Process' container. This field is
                                alpha-level and will only be honored by components that
                                enable the WindowsHostProcessContainers feature flag.
                                Setting this field without the feature flag will result
                                in errors when validating the Pod. All of a Pod's containers
                                must have the same effective HostProcess value (it is
                                not allowed to have a mix of HostProcess containers
                                and non-HostProcess containers).  In addition, if HostProcess
                                is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set in
                                PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              type: string
                          type: object
                      type: object
                    jmxUserSecretRef:
                      description: 'Defines the username and password that Reaper will
                      use to authenticate JMX connections to Cassandra clusters. These
                      credentials will be automatically passed to each Cassandra node
                      in the datacenter, as well as to the Reaper instance, so that
                      the latter can authenticate against the former. If JMX authentication
                      is not required, leave this field empty. The secret must be
                      in the same namespace as Reaper itself and must contain two
                      keys: "username" and "password".'
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    keyspace:
                      default: reaper_db
                      description: The keyspace to use to store Reaper's state. Will
                        default to "reaper_db" if unspecified. Will be created if it
                        does not exist, and if this Reaper resource is managed by K8ssandra.
                      type: string
                    livenessProbe:
                      description: LivenessProbe sets the Reaper liveness probe. Leave
                        nil to use defaults.
                      properties:
                        exec:
                          description: One and only one of the following should be specified.
                            Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside
                                the container, the working directory for the command  is
                                root ('/') in the container's filesystem. The command
                                is simply exec'd, it is not run inside a shell, so traditional
                                shell instructions ('|', etc) won't work. To use a shell,
                                you need to explicitly call out to that shell. Exit
                                status of 0 is treated as live/healthy and non-zero
                                is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to
                            be considered failed after having succeeded. Defaults to
                            3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to
                                  be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Name or number of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                            - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to
                            be considered successful after having failed. Defaults to
                            1. Must be 1 for liveness and startup. Minimum value is
                            1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Number or name of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                            - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs to
                            terminate gracefully upon probe failure. The grace period
                            is the duration in seconds after the processes running in
                            the pod are sent a termination signal and the time when
                            the processes are forcibly halted with a kill signal. Set
                            this value longer than the expected cleanup time for your
                            process. If this value is nil, the pod's terminationGracePeriodSeconds
                            will be used. Otherwise, this value overrides the value
                            provided by the pod spec. Value must be non-negative integer.
                            The value zero indicates stop immediately via the kill signal
                            (no opportunity to shut down). This is a beta field and
                            requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is
                            used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    podSecurityContext:
                      description: PodSecurityContext contains a pod-level SecurityContext
                        to apply to Reaper pods.
                      properties:
                        fsGroup:
                          description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                          format: int64
                          type: integer
                        fsGroupChangePolicy:
                          description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used.'
                          type: string
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a non-root
                            user. If true, the Kubelet will validate the image at runtime
                            to ensure that it does not run as UID 0 (root) and fail
                            to start the container if it does. If unset or false, no
                            such validation will be performed. May also be set in SecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata if
                            unspecified. May also be set in SecurityContext.  If set
                            in both SecurityContext and PodSecurityContext, the value
                            specified in SecurityContext takes precedence for that container.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to all containers.
                            If unspecified, the container runtime will allocate a random
                            SELinux context for each container.  May also be set in
                            SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence
                            for that container.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: The seccomp options to use by the containers
                            in this pod.
                          properties:
                            localhostProfile:
                              description: localhostProfile indicates a profile defined
                                in a file on the node should be used. The profile must
                                be preconfigured on the node to work. Must be a descending
                                path, relative to the kubelet's configured seccomp profile
                                location. Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                              type: string
                          required:
                            - type
                          type: object
                        supplementalGroups:
                          description: A list of groups applied to the first process
                            run in each container, in addition to the container's primary
                            GID.  If unspecified, no groups will be added to any container.
                          items:
                            format: int64
                            type: integer
                          type: array
                        sysctls:
                          description: Sysctls hold a list of namespaced sysctls used
                            for the pod. Pods with unsupported sysctls (by the container
                            runtime) might fail to launch.
                          items:
                            description: Sysctl defines a kernel parameter to be set
                            properties:
                              name:
                                description: Name of a property to set
                                type: string
                              value:
                                description: Value of a property to set
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options within a container's
                            SecurityContext will be used. If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: HostProcess determines if a container should
                                be run as a 'Host Process' container. This field is
                                alpha-level and will only be honored by components that
                                enable the WindowsHostProcessContainers feature flag.
                                Setting this field without the feature flag will result
                                in errors when validating the Pod. All of a Pod's containers
                                must have the same effective HostProcess value (it is
                                not allowed to have a mix of HostProcess containers
                                and non-HostProcess containers).  In addition, if HostProcess
                                is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set in
                                PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              type: string
                          type: object
                      type: object
                    readinessProbe:
                      description: ReadinessProbe sets the Reaper readiness probe. Leave
                        nil to use defaults.
                      properties:
                        exec:
                          description: One and only one of the following should be specified.
                            Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside
                                the container, the working directory for the command  is
                                root ('/') in the container's filesystem. The command
                                is simply exec'd, it is not run inside a shell, so traditional
                                shell instructions ('|', etc) won't work. To use a shell,
                                you need to explicitly call out to that shell. Exit
                                status of 0 is treated as live/healthy and non-zero
                                is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to
                            be considered failed after having succeeded. Defaults to
                            3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to
                                  be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Name or number of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                            - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to
                            be considered successful after having failed. Defaults to
                            1. Must be 1 for liveness and startup. Minimum value is
                            1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Number or name of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                            - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs to
                            terminate gracefully upon probe failure. The grace period
                            is the duration in seconds after the processes running in
                            the pod are sent a termination signal and the time when
                            the processes are forcibly halted with a kill signal. Set
                            this value longer than the expected cleanup time for your
                            process. If this value is nil, the pod's terminationGracePeriodSeconds
                            will be used. Otherwise, this value overrides the value
                            provided by the pod spec. Value must be non-negative integer.
                            The value zero indicates stop immediately via the kill signal
                            (no opportunity to shut down). This is a beta field and
                            requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is
                            used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    securityContext:
                      description: SecurityContext applied to the Reaper main container.
                      properties:
                        allowPrivilegeEscalation:
                          description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN'
                          type: boolean
                        capabilities:
                          description: The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the
                            container runtime.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: Run container in privileged mode. Processes in
                            privileged containers are essentially equivalent to root
                            on the host. Defaults to false.
                          type: boolean
                        procMount:
                          description: procMount denotes the type of proc mount to use
                            for the containers. The default is DefaultProcMount which
                            uses the container runtime defaults for readonly paths and
                            masked paths. This requires the ProcMountType feature flag
                            to be enabled.
                          type: string
                        readOnlyRootFilesystem:
                          description: Whether this container has a read-only root filesystem.
                            Default is false.
                          type: boolean
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a non-root
                            user. If true, the Kubelet will validate the image at runtime
                            to ensure that it does not run as UID 0 (root) and fail
                            to start the container if it does. If unset or false, no
                            such validation will be performed. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata if
                            unspecified. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random
                            SELinux context for each container.  May also be set in
                            PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: The seccomp options to use by this container.
                            If seccomp options are provided at both the pod & container
                            level, the container options override the pod options.
                          properties:
                            localhostProfile:
                              description: localhostProfile indicates a profile defined
                                in a file on the node should be used. The profile must
                                be preconfigured on the node to work. Must be a descending
                                path, relative to the kubelet's configured seccomp profile
                                location. Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                              type: string
                          required:
                            - type
                          type: object
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options from the PodSecurityContext
                            will be used. If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: HostProcess determines if a container should
                                be run as a 'Host Process' container. This field is
                                alpha-level and will only be honored by components that
                                enable the WindowsHostProcessContainers feature flag.
                                Setting this field without the feature flag will result
                                in errors when validating the Pod. All of a Pod's containers
                                must have the same effective HostProcess value (it is
                                not allowed to have a mix of HostProcess containers
                                and non-HostProcess containers).  In addition, if HostProcess
                                is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set in
                                PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              type: string
                          type: object
                      type: object
                    tolerations:
                      description: Tolerations applied to the Reaper pods.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified, allowed
                              values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key is empty,
                              operator must be Exists; this combination means to match
                              all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship to
                              the value. Valid operators are Exists and Equal. Defaults
                              to Equal. Exists is equivalent to wildcard for value,
                              so that a pod can tolerate all taints of a particular
                              category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the taint
                              forever (do not evict). Zero and negative values will
                              be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                    uiUserSecretRef:
                      description: Defines the secret which contains the username and
                        password for the Reaper UI and REST API authentication.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  type: object
                stargate:
                  description: Stargate defines the desired deployment characteristics
                    for Stargate in this K8ssandraCluster. If this is non-nil, Stargate
                    will be deployed on every Cassandra datacenter in this K8ssandraCluster.
                  properties:
                    affinity:
                      description: Affinity is the affinity to apply to all the Stargate
                        pods. Leave nil to let the controller reuse the same affinity
                        rules used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
                      properties:
                        nodeAffinity:
                          description: Describes node affinity scheduling rules for
                            the pod.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node matches the corresponding matchExpressions;
                                the node(s) with the highest sum are the most preferred.
                              items:
                                description: An empty preferred scheduling term matches
                                  all objects with implicit weight 0 (i.e. it's a no-op).
                                  A null preferred scheduling term matches no objects
                                  (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated with
                                      the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - preference
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to an update), the system
                                may or may not try to eventually evict the pod from
                                its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: A null or empty node selector term
                                      matches no objects. The requirements of them are
                                      ANDed. The TopologySelectorTerm type implements
                                      a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: A node selector requirement is
                                            a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: The label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: Represents a key's relationship
                                                to a set of values. Valid operators
                                                are In, NotIn, Exists, DoesNotExist.
                                                Gt, and Lt.
                                              type: string
                                            values:
                                              description: An array of string values.
                                                If the operator is In or NotIn, the
                                                values array must be non-empty. If the
                                                operator is Exists or DoesNotExist,
                                                the values array must be empty. If the
                                                operator is Gt or Lt, the values array
                                                must have a single element, which will
                                                be interpreted as an integer. This array
                                                is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              required:
                                - nodeSelectorTerms
                              type: object
                          type: object
                        podAffinity:
                          description: Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc. as some
                            other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the affinity expressions specified
                                by this field, but it may choose a node that violates
                                one or more of the expressions. The node that is most
                                preferred is the one with the greatest sum of weights,
                                i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is beta-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the affinity requirements specified by
                                this field are not met at scheduling time, the pod will
                                not be scheduled onto the node. If the affinity requirements
                                specified by this field cease to be met at some point
                                during pod execution (e.g. due to a pod label update),
                                the system may or may not try to eventually evict the
                                pod from its node. When there are multiple elements,
                                the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is beta-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          description: Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node, zone, etc.
                            as some other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: The scheduler will prefer to schedule pods
                                to nodes that satisfy the anti-affinity expressions
                                specified by this field, but it may choose a node that
                                violates one or more of the expressions. The node that
                                is most preferred is the one with the greatest sum of
                                weights, i.e. for each node that meets all of the scheduling
                                requirements (resource request, requiredDuringScheduling
                                anti-affinity expressions, etc.), compute a sum by iterating
                                through the elements of this field and adding "weight"
                                to the sum if the node has pods which matches the corresponding
                                podAffinityTerm; the node(s) with the highest sum are
                                the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources,
                                          in this case pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaceSelector:
                                        description: A label query over the set of namespaces
                                          that the term applies to. The term is applied
                                          to the union of the namespaces selected by
                                          this field and the ones listed in the namespaces
                                          field. null selector and null or empty namespaces
                                          list means "this pod's namespace". An empty
                                          selector ({}) matches all namespaces. This
                                          field is beta-level and is only honored when
                                          PodAffinityNamespaceSelector feature is enabled.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      namespaces:
                                        description: namespaces specifies a static list
                                          of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces
                                          listed in this field and the ones selected
                                          by namespaceSelector. null or empty namespaces
                                          list and null namespaceSelector means "this
                                          pod's namespace"
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: This pod should be co-located (affinity)
                                          or not co-located (anti-affinity) with the
                                          pods matching the labelSelector in the specified
                                          namespaces, where co-located is defined as
                                          running on a node whose value of the label
                                          with key topologyKey matches that of any node
                                          on which any of the selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                      - topologyKey
                                    type: object
                                  weight:
                                    description: weight associated with matching the
                                      corresponding podAffinityTerm, in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - podAffinityTerm
                                  - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: If the anti-affinity requirements specified
                                by this field are not met at scheduling time, the pod
                                will not be scheduled onto the node. If the anti-affinity
                                requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a pod
                                label update), the system may or may not try to eventually
                                evict the pod from its node. When there are multiple
                                elements, the lists of nodes corresponding to each podAffinityTerm
                                are intersected, i.e. all terms must be satisfied.
                              items:
                                description: Defines a set of pods (namely those matching
                                  the labelSelector relative to the given namespace(s))
                                  that this pod should be co-located (affinity) or not
                                  co-located (anti-affinity) with, where co-located
                                  is defined as running on a node whose value of the
                                  label with key <topologyKey> matches that of any node
                                  on which a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaceSelector:
                                    description: A label query over the set of namespaces
                                      that the term applies to. The term is applied
                                      to the union of the namespaces selected by this
                                      field and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list
                                      means "this pod's namespace". An empty selector
                                      ({}) matches all namespaces. This field is beta-level
                                      and is only honored when PodAffinityNamespaceSelector
                                      feature is enabled.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label
                                          selector requirements. The requirements are
                                          ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a key,
                                            and an operator that relates the key and
                                            values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only "value".
                                          The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies a static list
                                      of namespace names that the term applies to. The
                                      term is applied to the union of the namespaces
                                      listed in this field and the ones selected by
                                      namespaceSelector. null or empty namespaces list
                                      and null namespaceSelector means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified namespaces,
                                      where co-located is defined as running on a node
                                      whose value of the label with key topologyKey
                                      matches that of any node on which any of the selected
                                      pods is running. Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              type: array
                          type: object
                      type: object
                    allowStargateOnDataNodes:
                      default: false
                      description: 'AllowStargateOnDataNodes allows Stargate pods to
                      be scheduled on a worker node already hosting data pods for
                      this datacenter. The default is false, which means that Stargate
                      pods will be scheduled on separate worker nodes. Note: if the
                      datacenter pods have HostNetwork:true, then the Stargate pods
                      will inherit of it, in which case it is possible that Stargate
                      nodes won''t be allowed to sit on data nodes even if this property
                      is set to true, because of port conflicts on the same IP address.'
                      type: boolean
                    cassandraConfigMapRef:
                      description: CassandraConfigMapRef is a reference to a ConfigMap
                        that holds Cassandra configuration. The map should have a key
                        named cassandra_yaml.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    containerImage:
                      default:
                        repository: stargateio
                        tag: v1.0.45
                      description: ContainerImage is the image characteristics to use
                        for Stargate containers. Leave nil to use a default image.
                      properties:
                        name:
                          description: The image name to use.
                          type: string
                        pullPolicy:
                          description: The image pull policy to use. Defaults to "Always"
                            if the tag is "latest", otherwise to "IfNotPresent".
                          enum:
                            - Always
                            - IfNotPresent
                            - Never
                          type: string
                        pullSecretRef:
                          description: 'The secret to use when pulling the image from
                          private repositories. If specified, this secret will be
                          passed to individual puller implementations for them to
                          use. For example, in the case of Docker, only DockerConfig
                          type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        registry:
                          default: docker.io
                          description: The Docker registry to use. Defaults to "docker.io",
                            the official Docker Hub.
                          type: string
                        repository:
                          description: The Docker repository to use.
                          type: string
                        tag:
                          default: latest
                          description: The image tag to use. Defaults to "latest".
                          type: string
                      type: object
                    heapSize:
                      anyOf:
                        - type: integer
                        - type: string
                      default: 256Mi
                      description: 'HeapSize sets the JVM heap size to use for Stargate.
                      If no Resources are specified, this value will also be used
                      to set a default memory request and limit for the Stargate pods:
                      these will be set to HeapSize x2 and x4, respectively.'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    livenessProbe:
                      description: LivenessProbe sets the Stargate liveness probe. Leave
                        nil to use defaults.
                      properties:
                        exec:
                          description: One and only one of the following should be specified.
                            Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside
                                the container, the working directory for the command  is
                                root ('/') in the container's filesystem. The command
                                is simply exec'd, it is not run inside a shell, so traditional
                                shell instructions ('|', etc) won't work. To use a shell,
                                you need to explicitly call out to that shell. Exit
                                status of 0 is treated as live/healthy and non-zero
                                is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to
                            be considered failed after having succeeded. Defaults to
                            3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to
                                  be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Name or number of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                            - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to
                            be considered successful after having failed. Defaults to
                            1. Must be 1 for liveness and startup. Minimum value is
                            1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Number or name of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                            - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs to
                            terminate gracefully upon probe failure. The grace period
                            is the duration in seconds after the processes running in
                            the pod are sent a termination signal and the time when
                            the processes are forcibly halted with a kill signal. Set
                            this value longer than the expected cleanup time for your
                            process. If this value is nil, the pod's terminationGracePeriodSeconds
                            will be used. Otherwise, this value overrides the value
                            provided by the pod spec. Value must be non-negative integer.
                            The value zero indicates stop immediately via the kill signal
                            (no opportunity to shut down). This is a beta field and
                            requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is
                            used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector is an optional map of label keys and
                        values to restrict the scheduling of Stargate nodes to workers
                        with matching labels. Leave nil to let the controller reuse
                        the same node selectors used for data pods in this datacenter,
                        if any. See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
                      type: object
                    readinessProbe:
                      description: ReadinessProbe sets the Stargate readiness probe.
                        Leave nil to use defaults.
                      properties:
                        exec:
                          description: One and only one of the following should be specified.
                            Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside
                                the container, the working directory for the command  is
                                root ('/') in the container's filesystem. The command
                                is simply exec'd, it is not run inside a shell, so traditional
                                shell instructions ('|', etc) won't work. To use a shell,
                                you need to explicitly call out to that shell. Exit
                                status of 0 is treated as live/healthy and non-zero
                                is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to
                            be considered failed after having succeeded. Defaults to
                            3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to
                                  be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Name or number of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                            - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to
                            be considered successful after having failed. Defaults to
                            1. Must be 1 for liveness and startup. Minimum value is
                            1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP
                          port. TCP hooks not yet supported TODO: implement a realistic
                          TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                              type: string
                            port:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Number or name of the port to access on the
                                container. Number must be in the range 1 to 65535. Name
                                must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                            - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs to
                            terminate gracefully upon probe failure. The grace period
                            is the duration in seconds after the processes running in
                            the pod are sent a termination signal and the time when
                            the processes are forcibly halted with a kill signal. Set
                            this value longer than the expected cleanup time for your
                            process. If this value is nil, the pod's terminationGracePeriodSeconds
                            will be used. Otherwise, this value overrides the value
                            provided by the pod spec. Value must be non-negative integer.
                            The value zero indicates stop immediately via the kill signal
                            (no opportunity to shut down). This is a beta field and
                            requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is
                            used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resources is the Kubernetes resource requests and
                        limits to apply, per Stargate pod. Leave nil to use defaults.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    serviceAccount:
                      default: default
                      description: ServiceAccount is the service account name to use
                        for Stargate pods.
                      type: string
                    size:
                      default: 1
                      description: Size is the number of Stargate instances to deploy
                        in each datacenter. They will be spread evenly across racks.
                      format: int32
                      minimum: 1
                      type: integer
                    telemetry:
                      description: Telemetry defines the desired telemetry integrations
                        to deploy targeting the Stargate pods for all DCs in this cluster
                        (unless overriden by DC specific settings)
                      properties:
                        prometheus:
                          properties:
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels are applied to all serviceMonitors
                                created.
                              type: object
                            enabled:
                              description: Enable the creation of Prometheus serviceMonitors
                                for this resource (Cassandra or Stargate).
                              type: boolean
                          type: object
                      type: object
                    tolerations:
                      description: Tolerations are tolerations to apply to the Stargate
                        pods. Leave nil to let the controller reuse the same tolerations
                        used for data pods in this datacenter, if any. See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified, allowed
                              values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration applies
                              to. Empty means match all taint keys. If the key is empty,
                              operator must be Exists; this combination means to match
                              all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship to
                              the value. Valid operators are Exists and Equal. Defaults
                              to Equal. Exists is equivalent to wildcard for value,
                              so that a pod can tolerate all taints of a particular
                              category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the taint
                              forever (do not evict). Zero and negative values will
                              be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                  required:
                    - size
                  type: object
              type: object
            status:
              description: K8ssandraClusterStatus defines the observed state of K8ssandraCluster
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transited from one status to another.
                        format: date-time
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                datacenters:
                  additionalProperties:
                    description: K8ssandraStatus defines the observed of a k8ssandra
                      instance
                    properties:
                      cassandra:
                        description: CassandraDatacenterStatus defines the observed
                          state of CassandraDatacenter
                        properties:
                          cassandraOperatorProgress:
                            description: Last known progress state of the Cassandra
                              Operator
                            type: string
                          conditions:
                            items:
                              properties:
                                lastTransitionTime:
                                  format: date-time
                                  type: string
                                message:
                                  type: string
                                reason:
                                  type: string
                                status:
                                  type: string
                                type:
                                  type: string
                              required:
                                - message
                                - reason
                                - status
                                - type
                              type: object
                            type: array
                          lastRollingRestart:
                            format: date-time
                            type: string
                          lastServerNodeStarted:
                            description: The timestamp when the operator last started
                              a Server node with the management API
                            format: date-time
                            type: string
                          nodeReplacements:
                            items:
                              type: string
                            type: array
                          nodeStatuses:
                            additionalProperties:
                              properties:
                                hostID:
                                  type: string
                              type: object
                            type: object
                          observedGeneration:
                            format: int64
                            type: integer
                          quietPeriod:
                            format: date-time
                            type: string
                          superUserUpserted:
                            description: Deprecated. Use usersUpserted instead. The
                              timestamp at which CQL superuser credentials were last
                              upserted to the management API
                            format: date-time
                            type: string
                          trackedTasks:
                            description: TrackedTasks tracks the tasks for completion
                              that were created by the cass-operator
                            items:
                              description: 'ObjectReference contains enough information
                              to let you inspect or modify the referred object. ---
                              New uses of this type are discouraged because of difficulty
                              describing its usage when embedded in APIs.  1. Ignored
                              fields.  It includes many fields which are not generally
                              honored.  For instance, ResourceVersion and FieldPath
                              are both very rarely valid in actual usage.  2. Invalid
                              usage help.  It is impossible to add specific help for
                              individual usage.  In most embedded usages, there are
                              particular     restrictions like, "must refer only to
                              types A and B" or "UID not honored" or "name must be
                              restricted".     Those cannot be well described when
                              embedded.  3. Inconsistent validation.  Because the
                              usages are different, the validation rules are different
                              by usage, which makes it hard for users to predict what
                              will happen.  4. The fields are both imprecise and overly
                              precise.  Kind is not a precise mapping to a URL. This
                              can produce ambiguity     during interpretation and
                              require a REST mapping.  In most cases, the dependency
                              is on the group,resource tuple     and the version of
                              the actual struct is irrelevant.  5. We cannot easily
                              change it.  Because this type is embedded in many locations,
                              updates to this type     will affect numerous schemas.  Don''t
                              make new APIs embed an underspecified API type they
                              do not control. Instead of using this type, create a
                              locally provided and used type that is well-focused
                              on your reference. For example, ServiceReferences for
                              admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                              .'
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            type: array
                          usersUpserted:
                            description: The timestamp at which managed cassandra users'
                              credentials were last upserted to the management API
                            format: date-time
                            type: string
                        type: object
                      reaper:
                        description: ReaperStatus defines the observed state of Reaper
                        properties:
                          conditions:
                            items:
                              properties:
                                lastTransitionTime:
                                  description: LastTransitionTime is the last time the
                                    condition transited from one status to another.
                                  format: date-time
                                  type: string
                                status:
                                  type: string
                                type:
                                  type: string
                              required:
                                - status
                                - type
                              type: object
                            type: array
                          progress:
                            description: Progress is the progress of this Reaper object.
                            enum:
                              - Pending
                              - Deploying
                              - Configuring
                              - Running
                            type: string
                        type: object
                      stargate:
                        description: StargateStatus defines the observed state of a
                          Stargate resource.
                        properties:
                          availableReplicas:
                            description: Total number of available pods targeted by
                              the Stargate deployment. Will be zero if the deployment
                              has not been created yet.
                            format: int32
                            type: integer
                          conditions:
                            items:
                              properties:
                                lastTransitionTime:
                                  description: LastTransitionTime is the last time the
                                    condition transited from one status to another.
                                  format: date-time
                                  type: string
                                status:
                                  type: string
                                type:
                                  type: string
                              required:
                                - status
                                - type
                              type: object
                            type: array
                          deploymentRefs:
                            description: DeploymentRefs is the names of the Deployment
                              objects that were created for this Stargate object.
                            items:
                              type: string
                            type: array
                          progress:
                            description: Progress is the progress of this Stargate object.
                            enum:
                              - Pending
                              - Deploying
                              - Running
                            type: string
                          readyReplicas:
                            description: ReadyReplicas is the total number of ready
                              pods targeted by the Stargate deployment. Will be zero
                              if the deployment has not been created yet.
                            format: int32
                            type: integer
                          readyReplicasRatio:
                            description: ReadyReplicasRatio is a "X/Y" string representing
                              the ratio between ReadyReplicas and Replicas in the Stargate
                              deployment.
                            pattern: \d+/\d+
                            type: string
                          replicas:
                            description: Total number of non-terminated pods targeted
                              by the Stargate deployment (their labels match the selector).
                              Will be zero if the deployment has not been created yet.
                            format: int32
                            type: integer
                          serviceRef:
                            description: ServiceRef is the name of the Service object
                              that was created for this Stargate object.
                            type: string
                          updatedReplicas:
                            description: UpdatedReplicas is the total number of non-terminated
                              pods targeted by the Stargate deployment that have the
                              desired template spec. Will be zero if the deployment
                              has not been created yet.
                            format: int32
                            type: integer
                        required:
                          - availableReplicas
                          - readyReplicas
                          - replicas
                          - updatedReplicas
                        type: object
                    type: object
                  description: "Datacenters maps the CassandraDatacenter name to a K8ssandraStatus.
                  The naming is a bit confusing but the mapping makes sense because
                  we have a CassandraDatacenter and then define other components like
                  Stargate and Reaper relative to it. I wanted to inline the field
                  but when I do it won't serialize. \n TODO Figure out how to inline
                  this field"
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []