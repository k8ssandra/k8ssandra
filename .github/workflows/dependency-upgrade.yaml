---
name: Dependency Upgrade Check

on:
  schedule:
    # Runs daily at noon UTC (I guess)
    - cron:  '0 12 * * *'
  workflow_dispatch:

jobs:
  check-upgrades:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dependency: ["Stargate", "Medusa", "Reaper", "cass-operator", "k8ssandra-operator", "medusa-operator", "reaper-operator"]
        include:
          - dependency: Stargate
            version_path: ".stargate.version"
            values_file: "charts/k8ssandra/values.yaml"
            operator: false
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/stargateio/stargate-3_11/tags?page_size=100"
            version_character: ""
          - dependency: Medusa
            version_path: ".medusa.image.tag"
            values_file: "charts/k8ssandra/values.yaml"
            operator: false
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/k8ssandra/medusa/tags?page_size=100"
            version_character: ""
          - dependency: Reaper
            version_path: ".reaper.image.tag"
            values_file: "charts/k8ssandra/values.yaml"
            operator: false
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/thelastpickle/cassandra-reaper/tags?page_size=100"
            version_character: ""
          - dependency: cass-operator
            app_version_path: ".appVersion"
            version_path: ".image.tag"
            values_file: "charts/cass-operator/values.yaml"
            chart_version_path: ".version"
            chart_file: "charts/cass-operator/Chart.yaml"
            operator: true
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/k8ssandra/cass-operator/tags?page_size=100"
            version_character: "v"
          - dependency: k8ssandra-operator
            app_version_path: ".appVersion"
            version_path: ".image.tag"
            values_file: "charts/k8ssandra-operator/values.yaml"
            chart_version_path: ".version"
            chart_file: "charts/k8ssandra-operator/Chart.yaml"
            operator: true
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/k8ssandra/k8ssandra-operator/tags?page_size=100"
            version_character: "v"
          - dependency: medusa-operator
            app_version_path: ".appVersion"
            version_path: ".image.tag"
            values_file: "charts/medusa-operator/values.yaml"
            chart_version_path: ".version"
            chart_file: "charts/medusa-operator/Chart.yaml"
            operator: true
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/k8ssandra/medusa-operator/tags?page_size=100"
            version_character: "v"
          - dependency: reaper-operator
            app_version_path: ".appVersion"
            version_path: ".image.tag"
            values_file: "charts/reaper-operator/values.yaml"
            chart_version_path: ".version"
            chart_file: "charts/reaper-operator/Chart.yaml"
            operator: true
            docker_hub_url: "https://registry.hub.docker.com/v2/repositories/k8ssandra/reaper-operator/tags?page_size=100"
            version_character: "v"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create env variables
        run: ./.github/scripts/env_variables.sh
      - name: Update PATH
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: Install YQ and JQ
        run: |
          scripts/install-yq.sh ${{ env.YQ_VERSION }}
          yq -V
          sudo apt-get update
          sudo apt-get install jq -y
          jq --version
      - name: Get current dependencies versions
        run: |
          
          if [ "${{ matrix.operator }}" == "true" ]; then
            CURRENT=$(yq e '${{ matrix.app_version_path }}' ${{ matrix.chart_file }})
          else
            CURRENT=$(yq e '${{ matrix.version_path }}' charts/k8ssandra/values.yaml)
          fi
          echo "CURRENT_VERSION=${CURRENT}" >> $GITHUB_ENV
          
      - name: Get latest released versions
        run: |
          LATEST=$(curl -L -s '${{ matrix.docker_hub_url }}'|jq -r '.results[]["name"]'|grep -Ei "^[v]{0,1}[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}$"|head -1|sed s/v//)

          echo "LATEST_VERSION=${LATEST}" >> $GITHUB_ENV
          
      - name: Check if a closed PR exists for the same version
        run: |
          CLOSED_UPGRADE_PR=$(curl -L -s "https://api.github.com/repos/k8ssandra/k8ssandra/pulls?state=closed"|jq -c '.[] | select( .title == "Upgrade ${{ matrix.dependency }} dependency ${{ env.CURRENT_VERSION }} -> ${{ env.LATEST_VERSION }}" )'|jq -r '.title')
          
          if [ -z "$CLOSED_UPGRADE_PR" ] && [ "${{ env.CURRENT_VERSION }}" != "${{ env.LATEST_VERSION }}" ]; then
            if [ "${{ matrix.operator }}" == "true" ]; then
              CHART_VERSION=$(yq eval '${{ matrix.chart_version_path }}' ${{ matrix.chart_file }})
              NEW_CHART_VERSION=$(echo "$CHART_VERSION"|awk -F. -v OFS=. '{$NF += 1 ; print}')
              yq eval "${{ matrix.app_version_path }} |= \"${{ env.LATEST_VERSION }}\"" ${{ matrix.chart_file }} -i
              yq eval "${{ matrix.chart_version_path }} |= \"${NEW_CHART_VERSION}\"" ${{ matrix.chart_file }} -i
              yq eval "(.dependencies.[]| select(.name == \"${{ matrix.dependency }}\")| ${{ matrix.chart_version_path }}) |= \"${NEW_CHART_VERSION}\"" charts/k8ssandra/Chart.yaml -i
              if [ "${{ matrix.dependency }}" == "cass-operator" ]; then
                # Update the cass-operator chart version in the k8ssandra-operator chart
                yq eval "(.dependencies.[]| select(.name == \"cass-operator\")| .version) |= \"${NEW_CHART_VERSION}\"" charts/k8ssandra-operator/Chart.yaml -i
              fi
            fi
            yq eval "${{ matrix.version_path }} |= \"${{ matrix.version_character }}${{ env.LATEST_VERSION }}\"" ${{ matrix.values_file }} -i
            echo "PR_EXISTS=no" >> $GITHUB_ENV
          else
            echo "PR_EXISTS=yes" >> $GITHUB_ENV
          fi

      - name: Send PR for upgrade
        if: ${{ env.PR_EXISTS == 'no' && env.CURRENT_VERSION != env.LATEST_VERSION }}
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.CREATE_PR_TOKEN }}
          commit-message: Upgrade ${{ matrix.dependency }} dependency from ${{ env.CURRENT_VERSION }} to ${{ env.LATEST_VERSION }}
          delete-branch: true
          branch: upgrade/upgrade-${{ matrix.dependency }}-${{ env.CURRENT_VERSION }}-${{ env.LATEST_VERSION }}
          base: main
          title: Upgrade ${{ matrix.dependency }} dependency ${{ env.CURRENT_VERSION }} -> ${{ env.LATEST_VERSION }}
          body: |
            This is auto-generated update from the K8ssandra upgrade GHA workflow.
            Check that CI passes correctly before merging this PR.
