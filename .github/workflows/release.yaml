---
name: Release Charts
on:
  push: 
    tags:
      - 'v*'
jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: 3.4.0
      YQ_VERSION: 3.4.1
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
      SHORT_VERSION: ${{ steps.get_short_version.outputs.SHORT_VERSION }}
      HELM_VERSION: ${{ env.HELM_VERSION}}
      YQ_VERSION: ${{ env.YQ_VERSION }}
    steps:
      - name: Cache bin path
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/bin
          key: ${{ runner.os }}-${{ env.HELM_VERSION }}-${{ env.YQ_VERSION }}
      - name: Download tools if needed
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir $HOME/bin
          curl -L https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz | \
            tar -xvzf - --strip-components 1 --directory $HOME/bin/ linux-amd64/helm

          curl -L https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 > $HOME/bin/yq
          chmod +x $HOME/bin/yq
      - name: Update PATH
        run: echo "$HOME/bin" >> $GITHUB_PATH
      - name: Validate tool versions
        run: |
          helm version
          yq -V
      - name: Get the version
        id: get_version
        run: echo "::set-output name=VERSION::${GITHUB_REF:10}"
      - name: Get the short version
        id: get_short_version
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: echo "::set-output name=SHORT_VERSION::${VERSION:1}"

  package:
    needs:
      - setup
    runs-on: ubuntu-latest
    steps: 
      - name: Cache bin path
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/bin
          key: ${{ runner.os }}-${{ needs.setup.outputs.HELM_VERSION }}-${{ needs.setup.outputs.YQ_VERSION }}
      - name: Update PATH
        run: echo "$HOME/bin" >> $GITHUB_PATH
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create working directory and copy charts
        run: |
          mkdir build
          cp -rv charts/* build/
      - name: Generate package archives
        run: |
          ls | while read c; do
            if [[ -d $c ]]; then
              helm package $c
            fi
          done
        working-directory: build
      - name: Archive packages as part of Workflow
        uses: actions/upload-artifact@v2
        with:
          name: charts
          path: build/*.tgz
  
  gh-release:
    needs:
      - setup
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url}}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.setup.outputs.VERSION }}
          release_name: ${{ needs.setup.outputs.VERSION }}
          draft: true
  
  gh-release-upload:
    needs:
      - setup
      - gh-release
      - package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart:
          - k8ssandra
    steps:
      - name: Download charts artifact
        uses: actions/download-artifact@v2
        with:
          name: charts
      - name: Upload chart package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.gh-release.outputs.RELEASE_UPLOAD_URL }}
          asset_path: ./${{ matrix.chart }}-${{ needs.setup.outputs.SHORT_VERSION }}.tgz
          asset_name: ${{ matrix.chart }}-${{ needs.setup.outputs.SHORT_VERSION }}.tgz
          asset_content_type: application/x-tar

  helm-release:
    needs:
      - package
    runs-on: ubuntu-latest
    steps:
      - name: Create build directory
        run: mkdir build
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: charts
          path: build
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Download current index from Google Cloud
        env:
          GCP_HELM_BUCKET_NAME: ${{ secrets.GCP_HELM_BUCKET_NAME }}
        run: gsutil cp gs://$GCP_HELM_BUCKET_NAME/index.yaml ./
        working-directory: build
      - name: Regenerate Helm index
        env:
          GCP_HELM_BUCKET_NAME: ${{ secrets.GCP_HELM_BUCKET_NAME }}
        run: helm repo index . --merge index.yaml --url "https://$GCP_HELM_BUCKET_NAME/"
        working-directory: build
      - name: Upload packages and index
        env:
          GCP_HELM_BUCKET_NAME: ${{ secrets.GCP_HELM_BUCKET_NAME }}
        run: |
          gsutil cp ./*.tgz gs://$GCP_HELM_BUCKET_NAME/
          gsutil cp ./index.yaml gs://$GCP_HELM_BUCKET_NAME/
        working-directory: build
