---
name: PR Checks

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'

jobs:
  lint-check:
    runs-on: ubuntu-latest
    steps:
      - name: Cache bin path
        id: cache
        uses: actions/cache@v2
        with:
          path: bin
          key: ${{ runner.os }}-${{ env.HELM_VERSION }}-${{ env.YQ_VERSION }}
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Update PATH
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Create env variables
        run: ./.github/scripts/env_variables.sh

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Add K8ssandra Helm repo
        run: |
          helm repo add k8ssandra https://helm.k8ssandra.io/stable
          helm repo update

      - name: Install yq and validate tool versions
        run: |
          scripts/install-yq.sh ${{ env.YQ_VERSION }}
          helm version
          yq -V
      
      - name: Update chart dependencies
        run: |
          scripts/update-helm-deps.sh
      - name: Setup working directory
        run: |
          mkdir build
          cp -rv charts/* build/
          find build/cass-operator/templates -name '*.yaml' | xargs sed -i -e 's/.Capabilities.APIVersions.Has "cert-manager.io\/v1"/true/g'
      - name: Lint charts
        run: |
          ls | while read c; do
            if [[ -d $c ]]; then
              helm lint $c

              if [[ $? -ne 0 ]]; then
                EXIT_CODE=$?
                echo "::error file=charts/$c::Error linting $c, check job output"
                exit $EXIT_CODE
              fi
            fi
          done
        working-directory: build

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Create env variables
        run: ./.github/scripts/env_variables.sh
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{Â env.GO_VERSION }}
        id: go
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}
      - name: Update chart dependencies
        run: |
          scripts/update-helm-deps.sh
      - name: Run unit tests
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          make test
