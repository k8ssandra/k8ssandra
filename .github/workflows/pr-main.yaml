---
on:
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: 3.4.0
      YQ_VERSION: 3.4.1
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.15
    outputs:
      HELM_VERSION: ${{ env.HELM_VERSION}}
      YQ_VERSION: ${{ env.YQ_VERSION }}
    steps:
      - name: Cache bin path
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/bin
          key: ${{ runner.os }}-${{ env.HELM_VERSION }}-${{ env.YQ_VERSION }}
      - name: Download tools if needed
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir $HOME/bin
          curl -L https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz | \
            tar -xvzf - --strip-components 1 --directory $HOME/bin/ linux-amd64/helm
          
          curl -L https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 > $HOME/bin/yq
          chmod +x $HOME/bin/yq
      - name: Update PATH
        run: |
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Validate tool versions
        run: |
          helm version
          yq -V
  
  lint-check:
    needs:
      - setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache bin path
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/bin
          key: ${{ runner.os }}-${{ needs.setup.outputs.HELM_VERSION }}-${{ needs.setup.outputs.YQ_VERSION }}
      - name: Update PATH
        run: |
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Setup working directory
        run: |
          mkdir build
          cp -rv charts/* build/
      - name: Lint charts
        run: |
          ls | while read c; do
            if [[ -d $c ]]; then
              helm lint $c

              if [[ $? -ne 0 ]]; then
                EXIT_CODE=$?
                echo "::error file=charts/$c::Error linting $c, check job output"
                exit $EXIT_CODE
              fi
            fi
          done
        working-directory: build

  unit-tests:
    needs:
      - setup
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: Run unit tests
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          make test
